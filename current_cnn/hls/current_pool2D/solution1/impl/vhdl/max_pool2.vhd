-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity max_pool2 is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of max_pool2 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "max_pool2,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=5645,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=40,HLS_SYN_FF=4134,HLS_SYN_LUT=4483,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv96_0 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv96_1 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal h : STD_LOGIC_VECTOR (31 downto 0);
    signal w : STD_LOGIC_VECTOR (31 downto 0);
    signal ch_in : STD_LOGIC_VECTOR (31 downto 0);
    signal in_r : STD_LOGIC_VECTOR (31 downto 0);
    signal out_r : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal exitcond_flatten1_reg_1344 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_flatten1_reg_1344_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal exitcond_flatten1_reg_1344_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal exitcond_flatten1_reg_1344_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal exitcond_flatten1_reg_1344_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal exitcond_flatten1_reg_1344_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_AW : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal exitcond_flatten1_reg_1344_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten1_reg_238 : STD_LOGIC_VECTOR (95 downto 0);
    signal indvar_flatten_reg_250 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_reg_261 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_272 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_272_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state10_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter2 : BOOLEAN;
    signal ap_sig_ioackin_gmem_ARREADY : STD_LOGIC;
    signal ap_block_state24_io : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal i_reg_272_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_272_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_272_pp0_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal j_reg_284 : STD_LOGIC_VECTOR (30 downto 0);
    signal ch_in_read_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal w_read_reg_1256 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_read_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1270 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_3_reg_1275 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_15_reg_1280 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lshr_f6_reg_1285 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_fu_386_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1290 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal bound_fu_435_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_reg_1302 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_2_cast_fu_453_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_2_cast_reg_1318 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal tmp_3_cast_fu_456_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_3_cast_reg_1323 : STD_LOGIC_VECTOR (32 downto 0);
    signal grp_fu_447_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal bound4_reg_1334 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_mid_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid_reg_1339 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten1_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal exitcond_flatten_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1348 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1348_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1348_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1348_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1348_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten_reg_1348_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_fu_491_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_mid1_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_cast_mid2_fu_498_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal n_cast_mid2_reg_1367 : STD_LOGIC_VECTOR (30 downto 0);
    signal n_op_fu_506_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal n_op_reg_1372 : STD_LOGIC_VECTOR (30 downto 0);
    signal indvar_flatten_op_fu_512_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_op_reg_1377 : STD_LOGIC_VECTOR (63 downto 0);
    signal n_cast_mid2_cast_fu_518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_cast_mid2_cast_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state9_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_24_fu_521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_1387 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_s_fu_526_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_s_reg_1393 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_s_reg_1393_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal i_s_reg_1393_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal i_s_reg_1393_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_28_fu_532_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_28_reg_1398 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_25_fu_553_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_1403 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_1408 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_mid_fu_563_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_mid_reg_1413 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state11_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state39_io : BOOLEAN;
    signal ap_block_state46_pp0_stage3_iter5 : BOOLEAN;
    signal ap_sig_ioackin_gmem_AWREADY : STD_LOGIC;
    signal ap_block_state46_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp_13_fu_570_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_1419 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_mid2_fu_607_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_mid2_reg_1425 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state12_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state19_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state26_io : BOOLEAN;
    signal ap_block_state33_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage4_iter5 : BOOLEAN;
    signal ap_sig_ioackin_gmem_WREADY : STD_LOGIC;
    signal ap_block_state47_io : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal p_mid2_reg_1425_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal p_mid2_reg_1425_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal p_mid2_reg_1425_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal p_mid2_reg_1425_pp0_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_8_mid2_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_mid2_reg_1431 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_mid2_fu_634_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_mid2_reg_1436 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_641_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_1442 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_1442_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_reg_1447 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_1453 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_1_fu_675_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal n_1_reg_1459 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_16_fu_682_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_1464 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state13_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state20_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state27_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state34_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state41_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp_16_reg_1464_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_1_reg_1469 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_705_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_1475 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_1475_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_709_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_1481 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_1481_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_1487 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next1_fu_717_p2 : STD_LOGIC_VECTOR (95 downto 0);
    signal indvar_flatten_next1_reg_1492 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_block_state14_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_state21_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state28_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state35_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state42_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state49_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal gmem_addr_2_reg_1497 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_741_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1503 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1503_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1503_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1503_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_1503_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_next_fu_745_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal indvar_flatten_next_reg_1508 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_3_reg_1513 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_read_reg_1519 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_1_read_reg_1525 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_2_read_reg_1531 : STD_LOGIC_VECTOR (31 downto 0);
    signal max1_fu_851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max1_reg_1537 : STD_LOGIC_VECTOR (31 downto 0);
    signal max1_reg_1537_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_3_read_reg_1543 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_reg_1549 : STD_LOGIC_VECTOR (31 downto 0);
    signal max2_fu_957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal max2_reg_1555 : STD_LOGIC_VECTOR (31 downto 0);
    signal max2_reg_1555_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_5_reg_1561 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_4_read_reg_1567 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_5_read_reg_1573 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_1057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_1579 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_6_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_mid1_fu_1090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_mid1_reg_1590 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1099_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1597 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_1602 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_lshr_f1_reg_1607 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_6_mid2_fu_1210_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_mid2_reg_1612 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_7_reg_1617 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_addr_6_read_reg_1623 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter5_state44 : STD_LOGIC;
    signal ap_phi_mux_indvar_flatten1_phi_fu_242_p4 : STD_LOGIC_VECTOR (95 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_254_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_n_phi_fu_265_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_phi_mux_i_phi_fu_276_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_phi_mux_j_phi_fu_288_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal in2_sum_cast_fu_655_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2_sum5_cast_fu_695_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2_sum6_cast_fu_731_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2_sum7_cast_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2_sum8_cast_fu_865_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2_sum9_cast_fu_971_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal in2_sum1_cast_fu_1077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal out4_sum_cast_fu_1239_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_gmem_ARREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_reg_ioackin_gmem_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_gmem_WREADY : STD_LOGIC := '0';
    signal grp_fu_296_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_320_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f6_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_346_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_fu_352_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_fu_362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f_fu_372_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_17_fu_338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t_fu_366_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_382_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg3_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr4_fu_399_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_4_fu_409_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_t5_fu_413_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_435_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_fu_435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_447_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_447_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_cast_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_cast_mid_fu_483_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_24_fu_521_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_mid2_fu_539_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_mid2_fu_547_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_574_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_602_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_8_mid_fu_588_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_mid1_fu_613_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_mid_fu_595_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_mid1_fu_628_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_cast_fu_646_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum_fu_650_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal n_mid29_op_fu_669_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_17_cast_fu_686_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum5_fu_690_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp1_fu_713_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_21_cast_fu_723_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum6_fu_726_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_23_cast_fu_751_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum7_fu_754_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal in_load_to_int_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_load_1_to_int_fu_786_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_772_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_fu_782_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_789_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_799_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs4_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs3_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max1_cast_cast_fu_857_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum8_fu_860_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal in_load_2_to_int_fu_875_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_load_3_to_int_fu_892_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_878_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_888_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs6_fu_915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs5_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_895_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_fu_905_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs8_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs7_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max2_cast_cast_fu_963_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum9_fu_966_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal in_load_4_to_int_fu_981_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_load_5_to_int_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_984_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_994_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs1_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs9_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1001_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_1011_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal notrhs2_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal notlhs1_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_fu_1063_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_cast_cast_fu_1068_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal in2_sum1_fu_1072_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_5_mid1_fu_1090_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_5_fu_1099_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg9_fu_1122_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_fu_1127_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_23_fu_1137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg_t1_fu_1141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1147_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_neg9_mid1_fu_1164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr1_mid1_fu_1169_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_33_fu_1179_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_lshr_f1_mid1_fu_1189_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_32_fu_1157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_neg_t1_mid1_fu_1183_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_1198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_mid1_fu_1202_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1150_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_mid2_cast_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1220_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_1224_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_cast_fu_1230_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal out4_sum_fu_1234_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal bound_fu_435_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound_fu_435_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_447_p00 : STD_LOGIC_VECTOR (95 downto 0);
    signal grp_fu_447_p10 : STD_LOGIC_VECTOR (95 downto 0);
    signal tmp_24_fu_521_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1099_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_mid1_fu_1090_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_1646 : BOOLEAN;
    signal ap_condition_1650 : BOOLEAN;
    signal ap_condition_799 : BOOLEAN;
    signal ap_condition_813 : BOOLEAN;
    signal ap_condition_823 : BOOLEAN;
    signal ap_condition_833 : BOOLEAN;
    signal ap_condition_857 : BOOLEAN;
    signal ap_condition_869 : BOOLEAN;
    signal ap_condition_888 : BOOLEAN;

    component max_pool2_fcmp_32bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component max_pool2_mul_64ncud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (95 downto 0) );
    end component;


    component max_pool2_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        h : OUT STD_LOGIC_VECTOR (31 downto 0);
        w : OUT STD_LOGIC_VECTOR (31 downto 0);
        ch_in : OUT STD_LOGIC_VECTOR (31 downto 0);
        in_r : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_r : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component max_pool2_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    max_pool2_AXILiteS_s_axi_U : component max_pool2_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        h => h,
        w => w,
        ch_in => ch_in,
        in_r => in_r,
        out_r => out_r);

    max_pool2_gmem_m_axi_U : component max_pool2_gmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 32,
        USER_AW => 32,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_addr_7_reg_1617,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_addr_6_read_reg_1623,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv4_F,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);

    max_pool2_fcmp_32bkb_U1 : component max_pool2_fcmp_32bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        din0 => grp_fu_296_p0,
        din1 => grp_fu_296_p1,
        opcode => ap_const_lv5_2,
        dout => grp_fu_296_p2);

    max_pool2_mul_64ncud_U2 : component max_pool2_mul_64ncud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 96)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_447_p0,
        din1 => grp_fu_447_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_447_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter5_state44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter5_state44) and (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter4;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (gmem_ARREADY = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (gmem_ARREADY = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)))) then 
                    ap_reg_ioackin_gmem_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_boolean_1 = ap_condition_1646)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage3_11001)) then 
                        ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (gmem_AWREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_gmem_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_gmem_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
            else
                if ((ap_const_boolean_1 = ap_condition_1650)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage4_11001)) then 
                        ap_reg_ioackin_gmem_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (gmem_WREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_gmem_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    i_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then 
                i_reg_272 <= tmp_28_reg_1398;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_reg_272 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    indvar_flatten1_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then 
                indvar_flatten1_reg_238 <= indvar_flatten_next1_reg_1492;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten1_reg_238 <= ap_const_lv96_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then 
                indvar_flatten_reg_250 <= indvar_flatten_next_reg_1508;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                indvar_flatten_reg_250 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    j_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then 
                j_reg_284 <= p_mid2_reg_1425;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                j_reg_284 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    n_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then 
                n_reg_261 <= n_1_reg_1459;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                n_reg_261 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                bound4_reg_1334 <= grp_fu_447_p2;
                    tmp_2_cast_reg_1318(29 downto 0) <= tmp_2_cast_fu_453_p1(29 downto 0);
                    tmp_3_cast_reg_1323(29 downto 0) <= tmp_3_cast_fu_456_p1(29 downto 0);
                tmp_mid_reg_1339 <= tmp_mid_fu_459_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                bound_reg_1302 <= bound_fu_435_p2;
                tmp_reg_1296 <= tmp_fu_422_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                ch_in_read_reg_1249 <= ch_in;
                h_read_reg_1264 <= h;
                p_lshr_f6_reg_1285 <= p_lshr_f6_fu_328_p1(31 downto 1);
                tmp_15_reg_1280 <= tmp_15_fu_320_p1(31 downto 31);
                tmp_1_reg_1290 <= tmp_1_fu_386_p3;
                tmp_2_reg_1270 <= out_r(31 downto 2);
                tmp_3_reg_1275 <= in_r(31 downto 2);
                w_read_reg_1256 <= w;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_flatten1_reg_1344 <= exitcond_flatten1_fu_473_p2;
                exitcond_flatten1_reg_1344_pp0_iter1_reg <= exitcond_flatten1_reg_1344;
                exitcond_flatten1_reg_1344_pp0_iter2_reg <= exitcond_flatten1_reg_1344_pp0_iter1_reg;
                exitcond_flatten1_reg_1344_pp0_iter3_reg <= exitcond_flatten1_reg_1344_pp0_iter2_reg;
                exitcond_flatten1_reg_1344_pp0_iter4_reg <= exitcond_flatten1_reg_1344_pp0_iter3_reg;
                exitcond_flatten1_reg_1344_pp0_iter5_reg <= exitcond_flatten1_reg_1344_pp0_iter4_reg;
                exitcond_flatten1_reg_1344_pp0_iter6_reg <= exitcond_flatten1_reg_1344_pp0_iter5_reg;
                exitcond_flatten_reg_1348_pp0_iter1_reg <= exitcond_flatten_reg_1348;
                exitcond_flatten_reg_1348_pp0_iter2_reg <= exitcond_flatten_reg_1348_pp0_iter1_reg;
                exitcond_flatten_reg_1348_pp0_iter3_reg <= exitcond_flatten_reg_1348_pp0_iter2_reg;
                exitcond_flatten_reg_1348_pp0_iter4_reg <= exitcond_flatten_reg_1348_pp0_iter3_reg;
                exitcond_flatten_reg_1348_pp0_iter5_reg <= exitcond_flatten_reg_1348_pp0_iter4_reg;
                max1_reg_1537_pp0_iter3_reg <= max1_reg_1537;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten1_fu_473_p2 = ap_const_lv1_0))) then
                exitcond_flatten_reg_1348 <= exitcond_flatten_fu_478_p2;
                indvar_flatten_op_reg_1377 <= indvar_flatten_op_fu_512_p2;
                n_cast_mid2_reg_1367 <= n_cast_mid2_fu_498_p3;
                n_op_reg_1372 <= n_op_fu_506_p2;
                tmp_mid1_reg_1359 <= tmp_mid1_fu_491_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then
                gmem_addr_1_read_reg_1525 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                gmem_addr_1_reg_1469 <= in2_sum5_cast_fu_695_p1(32 - 1 downto 0);
                tmp1_reg_1487 <= tmp1_fu_713_p2;
                tmp_16_reg_1464 <= tmp_16_fu_682_p2;
                tmp_20_reg_1475 <= tmp_20_fu_705_p2;
                tmp_22_reg_1481 <= tmp_22_fu_709_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then
                gmem_addr_2_read_reg_1531 <= gmem_RDATA;
                max1_reg_1537 <= max1_fu_851_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                gmem_addr_2_reg_1497 <= in2_sum6_cast_fu_731_p1(32 - 1 downto 0);
                tmp_29_reg_1503 <= tmp_29_fu_741_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0))) then
                gmem_addr_3_read_reg_1543 <= gmem_RDATA;
                gmem_addr_4_reg_1549 <= in2_sum8_cast_fu_865_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                gmem_addr_3_reg_1513 <= in2_sum7_cast_fu_759_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0))) then
                gmem_addr_4_read_reg_1567 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0))) then
                gmem_addr_5_read_reg_1573 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0))) then
                gmem_addr_5_reg_1561 <= in2_sum9_cast_fu_971_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then
                gmem_addr_6_read_reg_1623 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0))) then
                gmem_addr_6_reg_1584 <= in2_sum1_cast_fu_1077_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then
                gmem_addr_7_reg_1617 <= out4_sum_cast_fu_1239_p1(32 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then
                gmem_addr_read_reg_1519 <= gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                gmem_addr_reg_1447 <= in2_sum_cast_fu_655_p1(32 - 1 downto 0);
                tmp_14_reg_1442 <= tmp_14_fu_641_p2;
                tmp_19_reg_1453 <= tmp_19_fu_665_p2;
                    tmp_8_mid2_reg_1431(31 downto 1) <= tmp_8_mid2_fu_621_p3(31 downto 1);
                    tmp_9_mid2_reg_1436(31 downto 1) <= tmp_9_mid2_fu_634_p3(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                i_reg_272_pp0_iter1_reg <= i_reg_272;
                i_reg_272_pp0_iter2_reg <= i_reg_272_pp0_iter1_reg;
                i_reg_272_pp0_iter3_reg <= i_reg_272_pp0_iter2_reg;
                i_reg_272_pp0_iter4_reg <= i_reg_272_pp0_iter3_reg;
                i_s_reg_1393_pp0_iter1_reg <= i_s_reg_1393;
                i_s_reg_1393_pp0_iter2_reg <= i_s_reg_1393_pp0_iter1_reg;
                i_s_reg_1393_pp0_iter3_reg <= i_s_reg_1393_pp0_iter2_reg;
                max2_reg_1555_pp0_iter3_reg <= max2_reg_1555;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                i_s_reg_1393 <= i_s_fu_526_p2;
                tmp_18_reg_1408 <= tmp_18_fu_558_p2;
                tmp_25_reg_1403 <= tmp_25_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                indvar_flatten_next1_reg_1492 <= indvar_flatten_next1_fu_717_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                indvar_flatten_next_reg_1508 <= indvar_flatten_next_fu_745_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                j_mid_reg_1413 <= j_mid_fu_563_p3;
                tmp_13_reg_1419 <= tmp_13_fu_570_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0))) then
                max2_reg_1555 <= max2_fu_957_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                n_1_reg_1459 <= n_1_fu_675_p3;
                p_mid2_reg_1425 <= p_mid2_fu_607_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                    n_cast_mid2_cast_reg_1382(30 downto 0) <= n_cast_mid2_cast_fu_518_p1(30 downto 0);
                tmp_24_reg_1387 <= tmp_24_fu_521_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten_reg_1348_pp0_iter4_reg = ap_const_lv1_0))) then
                p_lshr_f1_reg_1607 <= tmp_5_fu_1099_p2(31 downto 1);
                tmp_21_reg_1602 <= tmp_5_fu_1099_p2(31 downto 31);
                tmp_5_reg_1597 <= tmp_5_fu_1099_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                p_mid2_reg_1425_pp0_iter1_reg <= p_mid2_reg_1425;
                p_mid2_reg_1425_pp0_iter2_reg <= p_mid2_reg_1425_pp0_iter1_reg;
                p_mid2_reg_1425_pp0_iter3_reg <= p_mid2_reg_1425_pp0_iter2_reg;
                p_mid2_reg_1425_pp0_iter4_reg <= p_mid2_reg_1425_pp0_iter3_reg;
                tmp_14_reg_1442_pp0_iter1_reg <= tmp_14_reg_1442;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_16_reg_1464_pp0_iter1_reg <= tmp_16_reg_1464;
                tmp_20_reg_1475_pp0_iter1_reg <= tmp_20_reg_1475;
                tmp_22_reg_1481_pp0_iter1_reg <= tmp_22_reg_1481;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then
                tmp_28_reg_1398 <= tmp_28_fu_532_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_29_reg_1503_pp0_iter1_reg <= tmp_29_reg_1503;
                tmp_29_reg_1503_pp0_iter2_reg <= tmp_29_reg_1503_pp0_iter1_reg;
                tmp_29_reg_1503_pp0_iter3_reg <= tmp_29_reg_1503_pp0_iter2_reg;
                tmp_29_reg_1503_pp0_iter4_reg <= tmp_29_reg_1503_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_56_reg_1579 <= tmp_56_fu_1057_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_flatten_reg_1348_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0))) then
                tmp_5_mid1_reg_1590 <= tmp_5_mid1_fu_1090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then
                tmp_6_mid2_reg_1612 <= tmp_6_mid2_fu_1210_p3;
            end if;
        end if;
    end process;
    tmp_2_cast_reg_1318(32 downto 30) <= "000";
    tmp_3_cast_reg_1323(32 downto 30) <= "000";
    n_cast_mid2_cast_reg_1382(31) <= '0';
    tmp_8_mid2_reg_1431(0) <= '0';
    tmp_9_mid2_reg_1436(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_block_pp0_stage6_subdone, ap_block_pp0_stage2_subdone, ap_condition_pp0_exit_iter5_state44, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter5_state44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter5_state44) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(13);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state53 <= ap_CS_fsm(14);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_00001_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID)
    begin
                ap_block_pp0_stage0_00001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_01001_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID)
    begin
                ap_block_pp0_stage0_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state15_io)
    begin
                ap_block_pp0_stage0_11001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state15_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_enable_reg_pp0_iter2, gmem_RVALID, ap_block_state15_io)
    begin
                ap_block_pp0_stage0_subdone <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state15_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten1_reg_1344_pp0_iter2_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage1_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, exitcond_flatten1_reg_1344_pp0_iter2_reg, gmem_RVALID, ap_block_state16_io)
    begin
                ap_block_pp0_stage1_11001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state16_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, exitcond_flatten1_reg_1344_pp0_iter2_reg, gmem_RVALID, ap_block_state16_io)
    begin
                ap_block_pp0_stage1_subdone <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state16_io) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_00001_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_enable_reg_pp0_iter6, exitcond_flatten1_reg_1344_pp0_iter6_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage2_00001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_enable_reg_pp0_iter6, exitcond_flatten1_reg_1344_pp0_iter6_reg, gmem_RVALID, gmem_BVALID)
    begin
                ap_block_pp0_stage2_01001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_enable_reg_pp0_iter6, exitcond_flatten1_reg_1344_pp0_iter6_reg, gmem_RVALID, gmem_BVALID, ap_block_state24_io)
    begin
                ap_block_pp0_stage2_11001 <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state24_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_enable_reg_pp0_iter6, exitcond_flatten1_reg_1344_pp0_iter6_reg, gmem_RVALID, gmem_BVALID, ap_block_state24_io)
    begin
                ap_block_pp0_stage2_subdone <= (((gmem_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state24_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage3_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg, gmem_RVALID, ap_block_state39_io, ap_block_state46_io)
    begin
                ap_block_pp0_stage3_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state46_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0)))) or ((ap_const_boolean_1 = ap_block_state39_io) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg, gmem_RVALID, ap_block_state39_io, ap_block_state46_io)
    begin
                ap_block_pp0_stage3_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state46_io) or ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0)))) or ((ap_const_boolean_1 = ap_block_state39_io) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage4_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_enable_reg_pp0_iter5, gmem_RVALID, ap_block_state26_io, ap_block_state47_io)
    begin
                ap_block_pp0_stage4_11001 <= (((ap_const_boolean_1 = ap_block_state47_io) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state26_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_enable_reg_pp0_iter5, gmem_RVALID, ap_block_state26_io, ap_block_state47_io)
    begin
                ap_block_pp0_stage4_subdone <= (((ap_const_boolean_1 = ap_block_state47_io) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state26_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_00001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage5_00001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage5_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID, ap_block_state13_io)
    begin
                ap_block_pp0_stage5_11001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state13_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID, ap_block_state13_io)
    begin
                ap_block_pp0_stage5_subdone <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state13_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_pp0_stage6_01001 <= ((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID, ap_block_state14_io)
    begin
                ap_block_pp0_stage6_11001 <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state14_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID, ap_block_state14_io)
    begin
                ap_block_pp0_stage6_subdone <= (((gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_1 = ap_block_state14_io) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_io_assign_proc : process(exitcond_flatten1_reg_1344, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state13_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0));
    end process;

        ap_block_state13_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_io_assign_proc : process(exitcond_flatten1_reg_1344, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state14_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0));
    end process;

        ap_block_state14_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state15_io_assign_proc : process(exitcond_flatten1_reg_1344, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state15_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0));
    end process;

        ap_block_state15_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_io_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state16_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state16_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp0_stage5_iter1_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state20_pp0_stage5_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state21_pp0_stage6_iter1_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state21_pp0_stage6_iter1 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state22_pp0_stage0_iter2_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter1_reg, gmem_RVALID)
    begin
                ap_block_state22_pp0_stage0_iter2 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_block_state23_pp0_stage1_iter2_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter2_reg, gmem_RVALID)
    begin
                ap_block_state23_pp0_stage1_iter2 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_block_state24_io_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state24_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state24_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state26_io_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state26_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0));
    end process;

        ap_block_state26_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state31_pp0_stage2_iter3_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter3_reg, gmem_RVALID)
    begin
                ap_block_state31_pp0_stage2_iter3 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state32_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state33_pp0_stage4_iter3_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter3_reg, gmem_RVALID)
    begin
                ap_block_state33_pp0_stage4_iter3 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0));
    end process;

        ap_block_state34_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state39_io_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter4_reg, ap_sig_ioackin_gmem_ARREADY)
    begin
                ap_block_state39_io <= ((ap_sig_ioackin_gmem_ARREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0));
    end process;

        ap_block_state39_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state46_io_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter5_reg, ap_sig_ioackin_gmem_AWREADY)
    begin
                ap_block_state46_io <= ((ap_sig_ioackin_gmem_AWREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_block_state46_pp0_stage3_iter5_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter5_reg, gmem_RVALID)
    begin
                ap_block_state46_pp0_stage3_iter5 <= ((gmem_RVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_block_state47_io_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter5_reg, ap_sig_ioackin_gmem_WREADY)
    begin
                ap_block_state47_io <= ((ap_sig_ioackin_gmem_WREADY = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0));
    end process;

        ap_block_state47_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state52_pp0_stage2_iter6_assign_proc : process(exitcond_flatten1_reg_1344_pp0_iter6_reg, gmem_BVALID)
    begin
                ap_block_state52_pp0_stage2_iter6 <= ((gmem_BVALID = ap_const_logic_0) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0));
    end process;

        ap_block_state8_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1646_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg)
    begin
                ap_condition_1646 <= ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_condition_1650_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg)
    begin
                ap_condition_1650 <= ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0));
    end process;


    ap_condition_799_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter0, exitcond_flatten1_reg_1344, ap_block_pp0_stage5_01001)
    begin
                ap_condition_799 <= ((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0));
    end process;


    ap_condition_813_assign_proc : process(ap_enable_reg_pp0_iter0, exitcond_flatten1_reg_1344, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_01001)
    begin
                ap_condition_813 <= ((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0));
    end process;


    ap_condition_823_assign_proc : process(exitcond_flatten1_reg_1344, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_01001)
    begin
                ap_condition_823 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0));
    end process;


    ap_condition_833_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
                ap_condition_833 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_condition_857_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001)
    begin
                ap_condition_857 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_869_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_01001)
    begin
                ap_condition_869 <= ((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_888_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter4, exitcond_flatten1_reg_1344_pp0_iter4_reg, ap_block_pp0_stage3_01001)
    begin
                ap_condition_888 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter5_state44_assign_proc : process(ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter5_state44 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter5_state44 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_phi_fu_276_p4_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, i_reg_272, tmp_28_reg_1398)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_i_phi_fu_276_p4 <= tmp_28_reg_1398;
        else 
            ap_phi_mux_i_phi_fu_276_p4 <= i_reg_272;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten1_phi_fu_242_p4_assign_proc : process(exitcond_flatten1_reg_1344, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten1_reg_238, indvar_flatten_next1_reg_1492)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten1_phi_fu_242_p4 <= indvar_flatten_next1_reg_1492;
        else 
            ap_phi_mux_indvar_flatten1_phi_fu_242_p4 <= indvar_flatten1_reg_238;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_254_p4_assign_proc : process(exitcond_flatten1_reg_1344, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_reg_250, indvar_flatten_next_reg_1508)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_254_p4 <= indvar_flatten_next_reg_1508;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_254_p4 <= indvar_flatten_reg_250;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_288_p4_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, j_reg_284, p_mid2_reg_1425)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_j_phi_fu_288_p4 <= p_mid2_reg_1425;
        else 
            ap_phi_mux_j_phi_fu_288_p4 <= j_reg_284;
        end if; 
    end process;


    ap_phi_mux_n_phi_fu_265_p4_assign_proc : process(exitcond_flatten1_reg_1344, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, n_reg_261, n_1_reg_1459)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0))) then 
            ap_phi_mux_n_phi_fu_265_p4 <= n_1_reg_1459;
        else 
            ap_phi_mux_n_phi_fu_265_p4 <= n_reg_261;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state53)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_ioackin_gmem_ARREADY_assign_proc : process(gmem_ARREADY, ap_reg_ioackin_gmem_ARREADY)
    begin
        if ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_ARREADY <= gmem_ARREADY;
        else 
            ap_sig_ioackin_gmem_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem_AWREADY_assign_proc : process(gmem_AWREADY, ap_reg_ioackin_gmem_AWREADY)
    begin
        if ((ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_AWREADY <= gmem_AWREADY;
        else 
            ap_sig_ioackin_gmem_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_gmem_WREADY_assign_proc : process(gmem_WREADY, ap_reg_ioackin_gmem_WREADY)
    begin
        if ((ap_reg_ioackin_gmem_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_gmem_WREADY <= gmem_WREADY;
        else 
            ap_sig_ioackin_gmem_WREADY <= ap_const_logic_1;
        end if; 
    end process;

    bound_fu_435_p0 <= bound_fu_435_p00(32 - 1 downto 0);
    bound_fu_435_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ch_in_read_reg_1249),64));
    bound_fu_435_p1 <= bound_fu_435_p10(32 - 1 downto 0);
    bound_fu_435_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_1290),64));
    bound_fu_435_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_435_p0) * unsigned(bound_fu_435_p1), 64));
    exitcond_flatten1_fu_473_p2 <= "1" when (ap_phi_mux_indvar_flatten1_phi_fu_242_p4 = bound4_reg_1334) else "0";
    exitcond_flatten_fu_478_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_254_p4 = bound_reg_1302) else "0";

    gmem_ARADDR_assign_proc : process(gmem_addr_reg_1447, gmem_addr_1_reg_1469, gmem_addr_2_reg_1497, gmem_addr_3_reg_1513, gmem_addr_4_reg_1549, gmem_addr_5_reg_1561, gmem_addr_6_reg_1584, ap_reg_ioackin_gmem_ARREADY, ap_condition_799, ap_condition_813, ap_condition_823, ap_condition_833, ap_condition_857, ap_condition_869, ap_condition_888)
    begin
        if ((ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0)) then
            if ((ap_const_boolean_1 = ap_condition_888)) then 
                gmem_ARADDR <= gmem_addr_6_reg_1584;
            elsif ((ap_const_boolean_1 = ap_condition_869)) then 
                gmem_ARADDR <= gmem_addr_5_reg_1561;
            elsif ((ap_const_boolean_1 = ap_condition_857)) then 
                gmem_ARADDR <= gmem_addr_4_reg_1549;
            elsif ((ap_const_boolean_1 = ap_condition_833)) then 
                gmem_ARADDR <= gmem_addr_3_reg_1513;
            elsif ((ap_const_boolean_1 = ap_condition_823)) then 
                gmem_ARADDR <= gmem_addr_2_reg_1497;
            elsif ((ap_const_boolean_1 = ap_condition_813)) then 
                gmem_ARADDR <= gmem_addr_1_reg_1469;
            elsif ((ap_const_boolean_1 = ap_condition_799)) then 
                gmem_ARADDR <= gmem_addr_reg_1447;
            else 
                gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter0, exitcond_flatten1_reg_1344, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter4, exitcond_flatten1_reg_1344_pp0_iter4_reg, ap_reg_ioackin_gmem_ARREADY, ap_block_pp0_stage5_01001, ap_block_pp0_stage6_01001, ap_block_pp0_stage0_01001, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage4_01001, ap_block_pp0_stage3_01001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_01001) and (ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg, ap_block_pp0_stage3_01001, ap_reg_ioackin_gmem_AWREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_01001) and (ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then 
            gmem_AWVALID <= ap_const_logic_1;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter6, exitcond_flatten1_reg_1344_pp0_iter6_reg, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0))) then 
            gmem_BREADY <= ap_const_logic_1;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg, ap_block_pp0_stage2_11001, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)))) then 
            gmem_RREADY <= ap_const_logic_1;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg, ap_block_pp0_stage4_01001, ap_reg_ioackin_gmem_WREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_01001) and (ap_reg_ioackin_gmem_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then 
            gmem_WVALID <= ap_const_logic_1;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_pp0_stage5, ap_enable_reg_pp0_iter0, ap_block_pp0_stage5, exitcond_flatten1_reg_1344, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter4, ap_block_pp0_stage3, exitcond_flatten1_reg_1344_pp0_iter4_reg)
    begin
        if ((((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten1_reg_1344 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_enable_reg_pp0_iter6, exitcond_flatten1_reg_1344_pp0_iter6_reg)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter6_reg = ap_const_lv1_0))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_enable_reg_pp0_iter1, exitcond_flatten1_reg_1344_pp0_iter1_reg, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, exitcond_flatten1_reg_1344_pp0_iter2_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_enable_reg_pp0_iter3, exitcond_flatten1_reg_1344_pp0_iter3_reg, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (exitcond_flatten1_reg_1344_pp0_iter3_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (exitcond_flatten1_reg_1344_pp0_iter2_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (exitcond_flatten1_reg_1344_pp0_iter1_reg = ap_const_lv1_0)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_WREADY, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_enable_reg_pp0_iter5, exitcond_flatten1_reg_1344_pp0_iter5_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (exitcond_flatten1_reg_1344_pp0_iter5_reg = ap_const_lv1_0))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_296_p0_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_enable_reg_pp0_iter3, gmem_addr_read_reg_1519, gmem_addr_2_read_reg_1531, gmem_addr_4_read_reg_1567)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_296_p0 <= gmem_addr_4_read_reg_1567;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_296_p0 <= gmem_addr_2_read_reg_1531;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_296_p0 <= gmem_addr_read_reg_1519;
        else 
            grp_fu_296_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_296_p1_assign_proc : process(ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_enable_reg_pp0_iter3, gmem_addr_1_read_reg_1525, gmem_addr_3_read_reg_1543, gmem_addr_5_read_reg_1573)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage5))) then 
            grp_fu_296_p1 <= gmem_addr_5_read_reg_1573;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            grp_fu_296_p1 <= gmem_addr_3_read_reg_1543;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_fu_296_p1 <= gmem_addr_1_read_reg_1525;
        else 
            grp_fu_296_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_447_p0 <= grp_fu_447_p00(64 - 1 downto 0);
    grp_fu_447_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_reg_1302),96));
    grp_fu_447_p1 <= grp_fu_447_p10(32 - 1 downto 0);
    grp_fu_447_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1296),96));
    i_s_fu_526_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(ap_phi_mux_i_phi_fu_276_p4));
        in2_sum1_cast_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum1_fu_1072_p2),64));

    in2_sum1_fu_1072_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(tmp_27_cast_cast_fu_1068_p1));
        in2_sum5_cast_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum5_fu_690_p2),64));

    in2_sum5_fu_690_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(tmp_17_cast_fu_686_p1));
        in2_sum6_cast_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum6_fu_726_p2),64));

    in2_sum6_fu_726_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(tmp_21_cast_fu_723_p1));
        in2_sum7_cast_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum7_fu_754_p2),64));

    in2_sum7_fu_754_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(tmp_23_cast_fu_751_p1));
        in2_sum8_cast_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum8_fu_860_p2),64));

    in2_sum8_fu_860_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(max1_cast_cast_fu_857_p1));
        in2_sum9_cast_fu_971_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum9_fu_966_p2),64));

    in2_sum9_fu_966_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(max2_cast_cast_fu_963_p1));
        in2_sum_cast_fu_655_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(in2_sum_fu_650_p2),64));

    in2_sum_fu_650_p2 <= std_logic_vector(unsigned(tmp_3_cast_reg_1323) + unsigned(tmp_15_cast_fu_646_p1));
    in_load_1_to_int_fu_786_p1 <= gmem_addr_1_read_reg_1525;
    in_load_2_to_int_fu_875_p1 <= gmem_addr_2_read_reg_1531;
    in_load_3_to_int_fu_892_p1 <= gmem_addr_3_read_reg_1543;
    in_load_4_to_int_fu_981_p1 <= gmem_addr_4_read_reg_1567;
    in_load_5_to_int_fu_998_p1 <= gmem_addr_5_read_reg_1573;
    in_load_to_int_fu_769_p1 <= gmem_addr_read_reg_1519;
    indvar_flatten_next1_fu_717_p2 <= std_logic_vector(unsigned(indvar_flatten1_reg_238) + unsigned(ap_const_lv96_1));
    indvar_flatten_next_fu_745_p3 <= 
        ap_const_lv64_1 when (exitcond_flatten_reg_1348(0) = '1') else 
        indvar_flatten_op_reg_1377;
    indvar_flatten_op_fu_512_p2 <= std_logic_vector(unsigned(ap_const_lv64_1) + unsigned(ap_phi_mux_indvar_flatten_phi_fu_254_p4));
    j_1_fu_602_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(j_mid_reg_1413));
    j_mid_fu_563_p3 <= 
        ap_const_lv31_0 when (exitcond_flatten_reg_1348(0) = '1') else 
        ap_phi_mux_j_phi_fu_288_p4;
        max1_cast_cast_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(max1_reg_1537),33));

    max1_fu_851_p3 <= 
        tmp_14_reg_1442_pp0_iter1_reg when (tmp_38_fu_845_p2(0) = '1') else 
        tmp_16_reg_1464_pp0_iter1_reg;
        max2_cast_cast_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(max2_reg_1555),33));

    max2_fu_957_p3 <= 
        tmp_20_reg_1475_pp0_iter1_reg when (tmp_47_fu_951_p2(0) = '1') else 
        tmp_22_reg_1481_pp0_iter1_reg;
    n_1_fu_675_p3 <= 
        n_mid29_op_fu_669_p3 when (tmp_mid1_reg_1359(0) = '1') else 
        ap_const_lv31_1;
    n_cast_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_n_phi_fu_265_p4),32));
    n_cast_mid2_cast_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_cast_mid2_reg_1367),32));
    n_cast_mid2_fu_498_p3 <= 
        n_cast_mid_fu_483_p3 when (tmp_mid1_fu_491_p3(0) = '1') else 
        ap_const_lv31_0;
    n_cast_mid_fu_483_p3 <= 
        ap_const_lv31_0 when (exitcond_flatten_fu_478_p2(0) = '1') else 
        ap_phi_mux_n_phi_fu_265_p4;
    n_mid29_op_fu_669_p3 <= 
        ap_const_lv31_1 when (exitcond_flatten_reg_1348(0) = '1') else 
        n_op_reg_1372;
    n_op_fu_506_p2 <= std_logic_vector(unsigned(ap_const_lv31_1) + unsigned(ap_phi_mux_n_phi_fu_265_p4));
    notlhs1_fu_1033_p2 <= "0" when (tmp_50_fu_1001_p4 = ap_const_lv8_FF) else "1";
    notlhs3_fu_821_p2 <= "0" when (tmp_30_fu_789_p4 = ap_const_lv8_FF) else "1";
    notlhs5_fu_909_p2 <= "0" when (tmp_39_fu_878_p4 = ap_const_lv8_FF) else "1";
    notlhs7_fu_927_p2 <= "0" when (tmp_41_fu_895_p4 = ap_const_lv8_FF) else "1";
    notlhs9_fu_1015_p2 <= "0" when (tmp_48_fu_984_p4 = ap_const_lv8_FF) else "1";
    notlhs_fu_803_p2 <= "0" when (tmp_26_fu_772_p4 = ap_const_lv8_FF) else "1";
    notrhs1_fu_1021_p2 <= "1" when (tmp_58_fu_994_p1 = ap_const_lv23_0) else "0";
    notrhs2_fu_1039_p2 <= "1" when (tmp_59_fu_1011_p1 = ap_const_lv23_0) else "0";
    notrhs4_fu_827_p2 <= "1" when (tmp_49_fu_799_p1 = ap_const_lv23_0) else "0";
    notrhs6_fu_915_p2 <= "1" when (tmp_51_fu_888_p1 = ap_const_lv23_0) else "0";
    notrhs8_fu_933_p2 <= "1" when (tmp_57_fu_905_p1 = ap_const_lv23_0) else "0";
    notrhs_fu_809_p2 <= "1" when (tmp_42_fu_782_p1 = ap_const_lv23_0) else "0";
        out4_sum_cast_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out4_sum_fu_1234_p2),64));

    out4_sum_fu_1234_p2 <= std_logic_vector(unsigned(tmp_2_cast_reg_1318) + unsigned(tmp_32_cast_fu_1230_p1));
    p_lshr1_fu_1127_p4 <= p_neg9_fu_1122_p2(31 downto 1);
    p_lshr1_mid1_fu_1169_p4 <= p_neg9_mid1_fu_1164_p2(31 downto 1);
    p_lshr4_fu_399_p4 <= p_neg3_fu_394_p2(31 downto 1);
    p_lshr_f1_mid1_fu_1189_p4 <= tmp_5_mid1_reg_1590(31 downto 1);
    p_lshr_f6_fu_328_p1 <= h;
    p_lshr_f_fu_372_p1 <= w;
    p_lshr_f_fu_372_p4 <= p_lshr_f_fu_372_p1(31 downto 1);
    p_lshr_fu_352_p4 <= p_neg_fu_346_p2(31 downto 1);
    p_mid2_cast_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_mid2_reg_1425_pp0_iter4_reg),32));
    p_mid2_fu_607_p3 <= 
        j_mid_reg_1413 when (tmp_mid1_reg_1359(0) = '1') else 
        j_1_fu_602_p2;
    p_neg3_fu_394_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(h_read_reg_1264));
    p_neg9_fu_1122_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_5_reg_1597));
    p_neg9_mid1_fu_1164_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_5_mid1_reg_1590));
    p_neg_fu_346_p1 <= w;
    p_neg_fu_346_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_neg_fu_346_p1));
    p_neg_t1_fu_1141_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_23_fu_1137_p1));
    p_neg_t1_mid1_fu_1183_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_33_fu_1179_p1));
    p_neg_t5_fu_413_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_4_fu_409_p1));
    p_neg_t_fu_366_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(tmp_10_fu_362_p1));
    tmp1_fu_713_p0 <= n_cast_mid2_cast_reg_1382(31 - 1 downto 0);
    tmp1_fu_713_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &tmp1_fu_713_p0) * signed(tmp_reg_1296))), 32));
    tmp2_fu_1220_p2 <= std_logic_vector(unsigned(tmp_29_reg_1503_pp0_iter4_reg) + unsigned(tmp_6_mid2_reg_1612));
    tmp_10_fu_362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_fu_352_p4),32));
    tmp_11_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f_fu_372_p4),32));
    tmp_13_fu_570_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_25_reg_1403) * signed(w_read_reg_1256))), 32));
    tmp_14_fu_641_p2 <= std_logic_vector(unsigned(tmp_8_mid2_fu_621_p3) + unsigned(tmp_13_reg_1419));
        tmp_15_cast_fu_646_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_fu_641_p2),33));

    tmp_15_fu_320_p1 <= h;
    tmp_16_fu_682_p2 <= std_logic_vector(unsigned(tmp_9_mid2_reg_1436) + unsigned(tmp_13_reg_1419));
        tmp_17_cast_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_fu_682_p2),33));

    tmp_17_fu_338_p1 <= w;
    tmp_17_fu_338_p3 <= tmp_17_fu_338_p1(31 downto 31);
    tmp_18_fu_558_p2 <= std_logic_vector(unsigned(tmp_4_mid2_fu_547_p2) + unsigned(tmp_24_reg_1387));
    tmp_19_fu_665_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_reg_1408) * signed(w_read_reg_1256))), 32));
    tmp_1_fu_386_p3 <= 
        p_neg_t_fu_366_p2 when (tmp_17_fu_338_p3(0) = '1') else 
        tmp_11_fu_382_p1;
    tmp_20_fu_705_p2 <= std_logic_vector(unsigned(tmp_8_mid2_reg_1431) + unsigned(tmp_19_reg_1453));
        tmp_21_cast_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_reg_1475),33));

    tmp_22_fu_709_p2 <= std_logic_vector(unsigned(tmp_9_mid2_reg_1436) + unsigned(tmp_19_reg_1453));
        tmp_23_cast_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_reg_1481),33));

    tmp_23_fu_1137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr1_fu_1127_p4),32));
    tmp_24_fu_521_p0 <= tmp_24_fu_521_p00(31 - 1 downto 0);
    tmp_24_fu_521_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_cast_mid2_reg_1367),32));
    tmp_24_fu_521_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &tmp_24_fu_521_p0) * signed(h_read_reg_1264))), 32));
    tmp_25_fu_553_p2 <= std_logic_vector(unsigned(tmp_3_mid2_fu_539_p3) + unsigned(tmp_24_reg_1387));
    tmp_26_fu_772_p4 <= in_load_to_int_fu_769_p1(30 downto 23);
        tmp_27_cast_cast_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_60_fu_1063_p3),33));

    tmp_27_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f1_reg_1607),32));
    tmp_28_fu_532_p3 <= 
        i_s_fu_526_p2 when (exitcond_flatten_reg_1348(0) = '1') else 
        ap_phi_mux_i_phi_fu_276_p4;
    tmp_29_fu_741_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_1_reg_1290) * signed(tmp1_reg_1487))), 32));
    tmp_2_cast_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1270),33));
    tmp_30_fu_789_p4 <= in_load_1_to_int_fu_786_p1(30 downto 23);
    tmp_31_fu_1224_p2 <= std_logic_vector(unsigned(p_mid2_cast_fu_1217_p1) + unsigned(tmp2_fu_1220_p2));
        tmp_32_cast_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_31_fu_1224_p2),33));

    tmp_32_fu_1157_p3 <= tmp_5_mid1_reg_1590(31 downto 31);
    tmp_33_fu_1179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr1_mid1_fu_1169_p4),32));
    tmp_34_fu_815_p2 <= (notrhs_fu_809_p2 or notlhs_fu_803_p2);
    tmp_35_fu_833_p2 <= (notrhs4_fu_827_p2 or notlhs3_fu_821_p2);
    tmp_36_fu_839_p2 <= (tmp_35_fu_833_p2 and tmp_34_fu_815_p2);
    tmp_38_fu_845_p2 <= (tmp_36_fu_839_p2 and grp_fu_296_p2);
    tmp_39_fu_878_p4 <= in_load_2_to_int_fu_875_p1(30 downto 23);
    tmp_3_cast_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_1275),33));
    tmp_3_mid2_fu_539_p3 <= (tmp_28_fu_532_p3 & ap_const_lv1_0);
    tmp_40_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f1_mid1_fu_1189_p4),32));
    tmp_41_fu_895_p4 <= in_load_3_to_int_fu_892_p1(30 downto 23);
    tmp_42_fu_782_p1 <= in_load_to_int_fu_769_p1(23 - 1 downto 0);
    tmp_43_fu_921_p2 <= (notrhs6_fu_915_p2 or notlhs5_fu_909_p2);
    tmp_44_fu_939_p2 <= (notrhs8_fu_933_p2 or notlhs7_fu_927_p2);
    tmp_45_fu_945_p2 <= (tmp_44_fu_939_p2 and tmp_43_fu_921_p2);
    tmp_47_fu_951_p2 <= (tmp_45_fu_945_p2 and grp_fu_296_p2);
    tmp_48_fu_984_p4 <= in_load_4_to_int_fu_981_p1(30 downto 23);
    tmp_49_fu_799_p1 <= in_load_1_to_int_fu_786_p1(23 - 1 downto 0);
    tmp_4_fu_409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr4_fu_399_p4),32));
    tmp_4_mid2_fu_547_p2 <= (tmp_3_mid2_fu_539_p3 or ap_const_lv32_1);
    tmp_50_fu_1001_p4 <= in_load_5_to_int_fu_998_p1(30 downto 23);
    tmp_51_fu_888_p1 <= in_load_2_to_int_fu_875_p1(23 - 1 downto 0);
    tmp_52_fu_1027_p2 <= (notrhs1_fu_1021_p2 or notlhs9_fu_1015_p2);
    tmp_53_fu_1045_p2 <= (notrhs2_fu_1039_p2 or notlhs1_fu_1033_p2);
    tmp_54_fu_1051_p2 <= (tmp_53_fu_1045_p2 and tmp_52_fu_1027_p2);
    tmp_56_fu_1057_p2 <= (tmp_54_fu_1051_p2 and grp_fu_296_p2);
    tmp_57_fu_905_p1 <= in_load_3_to_int_fu_892_p1(23 - 1 downto 0);
    tmp_58_fu_994_p1 <= in_load_4_to_int_fu_981_p1(23 - 1 downto 0);
    tmp_59_fu_1011_p1 <= in_load_5_to_int_fu_998_p1(23 - 1 downto 0);
    tmp_5_fu_1099_p1 <= tmp_5_fu_1099_p10(31 - 1 downto 0);
    tmp_5_fu_1099_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_272_pp0_iter4_reg),32));
    tmp_5_fu_1099_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(w_read_reg_1256) * signed('0' &tmp_5_fu_1099_p1))), 32));
    tmp_5_mid1_fu_1090_p0 <= tmp_5_mid1_fu_1090_p00(31 - 1 downto 0);
    tmp_5_mid1_fu_1090_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_s_reg_1393_pp0_iter3_reg),32));
    tmp_5_mid1_fu_1090_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &tmp_5_mid1_fu_1090_p0) * signed(w_read_reg_1256))), 32));
    tmp_60_fu_1063_p3 <= 
        max1_reg_1537_pp0_iter3_reg when (tmp_56_reg_1579(0) = '1') else 
        max2_reg_1555_pp0_iter3_reg;
    tmp_6_fu_1150_p3 <= 
        p_neg_t1_fu_1141_p2 when (tmp_21_reg_1602(0) = '1') else 
        tmp_27_fu_1147_p1;
    tmp_6_mid1_fu_1202_p3 <= 
        p_neg_t1_mid1_fu_1183_p2 when (tmp_32_fu_1157_p3(0) = '1') else 
        tmp_40_fu_1198_p1;
    tmp_6_mid2_fu_1210_p3 <= 
        tmp_6_mid1_fu_1202_p3 when (exitcond_flatten_reg_1348_pp0_iter5_reg(0) = '1') else 
        tmp_6_fu_1150_p3;
    tmp_7_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_lshr_f6_reg_1285),32));
    tmp_8_fu_574_p3 <= (j_reg_284 & ap_const_lv1_0);
    tmp_8_mid1_fu_613_p3 <= (j_1_fu_602_p2 & ap_const_lv1_0);
    tmp_8_mid2_fu_621_p3 <= 
        tmp_8_mid_fu_588_p3 when (tmp_mid1_reg_1359(0) = '1') else 
        tmp_8_mid1_fu_613_p3;
    tmp_8_mid_fu_588_p3 <= 
        ap_const_lv32_0 when (exitcond_flatten_reg_1348(0) = '1') else 
        tmp_8_fu_574_p3;
    tmp_9_fu_582_p2 <= (tmp_8_fu_574_p3 or ap_const_lv32_1);
    tmp_9_mid1_fu_628_p2 <= (tmp_8_mid1_fu_613_p3 or ap_const_lv32_1);
    tmp_9_mid2_fu_634_p3 <= 
        tmp_9_mid_fu_595_p3 when (tmp_mid1_reg_1359(0) = '1') else 
        tmp_9_mid1_fu_628_p2;
    tmp_9_mid_fu_595_p3 <= 
        ap_const_lv32_1 when (exitcond_flatten_reg_1348(0) = '1') else 
        tmp_9_fu_582_p2;
    tmp_fu_422_p3 <= 
        p_neg_t5_fu_413_p2 when (tmp_15_reg_1280(0) = '1') else 
        tmp_7_fu_419_p1;
    tmp_mid1_fu_491_p3 <= 
        tmp_mid_reg_1339 when (exitcond_flatten_fu_478_p2(0) = '1') else 
        tmp_s_fu_468_p2;
    tmp_mid_fu_459_p2 <= "1" when (signed(ch_in_read_reg_1249) > signed(ap_const_lv32_0)) else "0";
    tmp_s_fu_468_p2 <= "1" when (signed(n_cast_fu_464_p1) < signed(ch_in_read_reg_1249)) else "0";
end behav;
