// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<57> conv::ap_ST_fsm_state1 = "1";
const sc_lv<57> conv::ap_ST_fsm_state2 = "10";
const sc_lv<57> conv::ap_ST_fsm_state3 = "100";
const sc_lv<57> conv::ap_ST_fsm_state4 = "1000";
const sc_lv<57> conv::ap_ST_fsm_state5 = "10000";
const sc_lv<57> conv::ap_ST_fsm_state6 = "100000";
const sc_lv<57> conv::ap_ST_fsm_state7 = "1000000";
const sc_lv<57> conv::ap_ST_fsm_state8 = "10000000";
const sc_lv<57> conv::ap_ST_fsm_state9 = "100000000";
const sc_lv<57> conv::ap_ST_fsm_state10 = "1000000000";
const sc_lv<57> conv::ap_ST_fsm_state11 = "10000000000";
const sc_lv<57> conv::ap_ST_fsm_state12 = "100000000000";
const sc_lv<57> conv::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<57> conv::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<57> conv::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<57> conv::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<57> conv::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<32> conv::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv::ap_const_lv32_2A = "101010";
const sc_lv<32> conv::ap_const_lv32_31 = "110001";
const sc_lv<32> conv::ap_const_lv32_32 = "110010";
const sc_lv<32> conv::ap_const_lv32_33 = "110011";
const sc_lv<32> conv::ap_const_lv32_38 = "111000";
const int conv::C_S_AXI_DATA_WIDTH = "100000";
const int conv::C_M_AXI_GMEM_USER_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int conv::C_M_AXI_GMEM_PROT_VALUE = "0000000000000000000000000000000000000000000000000000000000000000";
const int conv::C_M_AXI_GMEM_CACHE_VALUE = "11";
const int conv::C_M_AXI_DATA_WIDTH = "100000";
const sc_lv<32> conv::ap_const_lv32_23 = "100011";
const sc_lv<32> conv::ap_const_lv32_24 = "100100";
const sc_lv<1> conv::ap_const_lv1_1 = "1";
const sc_lv<32> conv::ap_const_lv32_25 = "100101";
const sc_lv<32> conv::ap_const_lv32_26 = "100110";
const sc_lv<32> conv::ap_const_lv32_2B = "101011";
const sc_lv<31> conv::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<1> conv::ap_const_lv1_0 = "0";
const sc_lv<32> conv::ap_const_lv32_27 = "100111";
const sc_lv<32> conv::ap_const_lv32_28 = "101000";
const sc_lv<32> conv::ap_const_lv32_29 = "101001";
const sc_lv<32> conv::ap_const_lv32_1 = "1";
const sc_lv<3> conv::ap_const_lv3_0 = "000";
const sc_lv<2> conv::ap_const_lv2_0 = "00";
const sc_lv<4> conv::ap_const_lv4_0 = "0000";
const sc_lv<4> conv::ap_const_lv4_F = "1111";
const sc_lv<32> conv::ap_const_lv32_2 = "10";
const sc_lv<32> conv::ap_const_lv32_1F = "11111";
const sc_lv<31> conv::ap_const_lv31_1 = "1";
const bool conv::ap_const_boolean_1 = true;

conv::conv(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv_AXILiteS_s_axi_U = new conv_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("conv_AXILiteS_s_axi_U");
    conv_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    conv_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    conv_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    conv_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    conv_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    conv_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    conv_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    conv_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    conv_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    conv_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    conv_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    conv_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    conv_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    conv_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    conv_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    conv_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    conv_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    conv_AXILiteS_s_axi_U->ACLK(ap_clk);
    conv_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    conv_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    conv_AXILiteS_s_axi_U->ap_start(ap_start);
    conv_AXILiteS_s_axi_U->interrupt(interrupt);
    conv_AXILiteS_s_axi_U->ap_ready(ap_ready);
    conv_AXILiteS_s_axi_U->ap_done(ap_done);
    conv_AXILiteS_s_axi_U->ap_idle(ap_idle);
    conv_AXILiteS_s_axi_U->chin(chin);
    conv_AXILiteS_s_axi_U->chout(chout);
    conv_AXILiteS_s_axi_U->kx(kx);
    conv_AXILiteS_s_axi_U->ky(ky);
    conv_AXILiteS_s_axi_U->win(win);
    conv_AXILiteS_s_axi_U->hin(hin);
    conv_AXILiteS_s_axi_U->stride(stride);
    conv_AXILiteS_s_axi_U->padding(padding);
    conv_AXILiteS_s_axi_U->feature_in(feature_in);
    conv_AXILiteS_s_axi_U->weight(weight);
    conv_AXILiteS_s_axi_U->feature_out(feature_out);
    conv_AXILiteS_s_axi_U->bias(bias);
    conv_gmem_m_axi_U = new conv_gmem_m_axi<0,32,32,5,16,16,16,16,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>("conv_gmem_m_axi_U");
    conv_gmem_m_axi_U->AWVALID(m_axi_gmem_AWVALID);
    conv_gmem_m_axi_U->AWREADY(m_axi_gmem_AWREADY);
    conv_gmem_m_axi_U->AWADDR(m_axi_gmem_AWADDR);
    conv_gmem_m_axi_U->AWID(m_axi_gmem_AWID);
    conv_gmem_m_axi_U->AWLEN(m_axi_gmem_AWLEN);
    conv_gmem_m_axi_U->AWSIZE(m_axi_gmem_AWSIZE);
    conv_gmem_m_axi_U->AWBURST(m_axi_gmem_AWBURST);
    conv_gmem_m_axi_U->AWLOCK(m_axi_gmem_AWLOCK);
    conv_gmem_m_axi_U->AWCACHE(m_axi_gmem_AWCACHE);
    conv_gmem_m_axi_U->AWPROT(m_axi_gmem_AWPROT);
    conv_gmem_m_axi_U->AWQOS(m_axi_gmem_AWQOS);
    conv_gmem_m_axi_U->AWREGION(m_axi_gmem_AWREGION);
    conv_gmem_m_axi_U->AWUSER(m_axi_gmem_AWUSER);
    conv_gmem_m_axi_U->WVALID(m_axi_gmem_WVALID);
    conv_gmem_m_axi_U->WREADY(m_axi_gmem_WREADY);
    conv_gmem_m_axi_U->WDATA(m_axi_gmem_WDATA);
    conv_gmem_m_axi_U->WSTRB(m_axi_gmem_WSTRB);
    conv_gmem_m_axi_U->WLAST(m_axi_gmem_WLAST);
    conv_gmem_m_axi_U->WID(m_axi_gmem_WID);
    conv_gmem_m_axi_U->WUSER(m_axi_gmem_WUSER);
    conv_gmem_m_axi_U->ARVALID(m_axi_gmem_ARVALID);
    conv_gmem_m_axi_U->ARREADY(m_axi_gmem_ARREADY);
    conv_gmem_m_axi_U->ARADDR(m_axi_gmem_ARADDR);
    conv_gmem_m_axi_U->ARID(m_axi_gmem_ARID);
    conv_gmem_m_axi_U->ARLEN(m_axi_gmem_ARLEN);
    conv_gmem_m_axi_U->ARSIZE(m_axi_gmem_ARSIZE);
    conv_gmem_m_axi_U->ARBURST(m_axi_gmem_ARBURST);
    conv_gmem_m_axi_U->ARLOCK(m_axi_gmem_ARLOCK);
    conv_gmem_m_axi_U->ARCACHE(m_axi_gmem_ARCACHE);
    conv_gmem_m_axi_U->ARPROT(m_axi_gmem_ARPROT);
    conv_gmem_m_axi_U->ARQOS(m_axi_gmem_ARQOS);
    conv_gmem_m_axi_U->ARREGION(m_axi_gmem_ARREGION);
    conv_gmem_m_axi_U->ARUSER(m_axi_gmem_ARUSER);
    conv_gmem_m_axi_U->RVALID(m_axi_gmem_RVALID);
    conv_gmem_m_axi_U->RREADY(m_axi_gmem_RREADY);
    conv_gmem_m_axi_U->RDATA(m_axi_gmem_RDATA);
    conv_gmem_m_axi_U->RLAST(m_axi_gmem_RLAST);
    conv_gmem_m_axi_U->RID(m_axi_gmem_RID);
    conv_gmem_m_axi_U->RUSER(m_axi_gmem_RUSER);
    conv_gmem_m_axi_U->RRESP(m_axi_gmem_RRESP);
    conv_gmem_m_axi_U->BVALID(m_axi_gmem_BVALID);
    conv_gmem_m_axi_U->BREADY(m_axi_gmem_BREADY);
    conv_gmem_m_axi_U->BRESP(m_axi_gmem_BRESP);
    conv_gmem_m_axi_U->BID(m_axi_gmem_BID);
    conv_gmem_m_axi_U->BUSER(m_axi_gmem_BUSER);
    conv_gmem_m_axi_U->ACLK(ap_clk);
    conv_gmem_m_axi_U->ARESET(ap_rst_n_inv);
    conv_gmem_m_axi_U->ACLK_EN(ap_var_for_const0);
    conv_gmem_m_axi_U->I_ARVALID(gmem_ARVALID);
    conv_gmem_m_axi_U->I_ARREADY(gmem_ARREADY);
    conv_gmem_m_axi_U->I_ARADDR(gmem_ARADDR);
    conv_gmem_m_axi_U->I_ARID(gmem_ARID);
    conv_gmem_m_axi_U->I_ARLEN(gmem_ARLEN);
    conv_gmem_m_axi_U->I_ARSIZE(gmem_ARSIZE);
    conv_gmem_m_axi_U->I_ARLOCK(gmem_ARLOCK);
    conv_gmem_m_axi_U->I_ARCACHE(gmem_ARCACHE);
    conv_gmem_m_axi_U->I_ARQOS(gmem_ARQOS);
    conv_gmem_m_axi_U->I_ARPROT(gmem_ARPROT);
    conv_gmem_m_axi_U->I_ARUSER(gmem_ARUSER);
    conv_gmem_m_axi_U->I_ARBURST(gmem_ARBURST);
    conv_gmem_m_axi_U->I_ARREGION(gmem_ARREGION);
    conv_gmem_m_axi_U->I_RVALID(gmem_RVALID);
    conv_gmem_m_axi_U->I_RREADY(gmem_RREADY);
    conv_gmem_m_axi_U->I_RDATA(gmem_RDATA);
    conv_gmem_m_axi_U->I_RID(gmem_RID);
    conv_gmem_m_axi_U->I_RUSER(gmem_RUSER);
    conv_gmem_m_axi_U->I_RRESP(gmem_RRESP);
    conv_gmem_m_axi_U->I_RLAST(gmem_RLAST);
    conv_gmem_m_axi_U->I_AWVALID(gmem_AWVALID);
    conv_gmem_m_axi_U->I_AWREADY(gmem_AWREADY);
    conv_gmem_m_axi_U->I_AWADDR(gmem_addr_1_reg_687);
    conv_gmem_m_axi_U->I_AWID(ap_var_for_const1);
    conv_gmem_m_axi_U->I_AWLEN(ap_var_for_const2);
    conv_gmem_m_axi_U->I_AWSIZE(ap_var_for_const3);
    conv_gmem_m_axi_U->I_AWLOCK(ap_var_for_const4);
    conv_gmem_m_axi_U->I_AWCACHE(ap_var_for_const5);
    conv_gmem_m_axi_U->I_AWQOS(ap_var_for_const5);
    conv_gmem_m_axi_U->I_AWPROT(ap_var_for_const3);
    conv_gmem_m_axi_U->I_AWUSER(ap_var_for_const1);
    conv_gmem_m_axi_U->I_AWBURST(ap_var_for_const4);
    conv_gmem_m_axi_U->I_AWREGION(ap_var_for_const5);
    conv_gmem_m_axi_U->I_WVALID(gmem_WVALID);
    conv_gmem_m_axi_U->I_WREADY(gmem_WREADY);
    conv_gmem_m_axi_U->I_WDATA(tmp_47_reg_703);
    conv_gmem_m_axi_U->I_WID(ap_var_for_const1);
    conv_gmem_m_axi_U->I_WUSER(ap_var_for_const1);
    conv_gmem_m_axi_U->I_WLAST(ap_var_for_const6);
    conv_gmem_m_axi_U->I_WSTRB(ap_var_for_const7);
    conv_gmem_m_axi_U->I_BVALID(gmem_BVALID);
    conv_gmem_m_axi_U->I_BREADY(gmem_BREADY);
    conv_gmem_m_axi_U->I_BRESP(gmem_BRESP);
    conv_gmem_m_axi_U->I_BID(gmem_BID);
    conv_gmem_m_axi_U->I_BUSER(gmem_BUSER);
    feature_buffer_U = new conv_feature_buffer("feature_buffer_U");
    feature_buffer_U->clk(ap_clk);
    feature_buffer_U->reset(ap_rst_n_inv);
    feature_buffer_U->address0(feature_buffer_address0);
    feature_buffer_U->ce0(feature_buffer_ce0);
    feature_buffer_U->we0(feature_buffer_we0);
    feature_buffer_U->d0(grp_load_feature_fu_281_feature_buffer_d0);
    feature_buffer_U->q0(feature_buffer_q0);
    weight_buffer_U = new conv_feature_buffer("weight_buffer_U");
    weight_buffer_U->clk(ap_clk);
    weight_buffer_U->reset(ap_rst_n_inv);
    weight_buffer_U->address0(weight_buffer_address0);
    weight_buffer_U->ce0(weight_buffer_ce0);
    weight_buffer_U->we0(weight_buffer_we0);
    weight_buffer_U->d0(grp_load_weight_fu_300_weight_buffer_d0);
    weight_buffer_U->q0(weight_buffer_q0);
    grp_multiply_fu_272 = new multiply("grp_multiply_fu_272");
    grp_multiply_fu_272->ap_clk(ap_clk);
    grp_multiply_fu_272->ap_rst(ap_rst_n_inv);
    grp_multiply_fu_272->ap_start(grp_multiply_fu_272_ap_start);
    grp_multiply_fu_272->ap_done(grp_multiply_fu_272_ap_done);
    grp_multiply_fu_272->ap_idle(grp_multiply_fu_272_ap_idle);
    grp_multiply_fu_272->ap_ready(grp_multiply_fu_272_ap_ready);
    grp_multiply_fu_272->feature_buffer_address0(grp_multiply_fu_272_feature_buffer_address0);
    grp_multiply_fu_272->feature_buffer_ce0(grp_multiply_fu_272_feature_buffer_ce0);
    grp_multiply_fu_272->feature_buffer_q0(feature_buffer_q0);
    grp_multiply_fu_272->weight_buffer_address0(grp_multiply_fu_272_weight_buffer_address0);
    grp_multiply_fu_272->weight_buffer_ce0(grp_multiply_fu_272_weight_buffer_ce0);
    grp_multiply_fu_272->weight_buffer_q0(weight_buffer_q0);
    grp_multiply_fu_272->chin(chin_read_reg_572);
    grp_multiply_fu_272->kx(kx_read_reg_559);
    grp_multiply_fu_272->ky(ky_read_reg_551);
    grp_multiply_fu_272->ap_return(grp_multiply_fu_272_ap_return);
    grp_load_feature_fu_281 = new load_feature("grp_load_feature_fu_281");
    grp_load_feature_fu_281->ap_clk(ap_clk);
    grp_load_feature_fu_281->ap_rst(ap_rst_n_inv);
    grp_load_feature_fu_281->ap_start(grp_load_feature_fu_281_ap_start);
    grp_load_feature_fu_281->ap_done(grp_load_feature_fu_281_ap_done);
    grp_load_feature_fu_281->ap_idle(grp_load_feature_fu_281_ap_idle);
    grp_load_feature_fu_281->ap_ready(grp_load_feature_fu_281_ap_ready);
    grp_load_feature_fu_281->m_axi_feature_in_AWVALID(grp_load_feature_fu_281_m_axi_feature_in_AWVALID);
    grp_load_feature_fu_281->m_axi_feature_in_AWREADY(ap_var_for_const6);
    grp_load_feature_fu_281->m_axi_feature_in_AWADDR(grp_load_feature_fu_281_m_axi_feature_in_AWADDR);
    grp_load_feature_fu_281->m_axi_feature_in_AWID(grp_load_feature_fu_281_m_axi_feature_in_AWID);
    grp_load_feature_fu_281->m_axi_feature_in_AWLEN(grp_load_feature_fu_281_m_axi_feature_in_AWLEN);
    grp_load_feature_fu_281->m_axi_feature_in_AWSIZE(grp_load_feature_fu_281_m_axi_feature_in_AWSIZE);
    grp_load_feature_fu_281->m_axi_feature_in_AWBURST(grp_load_feature_fu_281_m_axi_feature_in_AWBURST);
    grp_load_feature_fu_281->m_axi_feature_in_AWLOCK(grp_load_feature_fu_281_m_axi_feature_in_AWLOCK);
    grp_load_feature_fu_281->m_axi_feature_in_AWCACHE(grp_load_feature_fu_281_m_axi_feature_in_AWCACHE);
    grp_load_feature_fu_281->m_axi_feature_in_AWPROT(grp_load_feature_fu_281_m_axi_feature_in_AWPROT);
    grp_load_feature_fu_281->m_axi_feature_in_AWQOS(grp_load_feature_fu_281_m_axi_feature_in_AWQOS);
    grp_load_feature_fu_281->m_axi_feature_in_AWREGION(grp_load_feature_fu_281_m_axi_feature_in_AWREGION);
    grp_load_feature_fu_281->m_axi_feature_in_AWUSER(grp_load_feature_fu_281_m_axi_feature_in_AWUSER);
    grp_load_feature_fu_281->m_axi_feature_in_WVALID(grp_load_feature_fu_281_m_axi_feature_in_WVALID);
    grp_load_feature_fu_281->m_axi_feature_in_WREADY(ap_var_for_const6);
    grp_load_feature_fu_281->m_axi_feature_in_WDATA(grp_load_feature_fu_281_m_axi_feature_in_WDATA);
    grp_load_feature_fu_281->m_axi_feature_in_WSTRB(grp_load_feature_fu_281_m_axi_feature_in_WSTRB);
    grp_load_feature_fu_281->m_axi_feature_in_WLAST(grp_load_feature_fu_281_m_axi_feature_in_WLAST);
    grp_load_feature_fu_281->m_axi_feature_in_WID(grp_load_feature_fu_281_m_axi_feature_in_WID);
    grp_load_feature_fu_281->m_axi_feature_in_WUSER(grp_load_feature_fu_281_m_axi_feature_in_WUSER);
    grp_load_feature_fu_281->m_axi_feature_in_ARVALID(grp_load_feature_fu_281_m_axi_feature_in_ARVALID);
    grp_load_feature_fu_281->m_axi_feature_in_ARREADY(gmem_ARREADY);
    grp_load_feature_fu_281->m_axi_feature_in_ARADDR(grp_load_feature_fu_281_m_axi_feature_in_ARADDR);
    grp_load_feature_fu_281->m_axi_feature_in_ARID(grp_load_feature_fu_281_m_axi_feature_in_ARID);
    grp_load_feature_fu_281->m_axi_feature_in_ARLEN(grp_load_feature_fu_281_m_axi_feature_in_ARLEN);
    grp_load_feature_fu_281->m_axi_feature_in_ARSIZE(grp_load_feature_fu_281_m_axi_feature_in_ARSIZE);
    grp_load_feature_fu_281->m_axi_feature_in_ARBURST(grp_load_feature_fu_281_m_axi_feature_in_ARBURST);
    grp_load_feature_fu_281->m_axi_feature_in_ARLOCK(grp_load_feature_fu_281_m_axi_feature_in_ARLOCK);
    grp_load_feature_fu_281->m_axi_feature_in_ARCACHE(grp_load_feature_fu_281_m_axi_feature_in_ARCACHE);
    grp_load_feature_fu_281->m_axi_feature_in_ARPROT(grp_load_feature_fu_281_m_axi_feature_in_ARPROT);
    grp_load_feature_fu_281->m_axi_feature_in_ARQOS(grp_load_feature_fu_281_m_axi_feature_in_ARQOS);
    grp_load_feature_fu_281->m_axi_feature_in_ARREGION(grp_load_feature_fu_281_m_axi_feature_in_ARREGION);
    grp_load_feature_fu_281->m_axi_feature_in_ARUSER(grp_load_feature_fu_281_m_axi_feature_in_ARUSER);
    grp_load_feature_fu_281->m_axi_feature_in_RVALID(gmem_RVALID);
    grp_load_feature_fu_281->m_axi_feature_in_RREADY(grp_load_feature_fu_281_m_axi_feature_in_RREADY);
    grp_load_feature_fu_281->m_axi_feature_in_RDATA(gmem_RDATA);
    grp_load_feature_fu_281->m_axi_feature_in_RLAST(gmem_RLAST);
    grp_load_feature_fu_281->m_axi_feature_in_RID(gmem_RID);
    grp_load_feature_fu_281->m_axi_feature_in_RUSER(gmem_RUSER);
    grp_load_feature_fu_281->m_axi_feature_in_RRESP(gmem_RRESP);
    grp_load_feature_fu_281->m_axi_feature_in_BVALID(ap_var_for_const6);
    grp_load_feature_fu_281->m_axi_feature_in_BREADY(grp_load_feature_fu_281_m_axi_feature_in_BREADY);
    grp_load_feature_fu_281->m_axi_feature_in_BRESP(ap_var_for_const4);
    grp_load_feature_fu_281->m_axi_feature_in_BID(ap_var_for_const1);
    grp_load_feature_fu_281->m_axi_feature_in_BUSER(ap_var_for_const1);
    grp_load_feature_fu_281->feature_in_offset(feature_in1_reg_595);
    grp_load_feature_fu_281->feature_buffer_address0(grp_load_feature_fu_281_feature_buffer_address0);
    grp_load_feature_fu_281->feature_buffer_ce0(grp_load_feature_fu_281_feature_buffer_ce0);
    grp_load_feature_fu_281->feature_buffer_we0(grp_load_feature_fu_281_feature_buffer_we0);
    grp_load_feature_fu_281->feature_buffer_d0(grp_load_feature_fu_281_feature_buffer_d0);
    grp_load_feature_fu_281->chin(chin_read_reg_572);
    grp_load_feature_fu_281->kx(kx_read_reg_559);
    grp_load_feature_fu_281->ky(ky_read_reg_551);
    grp_load_feature_fu_281->win(win_read_reg_546);
    grp_load_feature_fu_281->hin(hin_read_reg_541);
    grp_load_feature_fu_281->stride(stride_read_reg_534);
    grp_load_feature_fu_281->padding(padding_read_reg_529);
    grp_load_feature_fu_281->x(w_reg_260);
    grp_load_feature_fu_281->y(h_reg_248);
    grp_load_weight_fu_300 = new load_weight("grp_load_weight_fu_300");
    grp_load_weight_fu_300->ap_clk(ap_clk);
    grp_load_weight_fu_300->ap_rst(ap_rst_n_inv);
    grp_load_weight_fu_300->ap_start(grp_load_weight_fu_300_ap_start);
    grp_load_weight_fu_300->ap_done(grp_load_weight_fu_300_ap_done);
    grp_load_weight_fu_300->ap_idle(grp_load_weight_fu_300_ap_idle);
    grp_load_weight_fu_300->ap_ready(grp_load_weight_fu_300_ap_ready);
    grp_load_weight_fu_300->m_axi_weight_AWVALID(grp_load_weight_fu_300_m_axi_weight_AWVALID);
    grp_load_weight_fu_300->m_axi_weight_AWREADY(ap_var_for_const6);
    grp_load_weight_fu_300->m_axi_weight_AWADDR(grp_load_weight_fu_300_m_axi_weight_AWADDR);
    grp_load_weight_fu_300->m_axi_weight_AWID(grp_load_weight_fu_300_m_axi_weight_AWID);
    grp_load_weight_fu_300->m_axi_weight_AWLEN(grp_load_weight_fu_300_m_axi_weight_AWLEN);
    grp_load_weight_fu_300->m_axi_weight_AWSIZE(grp_load_weight_fu_300_m_axi_weight_AWSIZE);
    grp_load_weight_fu_300->m_axi_weight_AWBURST(grp_load_weight_fu_300_m_axi_weight_AWBURST);
    grp_load_weight_fu_300->m_axi_weight_AWLOCK(grp_load_weight_fu_300_m_axi_weight_AWLOCK);
    grp_load_weight_fu_300->m_axi_weight_AWCACHE(grp_load_weight_fu_300_m_axi_weight_AWCACHE);
    grp_load_weight_fu_300->m_axi_weight_AWPROT(grp_load_weight_fu_300_m_axi_weight_AWPROT);
    grp_load_weight_fu_300->m_axi_weight_AWQOS(grp_load_weight_fu_300_m_axi_weight_AWQOS);
    grp_load_weight_fu_300->m_axi_weight_AWREGION(grp_load_weight_fu_300_m_axi_weight_AWREGION);
    grp_load_weight_fu_300->m_axi_weight_AWUSER(grp_load_weight_fu_300_m_axi_weight_AWUSER);
    grp_load_weight_fu_300->m_axi_weight_WVALID(grp_load_weight_fu_300_m_axi_weight_WVALID);
    grp_load_weight_fu_300->m_axi_weight_WREADY(ap_var_for_const6);
    grp_load_weight_fu_300->m_axi_weight_WDATA(grp_load_weight_fu_300_m_axi_weight_WDATA);
    grp_load_weight_fu_300->m_axi_weight_WSTRB(grp_load_weight_fu_300_m_axi_weight_WSTRB);
    grp_load_weight_fu_300->m_axi_weight_WLAST(grp_load_weight_fu_300_m_axi_weight_WLAST);
    grp_load_weight_fu_300->m_axi_weight_WID(grp_load_weight_fu_300_m_axi_weight_WID);
    grp_load_weight_fu_300->m_axi_weight_WUSER(grp_load_weight_fu_300_m_axi_weight_WUSER);
    grp_load_weight_fu_300->m_axi_weight_ARVALID(grp_load_weight_fu_300_m_axi_weight_ARVALID);
    grp_load_weight_fu_300->m_axi_weight_ARREADY(gmem_ARREADY);
    grp_load_weight_fu_300->m_axi_weight_ARADDR(grp_load_weight_fu_300_m_axi_weight_ARADDR);
    grp_load_weight_fu_300->m_axi_weight_ARID(grp_load_weight_fu_300_m_axi_weight_ARID);
    grp_load_weight_fu_300->m_axi_weight_ARLEN(grp_load_weight_fu_300_m_axi_weight_ARLEN);
    grp_load_weight_fu_300->m_axi_weight_ARSIZE(grp_load_weight_fu_300_m_axi_weight_ARSIZE);
    grp_load_weight_fu_300->m_axi_weight_ARBURST(grp_load_weight_fu_300_m_axi_weight_ARBURST);
    grp_load_weight_fu_300->m_axi_weight_ARLOCK(grp_load_weight_fu_300_m_axi_weight_ARLOCK);
    grp_load_weight_fu_300->m_axi_weight_ARCACHE(grp_load_weight_fu_300_m_axi_weight_ARCACHE);
    grp_load_weight_fu_300->m_axi_weight_ARPROT(grp_load_weight_fu_300_m_axi_weight_ARPROT);
    grp_load_weight_fu_300->m_axi_weight_ARQOS(grp_load_weight_fu_300_m_axi_weight_ARQOS);
    grp_load_weight_fu_300->m_axi_weight_ARREGION(grp_load_weight_fu_300_m_axi_weight_ARREGION);
    grp_load_weight_fu_300->m_axi_weight_ARUSER(grp_load_weight_fu_300_m_axi_weight_ARUSER);
    grp_load_weight_fu_300->m_axi_weight_RVALID(gmem_RVALID);
    grp_load_weight_fu_300->m_axi_weight_RREADY(grp_load_weight_fu_300_m_axi_weight_RREADY);
    grp_load_weight_fu_300->m_axi_weight_RDATA(gmem_RDATA);
    grp_load_weight_fu_300->m_axi_weight_RLAST(gmem_RLAST);
    grp_load_weight_fu_300->m_axi_weight_RID(gmem_RID);
    grp_load_weight_fu_300->m_axi_weight_RUSER(gmem_RUSER);
    grp_load_weight_fu_300->m_axi_weight_RRESP(gmem_RRESP);
    grp_load_weight_fu_300->m_axi_weight_BVALID(ap_var_for_const6);
    grp_load_weight_fu_300->m_axi_weight_BREADY(grp_load_weight_fu_300_m_axi_weight_BREADY);
    grp_load_weight_fu_300->m_axi_weight_BRESP(ap_var_for_const4);
    grp_load_weight_fu_300->m_axi_weight_BID(ap_var_for_const1);
    grp_load_weight_fu_300->m_axi_weight_BUSER(ap_var_for_const1);
    grp_load_weight_fu_300->weight_offset(weight3_reg_590);
    grp_load_weight_fu_300->weight_offset1(tmp_38_reg_650);
    grp_load_weight_fu_300->weight_buffer_address0(grp_load_weight_fu_300_weight_buffer_address0);
    grp_load_weight_fu_300->weight_buffer_ce0(grp_load_weight_fu_300_weight_buffer_ce0);
    grp_load_weight_fu_300->weight_buffer_we0(grp_load_weight_fu_300_weight_buffer_we0);
    grp_load_weight_fu_300->weight_buffer_d0(grp_load_weight_fu_300_weight_buffer_d0);
    grp_load_weight_fu_300->chin(chin_read_reg_572);
    grp_load_weight_fu_300->kx(kx_read_reg_559);
    grp_load_weight_fu_300->ky(ky_read_reg_551);
    conv_fadd_32ns_32bkb_U29 = new conv_fadd_32ns_32bkb<1,1,32,32,32>("conv_fadd_32ns_32bkb_U29");
    conv_fadd_32ns_32bkb_U29->din0(conv_sum_reg_693);
    conv_fadd_32ns_32bkb_U29->din1(gmem_addr_read_reg_698);
    conv_fadd_32ns_32bkb_U29->dout(tmp_47_fu_312_p2);
    conv_sdiv_32ns_32dEe_U30 = new conv_sdiv_32ns_32dEe<1,36,32,32,32>("conv_sdiv_32ns_32dEe_U30");
    conv_sdiv_32ns_32dEe_U30->clk(ap_clk);
    conv_sdiv_32ns_32dEe_U30->reset(ap_rst_n_inv);
    conv_sdiv_32ns_32dEe_U30->start(grp_fu_374_ap_start);
    conv_sdiv_32ns_32dEe_U30->done(grp_fu_374_ap_done);
    conv_sdiv_32ns_32dEe_U30->din0(grp_fu_374_p0);
    conv_sdiv_32ns_32dEe_U30->din1(stride);
    conv_sdiv_32ns_32dEe_U30->ce(ap_var_for_const0);
    conv_sdiv_32ns_32dEe_U30->dout(grp_fu_374_p2);
    conv_sdiv_32ns_32dEe_U31 = new conv_sdiv_32ns_32dEe<1,36,32,32,32>("conv_sdiv_32ns_32dEe_U31");
    conv_sdiv_32ns_32dEe_U31->clk(ap_clk);
    conv_sdiv_32ns_32dEe_U31->reset(ap_rst_n_inv);
    conv_sdiv_32ns_32dEe_U31->start(grp_fu_392_ap_start);
    conv_sdiv_32ns_32dEe_U31->done(grp_fu_392_ap_done);
    conv_sdiv_32ns_32dEe_U31->din0(grp_fu_392_p0);
    conv_sdiv_32ns_32dEe_U31->din1(stride);
    conv_sdiv_32ns_32dEe_U31->ce(ap_var_for_const0);
    conv_sdiv_32ns_32dEe_U31->dout(grp_fu_392_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state57);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( tmp_36_fu_429_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( tmp_36_fu_429_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_ioackin_gmem_ARREADY);
    sensitive << ( gmem_ARREADY );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_AWREADY);
    sensitive << ( gmem_AWREADY );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_ap_sig_ioackin_gmem_WREADY);
    sensitive << ( gmem_WREADY );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_bias8_sum_cast_fu_450_p1);
    sensitive << ( bias8_sum_fu_445_p2 );

    SC_METHOD(thread_bias8_sum_fu_445_p2);
    sensitive << ( tmp_1_cast_reg_610 );
    sensitive << ( cout_cast_fu_425_p1 );

    SC_METHOD(thread_cout_1_fu_434_p2);
    sensitive << ( cout_reg_226 );

    SC_METHOD(thread_cout_cast_fu_425_p1);
    sensitive << ( cout_reg_226 );

    SC_METHOD(thread_feature_buffer_address0);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( grp_multiply_fu_272_feature_buffer_address0 );
    sensitive << ( grp_load_feature_fu_281_feature_buffer_address0 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_feature_buffer_ce0);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( grp_multiply_fu_272_feature_buffer_ce0 );
    sensitive << ( grp_load_feature_fu_281_feature_buffer_ce0 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_feature_buffer_we0);
    sensitive << ( grp_load_feature_fu_281_feature_buffer_we0 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_feature_out6_sum_cas_fu_519_p1);
    sensitive << ( feature_out6_sum_fu_514_p2 );

    SC_METHOD(thread_feature_out6_sum_fu_514_p2);
    sensitive << ( tmp_2_cast_reg_615 );
    sensitive << ( tmp_49_cast_fu_510_p1 );

    SC_METHOD(thread_gmem_ARADDR);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( gmem_addr_reg_655 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARADDR );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARADDR );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_ARBURST);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARBURST );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARBURST );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARCACHE);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARCACHE );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARCACHE );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARID);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARID );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARID );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARLEN);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARLEN );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARLEN );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_ARLOCK);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARLOCK );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARLOCK );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARPROT);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARPROT );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARPROT );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARQOS);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARQOS );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARQOS );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARREGION);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARREGION );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARREGION );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARSIZE);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARSIZE );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARSIZE );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARUSER);
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARUSER );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARUSER );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_ARVALID);
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_ARVALID );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_ARVALID );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_reg_ioackin_gmem_ARREADY );

    SC_METHOD(thread_gmem_AWVALID);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_reg_ioackin_gmem_AWREADY );

    SC_METHOD(thread_gmem_BREADY);
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( gmem_BVALID );

    SC_METHOD(thread_gmem_RREADY);
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( gmem_RVALID );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( grp_load_feature_fu_281_m_axi_feature_in_RREADY );
    sensitive << ( grp_load_weight_fu_300_m_axi_weight_RREADY );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_gmem_WVALID);
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_reg_ioackin_gmem_WREADY );

    SC_METHOD(thread_gmem_blk_n_AR);
    sensitive << ( m_axi_gmem_ARREADY );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_gmem_blk_n_AW);
    sensitive << ( m_axi_gmem_AWREADY );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_gmem_blk_n_B);
    sensitive << ( m_axi_gmem_BVALID );
    sensitive << ( ap_CS_fsm_state57 );

    SC_METHOD(thread_gmem_blk_n_R);
    sensitive << ( m_axi_gmem_RVALID );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_gmem_blk_n_W);
    sensitive << ( m_axi_gmem_WREADY );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_grp_fu_374_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_374_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_49_fu_356_p2 );
    sensitive << ( tmp_s_fu_362_p2 );

    SC_METHOD(thread_grp_fu_392_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_392_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_49_fu_356_p2 );
    sensitive << ( tmp_33_fu_380_p2 );

    SC_METHOD(thread_grp_load_feature_fu_281_ap_start);
    sensitive << ( grp_load_feature_fu_281_ap_start_reg );

    SC_METHOD(thread_grp_load_weight_fu_300_ap_start);
    sensitive << ( grp_load_weight_fu_300_ap_start_reg );

    SC_METHOD(thread_grp_multiply_fu_272_ap_start);
    sensitive << ( grp_multiply_fu_272_ap_start_reg );

    SC_METHOD(thread_h_1_fu_474_p2);
    sensitive << ( h_reg_248 );

    SC_METHOD(thread_h_cast_fu_465_p1);
    sensitive << ( h_reg_248 );

    SC_METHOD(thread_hout_fu_410_p2);
    sensitive << ( grp_fu_392_p2 );

    SC_METHOD(thread_next_mul_fu_420_p2);
    sensitive << ( ky_read_reg_551 );
    sensitive << ( phi_mul_reg_237 );

    SC_METHOD(thread_tmp1_fu_416_p2);
    sensitive << ( kx_read_reg_559 );
    sensitive << ( chin_read_reg_572 );

    SC_METHOD(thread_tmp_1_cast_fu_398_p1);
    sensitive << ( tmp_reg_580 );

    SC_METHOD(thread_tmp_2_cast_fu_401_p1);
    sensitive << ( tmp_39_reg_585 );

    SC_METHOD(thread_tmp_33_fu_380_p2);
    sensitive << ( ky );
    sensitive << ( hin );

    SC_METHOD(thread_tmp_36_fu_429_p2);
    sensitive << ( chout_read_reg_567 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( cout_cast_fu_425_p1 );

    SC_METHOD(thread_tmp_38_fu_440_p2);
    sensitive << ( tmp1_reg_632 );
    sensitive << ( phi_mul_reg_237 );

    SC_METHOD(thread_tmp_40_fu_460_p0);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( cout_cast_fu_425_p1 );

    SC_METHOD(thread_tmp_40_fu_460_p2);
    sensitive << ( hout_reg_626 );
    sensitive << ( tmp_40_fu_460_p0 );

    SC_METHOD(thread_tmp_41_fu_469_p2);
    sensitive << ( hout_reg_626 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( h_cast_fu_465_p1 );

    SC_METHOD(thread_tmp_43_fu_480_p2);
    sensitive << ( tmp_40_reg_661 );
    sensitive << ( h_cast_fu_465_p1 );

    SC_METHOD(thread_tmp_44_fu_485_p2);
    sensitive << ( wout_reg_620 );
    sensitive << ( tmp_43_fu_480_p2 );

    SC_METHOD(thread_tmp_45_fu_494_p2);
    sensitive << ( wout_reg_620 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( w_cast_fu_490_p1 );

    SC_METHOD(thread_tmp_48_fu_505_p2);
    sensitive << ( tmp_44_reg_674 );
    sensitive << ( w_cast_fu_490_p1 );

    SC_METHOD(thread_tmp_49_cast_fu_510_p1);
    sensitive << ( tmp_48_fu_505_p2 );

    SC_METHOD(thread_tmp_49_fu_356_p2);
    sensitive << ( padding );

    SC_METHOD(thread_tmp_s_fu_362_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( kx );

    SC_METHOD(thread_tmp_s_fu_362_p2);
    sensitive << ( win );
    sensitive << ( tmp_s_fu_362_p1 );

    SC_METHOD(thread_w_1_fu_499_p2);
    sensitive << ( w_reg_260 );

    SC_METHOD(thread_w_cast_fu_490_p1);
    sensitive << ( w_reg_260 );

    SC_METHOD(thread_weight_buffer_address0);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( grp_multiply_fu_272_weight_buffer_address0 );
    sensitive << ( grp_load_weight_fu_300_weight_buffer_address0 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_weight_buffer_ce0);
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( grp_multiply_fu_272_weight_buffer_ce0 );
    sensitive << ( grp_load_weight_fu_300_weight_buffer_ce0 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_weight_buffer_we0);
    sensitive << ( grp_load_weight_fu_300_weight_buffer_we0 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_wout_fu_404_p2);
    sensitive << ( grp_fu_374_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state57 );
    sensitive << ( gmem_RVALID );
    sensitive << ( gmem_BVALID );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( tmp_36_fu_429_p2 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( tmp_41_fu_469_p2 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( tmp_45_fu_494_p2 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( grp_multiply_fu_272_ap_done );
    sensitive << ( ap_sig_ioackin_gmem_AWREADY );
    sensitive << ( grp_load_feature_fu_281_ap_done );
    sensitive << ( grp_load_weight_fu_300_ap_done );
    sensitive << ( ap_sig_ioackin_gmem_ARREADY );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_sig_ioackin_gmem_WREADY );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const7);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000001";
    grp_multiply_fu_272_ap_start_reg = SC_LOGIC_0;
    grp_load_feature_fu_281_ap_start_reg = SC_LOGIC_0;
    grp_load_weight_fu_300_ap_start_reg = SC_LOGIC_0;
    ap_reg_ioackin_gmem_ARREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_AWREADY = SC_LOGIC_0;
    ap_reg_ioackin_gmem_WREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, m_axi_gmem_AWVALID, "(port)m_axi_gmem_AWVALID");
    sc_trace(mVcdFile, m_axi_gmem_AWREADY, "(port)m_axi_gmem_AWREADY");
    sc_trace(mVcdFile, m_axi_gmem_AWADDR, "(port)m_axi_gmem_AWADDR");
    sc_trace(mVcdFile, m_axi_gmem_AWID, "(port)m_axi_gmem_AWID");
    sc_trace(mVcdFile, m_axi_gmem_AWLEN, "(port)m_axi_gmem_AWLEN");
    sc_trace(mVcdFile, m_axi_gmem_AWSIZE, "(port)m_axi_gmem_AWSIZE");
    sc_trace(mVcdFile, m_axi_gmem_AWBURST, "(port)m_axi_gmem_AWBURST");
    sc_trace(mVcdFile, m_axi_gmem_AWLOCK, "(port)m_axi_gmem_AWLOCK");
    sc_trace(mVcdFile, m_axi_gmem_AWCACHE, "(port)m_axi_gmem_AWCACHE");
    sc_trace(mVcdFile, m_axi_gmem_AWPROT, "(port)m_axi_gmem_AWPROT");
    sc_trace(mVcdFile, m_axi_gmem_AWQOS, "(port)m_axi_gmem_AWQOS");
    sc_trace(mVcdFile, m_axi_gmem_AWREGION, "(port)m_axi_gmem_AWREGION");
    sc_trace(mVcdFile, m_axi_gmem_AWUSER, "(port)m_axi_gmem_AWUSER");
    sc_trace(mVcdFile, m_axi_gmem_WVALID, "(port)m_axi_gmem_WVALID");
    sc_trace(mVcdFile, m_axi_gmem_WREADY, "(port)m_axi_gmem_WREADY");
    sc_trace(mVcdFile, m_axi_gmem_WDATA, "(port)m_axi_gmem_WDATA");
    sc_trace(mVcdFile, m_axi_gmem_WSTRB, "(port)m_axi_gmem_WSTRB");
    sc_trace(mVcdFile, m_axi_gmem_WLAST, "(port)m_axi_gmem_WLAST");
    sc_trace(mVcdFile, m_axi_gmem_WID, "(port)m_axi_gmem_WID");
    sc_trace(mVcdFile, m_axi_gmem_WUSER, "(port)m_axi_gmem_WUSER");
    sc_trace(mVcdFile, m_axi_gmem_ARVALID, "(port)m_axi_gmem_ARVALID");
    sc_trace(mVcdFile, m_axi_gmem_ARREADY, "(port)m_axi_gmem_ARREADY");
    sc_trace(mVcdFile, m_axi_gmem_ARADDR, "(port)m_axi_gmem_ARADDR");
    sc_trace(mVcdFile, m_axi_gmem_ARID, "(port)m_axi_gmem_ARID");
    sc_trace(mVcdFile, m_axi_gmem_ARLEN, "(port)m_axi_gmem_ARLEN");
    sc_trace(mVcdFile, m_axi_gmem_ARSIZE, "(port)m_axi_gmem_ARSIZE");
    sc_trace(mVcdFile, m_axi_gmem_ARBURST, "(port)m_axi_gmem_ARBURST");
    sc_trace(mVcdFile, m_axi_gmem_ARLOCK, "(port)m_axi_gmem_ARLOCK");
    sc_trace(mVcdFile, m_axi_gmem_ARCACHE, "(port)m_axi_gmem_ARCACHE");
    sc_trace(mVcdFile, m_axi_gmem_ARPROT, "(port)m_axi_gmem_ARPROT");
    sc_trace(mVcdFile, m_axi_gmem_ARQOS, "(port)m_axi_gmem_ARQOS");
    sc_trace(mVcdFile, m_axi_gmem_ARREGION, "(port)m_axi_gmem_ARREGION");
    sc_trace(mVcdFile, m_axi_gmem_ARUSER, "(port)m_axi_gmem_ARUSER");
    sc_trace(mVcdFile, m_axi_gmem_RVALID, "(port)m_axi_gmem_RVALID");
    sc_trace(mVcdFile, m_axi_gmem_RREADY, "(port)m_axi_gmem_RREADY");
    sc_trace(mVcdFile, m_axi_gmem_RDATA, "(port)m_axi_gmem_RDATA");
    sc_trace(mVcdFile, m_axi_gmem_RLAST, "(port)m_axi_gmem_RLAST");
    sc_trace(mVcdFile, m_axi_gmem_RID, "(port)m_axi_gmem_RID");
    sc_trace(mVcdFile, m_axi_gmem_RUSER, "(port)m_axi_gmem_RUSER");
    sc_trace(mVcdFile, m_axi_gmem_RRESP, "(port)m_axi_gmem_RRESP");
    sc_trace(mVcdFile, m_axi_gmem_BVALID, "(port)m_axi_gmem_BVALID");
    sc_trace(mVcdFile, m_axi_gmem_BREADY, "(port)m_axi_gmem_BREADY");
    sc_trace(mVcdFile, m_axi_gmem_BRESP, "(port)m_axi_gmem_BRESP");
    sc_trace(mVcdFile, m_axi_gmem_BID, "(port)m_axi_gmem_BID");
    sc_trace(mVcdFile, m_axi_gmem_BUSER, "(port)m_axi_gmem_BUSER");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, chin, "chin");
    sc_trace(mVcdFile, chout, "chout");
    sc_trace(mVcdFile, kx, "kx");
    sc_trace(mVcdFile, ky, "ky");
    sc_trace(mVcdFile, win, "win");
    sc_trace(mVcdFile, hin, "hin");
    sc_trace(mVcdFile, stride, "stride");
    sc_trace(mVcdFile, padding, "padding");
    sc_trace(mVcdFile, feature_in, "feature_in");
    sc_trace(mVcdFile, weight, "weight");
    sc_trace(mVcdFile, feature_out, "feature_out");
    sc_trace(mVcdFile, bias, "bias");
    sc_trace(mVcdFile, gmem_blk_n_AR, "gmem_blk_n_AR");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, gmem_blk_n_R, "gmem_blk_n_R");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, gmem_blk_n_AW, "gmem_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, gmem_blk_n_W, "gmem_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, gmem_blk_n_B, "gmem_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state57, "ap_CS_fsm_state57");
    sc_trace(mVcdFile, gmem_AWVALID, "gmem_AWVALID");
    sc_trace(mVcdFile, gmem_AWREADY, "gmem_AWREADY");
    sc_trace(mVcdFile, gmem_WVALID, "gmem_WVALID");
    sc_trace(mVcdFile, gmem_WREADY, "gmem_WREADY");
    sc_trace(mVcdFile, gmem_ARVALID, "gmem_ARVALID");
    sc_trace(mVcdFile, gmem_ARREADY, "gmem_ARREADY");
    sc_trace(mVcdFile, gmem_ARADDR, "gmem_ARADDR");
    sc_trace(mVcdFile, gmem_ARID, "gmem_ARID");
    sc_trace(mVcdFile, gmem_ARLEN, "gmem_ARLEN");
    sc_trace(mVcdFile, gmem_ARSIZE, "gmem_ARSIZE");
    sc_trace(mVcdFile, gmem_ARBURST, "gmem_ARBURST");
    sc_trace(mVcdFile, gmem_ARLOCK, "gmem_ARLOCK");
    sc_trace(mVcdFile, gmem_ARCACHE, "gmem_ARCACHE");
    sc_trace(mVcdFile, gmem_ARPROT, "gmem_ARPROT");
    sc_trace(mVcdFile, gmem_ARQOS, "gmem_ARQOS");
    sc_trace(mVcdFile, gmem_ARREGION, "gmem_ARREGION");
    sc_trace(mVcdFile, gmem_ARUSER, "gmem_ARUSER");
    sc_trace(mVcdFile, gmem_RVALID, "gmem_RVALID");
    sc_trace(mVcdFile, gmem_RREADY, "gmem_RREADY");
    sc_trace(mVcdFile, gmem_RDATA, "gmem_RDATA");
    sc_trace(mVcdFile, gmem_RLAST, "gmem_RLAST");
    sc_trace(mVcdFile, gmem_RID, "gmem_RID");
    sc_trace(mVcdFile, gmem_RUSER, "gmem_RUSER");
    sc_trace(mVcdFile, gmem_RRESP, "gmem_RRESP");
    sc_trace(mVcdFile, gmem_BVALID, "gmem_BVALID");
    sc_trace(mVcdFile, gmem_BREADY, "gmem_BREADY");
    sc_trace(mVcdFile, gmem_BRESP, "gmem_BRESP");
    sc_trace(mVcdFile, gmem_BID, "gmem_BID");
    sc_trace(mVcdFile, gmem_BUSER, "gmem_BUSER");
    sc_trace(mVcdFile, padding_read_reg_529, "padding_read_reg_529");
    sc_trace(mVcdFile, stride_read_reg_534, "stride_read_reg_534");
    sc_trace(mVcdFile, hin_read_reg_541, "hin_read_reg_541");
    sc_trace(mVcdFile, win_read_reg_546, "win_read_reg_546");
    sc_trace(mVcdFile, ky_read_reg_551, "ky_read_reg_551");
    sc_trace(mVcdFile, kx_read_reg_559, "kx_read_reg_559");
    sc_trace(mVcdFile, chout_read_reg_567, "chout_read_reg_567");
    sc_trace(mVcdFile, chin_read_reg_572, "chin_read_reg_572");
    sc_trace(mVcdFile, tmp_reg_580, "tmp_reg_580");
    sc_trace(mVcdFile, tmp_39_reg_585, "tmp_39_reg_585");
    sc_trace(mVcdFile, weight3_reg_590, "weight3_reg_590");
    sc_trace(mVcdFile, feature_in1_reg_595, "feature_in1_reg_595");
    sc_trace(mVcdFile, tmp_1_cast_fu_398_p1, "tmp_1_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_610, "tmp_1_cast_reg_610");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, tmp_2_cast_fu_401_p1, "tmp_2_cast_fu_401_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_615, "tmp_2_cast_reg_615");
    sc_trace(mVcdFile, wout_fu_404_p2, "wout_fu_404_p2");
    sc_trace(mVcdFile, wout_reg_620, "wout_reg_620");
    sc_trace(mVcdFile, hout_fu_410_p2, "hout_fu_410_p2");
    sc_trace(mVcdFile, hout_reg_626, "hout_reg_626");
    sc_trace(mVcdFile, tmp1_fu_416_p2, "tmp1_fu_416_p2");
    sc_trace(mVcdFile, tmp1_reg_632, "tmp1_reg_632");
    sc_trace(mVcdFile, next_mul_fu_420_p2, "next_mul_fu_420_p2");
    sc_trace(mVcdFile, next_mul_reg_637, "next_mul_reg_637");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, cout_1_fu_434_p2, "cout_1_fu_434_p2");
    sc_trace(mVcdFile, cout_1_reg_645, "cout_1_reg_645");
    sc_trace(mVcdFile, tmp_38_fu_440_p2, "tmp_38_fu_440_p2");
    sc_trace(mVcdFile, tmp_38_reg_650, "tmp_38_reg_650");
    sc_trace(mVcdFile, tmp_36_fu_429_p2, "tmp_36_fu_429_p2");
    sc_trace(mVcdFile, gmem_addr_reg_655, "gmem_addr_reg_655");
    sc_trace(mVcdFile, tmp_40_fu_460_p2, "tmp_40_fu_460_p2");
    sc_trace(mVcdFile, tmp_40_reg_661, "tmp_40_reg_661");
    sc_trace(mVcdFile, h_1_fu_474_p2, "h_1_fu_474_p2");
    sc_trace(mVcdFile, h_1_reg_669, "h_1_reg_669");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, tmp_44_fu_485_p2, "tmp_44_fu_485_p2");
    sc_trace(mVcdFile, tmp_44_reg_674, "tmp_44_reg_674");
    sc_trace(mVcdFile, tmp_41_fu_469_p2, "tmp_41_fu_469_p2");
    sc_trace(mVcdFile, w_1_fu_499_p2, "w_1_fu_499_p2");
    sc_trace(mVcdFile, w_1_reg_682, "w_1_reg_682");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, gmem_addr_1_reg_687, "gmem_addr_1_reg_687");
    sc_trace(mVcdFile, tmp_45_fu_494_p2, "tmp_45_fu_494_p2");
    sc_trace(mVcdFile, grp_multiply_fu_272_ap_return, "grp_multiply_fu_272_ap_return");
    sc_trace(mVcdFile, conv_sum_reg_693, "conv_sum_reg_693");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_multiply_fu_272_ap_ready, "grp_multiply_fu_272_ap_ready");
    sc_trace(mVcdFile, grp_multiply_fu_272_ap_done, "grp_multiply_fu_272_ap_done");
    sc_trace(mVcdFile, gmem_addr_read_reg_698, "gmem_addr_read_reg_698");
    sc_trace(mVcdFile, tmp_47_fu_312_p2, "tmp_47_fu_312_p2");
    sc_trace(mVcdFile, tmp_47_reg_703, "tmp_47_reg_703");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_AWREADY, "ap_sig_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, feature_buffer_address0, "feature_buffer_address0");
    sc_trace(mVcdFile, feature_buffer_ce0, "feature_buffer_ce0");
    sc_trace(mVcdFile, feature_buffer_we0, "feature_buffer_we0");
    sc_trace(mVcdFile, feature_buffer_q0, "feature_buffer_q0");
    sc_trace(mVcdFile, weight_buffer_address0, "weight_buffer_address0");
    sc_trace(mVcdFile, weight_buffer_ce0, "weight_buffer_ce0");
    sc_trace(mVcdFile, weight_buffer_we0, "weight_buffer_we0");
    sc_trace(mVcdFile, weight_buffer_q0, "weight_buffer_q0");
    sc_trace(mVcdFile, grp_multiply_fu_272_ap_start, "grp_multiply_fu_272_ap_start");
    sc_trace(mVcdFile, grp_multiply_fu_272_ap_idle, "grp_multiply_fu_272_ap_idle");
    sc_trace(mVcdFile, grp_multiply_fu_272_feature_buffer_address0, "grp_multiply_fu_272_feature_buffer_address0");
    sc_trace(mVcdFile, grp_multiply_fu_272_feature_buffer_ce0, "grp_multiply_fu_272_feature_buffer_ce0");
    sc_trace(mVcdFile, grp_multiply_fu_272_weight_buffer_address0, "grp_multiply_fu_272_weight_buffer_address0");
    sc_trace(mVcdFile, grp_multiply_fu_272_weight_buffer_ce0, "grp_multiply_fu_272_weight_buffer_ce0");
    sc_trace(mVcdFile, grp_load_feature_fu_281_ap_start, "grp_load_feature_fu_281_ap_start");
    sc_trace(mVcdFile, grp_load_feature_fu_281_ap_done, "grp_load_feature_fu_281_ap_done");
    sc_trace(mVcdFile, grp_load_feature_fu_281_ap_idle, "grp_load_feature_fu_281_ap_idle");
    sc_trace(mVcdFile, grp_load_feature_fu_281_ap_ready, "grp_load_feature_fu_281_ap_ready");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWVALID, "grp_load_feature_fu_281_m_axi_feature_in_AWVALID");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWADDR, "grp_load_feature_fu_281_m_axi_feature_in_AWADDR");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWID, "grp_load_feature_fu_281_m_axi_feature_in_AWID");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWLEN, "grp_load_feature_fu_281_m_axi_feature_in_AWLEN");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWSIZE, "grp_load_feature_fu_281_m_axi_feature_in_AWSIZE");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWBURST, "grp_load_feature_fu_281_m_axi_feature_in_AWBURST");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWLOCK, "grp_load_feature_fu_281_m_axi_feature_in_AWLOCK");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWCACHE, "grp_load_feature_fu_281_m_axi_feature_in_AWCACHE");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWPROT, "grp_load_feature_fu_281_m_axi_feature_in_AWPROT");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWQOS, "grp_load_feature_fu_281_m_axi_feature_in_AWQOS");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWREGION, "grp_load_feature_fu_281_m_axi_feature_in_AWREGION");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_AWUSER, "grp_load_feature_fu_281_m_axi_feature_in_AWUSER");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_WVALID, "grp_load_feature_fu_281_m_axi_feature_in_WVALID");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_WDATA, "grp_load_feature_fu_281_m_axi_feature_in_WDATA");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_WSTRB, "grp_load_feature_fu_281_m_axi_feature_in_WSTRB");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_WLAST, "grp_load_feature_fu_281_m_axi_feature_in_WLAST");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_WID, "grp_load_feature_fu_281_m_axi_feature_in_WID");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_WUSER, "grp_load_feature_fu_281_m_axi_feature_in_WUSER");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARVALID, "grp_load_feature_fu_281_m_axi_feature_in_ARVALID");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARADDR, "grp_load_feature_fu_281_m_axi_feature_in_ARADDR");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARID, "grp_load_feature_fu_281_m_axi_feature_in_ARID");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARLEN, "grp_load_feature_fu_281_m_axi_feature_in_ARLEN");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARSIZE, "grp_load_feature_fu_281_m_axi_feature_in_ARSIZE");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARBURST, "grp_load_feature_fu_281_m_axi_feature_in_ARBURST");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARLOCK, "grp_load_feature_fu_281_m_axi_feature_in_ARLOCK");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARCACHE, "grp_load_feature_fu_281_m_axi_feature_in_ARCACHE");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARPROT, "grp_load_feature_fu_281_m_axi_feature_in_ARPROT");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARQOS, "grp_load_feature_fu_281_m_axi_feature_in_ARQOS");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARREGION, "grp_load_feature_fu_281_m_axi_feature_in_ARREGION");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_ARUSER, "grp_load_feature_fu_281_m_axi_feature_in_ARUSER");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_RREADY, "grp_load_feature_fu_281_m_axi_feature_in_RREADY");
    sc_trace(mVcdFile, grp_load_feature_fu_281_m_axi_feature_in_BREADY, "grp_load_feature_fu_281_m_axi_feature_in_BREADY");
    sc_trace(mVcdFile, grp_load_feature_fu_281_feature_buffer_address0, "grp_load_feature_fu_281_feature_buffer_address0");
    sc_trace(mVcdFile, grp_load_feature_fu_281_feature_buffer_ce0, "grp_load_feature_fu_281_feature_buffer_ce0");
    sc_trace(mVcdFile, grp_load_feature_fu_281_feature_buffer_we0, "grp_load_feature_fu_281_feature_buffer_we0");
    sc_trace(mVcdFile, grp_load_feature_fu_281_feature_buffer_d0, "grp_load_feature_fu_281_feature_buffer_d0");
    sc_trace(mVcdFile, grp_load_weight_fu_300_ap_start, "grp_load_weight_fu_300_ap_start");
    sc_trace(mVcdFile, grp_load_weight_fu_300_ap_done, "grp_load_weight_fu_300_ap_done");
    sc_trace(mVcdFile, grp_load_weight_fu_300_ap_idle, "grp_load_weight_fu_300_ap_idle");
    sc_trace(mVcdFile, grp_load_weight_fu_300_ap_ready, "grp_load_weight_fu_300_ap_ready");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWVALID, "grp_load_weight_fu_300_m_axi_weight_AWVALID");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWADDR, "grp_load_weight_fu_300_m_axi_weight_AWADDR");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWID, "grp_load_weight_fu_300_m_axi_weight_AWID");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWLEN, "grp_load_weight_fu_300_m_axi_weight_AWLEN");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWSIZE, "grp_load_weight_fu_300_m_axi_weight_AWSIZE");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWBURST, "grp_load_weight_fu_300_m_axi_weight_AWBURST");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWLOCK, "grp_load_weight_fu_300_m_axi_weight_AWLOCK");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWCACHE, "grp_load_weight_fu_300_m_axi_weight_AWCACHE");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWPROT, "grp_load_weight_fu_300_m_axi_weight_AWPROT");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWQOS, "grp_load_weight_fu_300_m_axi_weight_AWQOS");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWREGION, "grp_load_weight_fu_300_m_axi_weight_AWREGION");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_AWUSER, "grp_load_weight_fu_300_m_axi_weight_AWUSER");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_WVALID, "grp_load_weight_fu_300_m_axi_weight_WVALID");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_WDATA, "grp_load_weight_fu_300_m_axi_weight_WDATA");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_WSTRB, "grp_load_weight_fu_300_m_axi_weight_WSTRB");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_WLAST, "grp_load_weight_fu_300_m_axi_weight_WLAST");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_WID, "grp_load_weight_fu_300_m_axi_weight_WID");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_WUSER, "grp_load_weight_fu_300_m_axi_weight_WUSER");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARVALID, "grp_load_weight_fu_300_m_axi_weight_ARVALID");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARADDR, "grp_load_weight_fu_300_m_axi_weight_ARADDR");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARID, "grp_load_weight_fu_300_m_axi_weight_ARID");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARLEN, "grp_load_weight_fu_300_m_axi_weight_ARLEN");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARSIZE, "grp_load_weight_fu_300_m_axi_weight_ARSIZE");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARBURST, "grp_load_weight_fu_300_m_axi_weight_ARBURST");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARLOCK, "grp_load_weight_fu_300_m_axi_weight_ARLOCK");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARCACHE, "grp_load_weight_fu_300_m_axi_weight_ARCACHE");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARPROT, "grp_load_weight_fu_300_m_axi_weight_ARPROT");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARQOS, "grp_load_weight_fu_300_m_axi_weight_ARQOS");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARREGION, "grp_load_weight_fu_300_m_axi_weight_ARREGION");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_ARUSER, "grp_load_weight_fu_300_m_axi_weight_ARUSER");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_RREADY, "grp_load_weight_fu_300_m_axi_weight_RREADY");
    sc_trace(mVcdFile, grp_load_weight_fu_300_m_axi_weight_BREADY, "grp_load_weight_fu_300_m_axi_weight_BREADY");
    sc_trace(mVcdFile, grp_load_weight_fu_300_weight_buffer_address0, "grp_load_weight_fu_300_weight_buffer_address0");
    sc_trace(mVcdFile, grp_load_weight_fu_300_weight_buffer_ce0, "grp_load_weight_fu_300_weight_buffer_ce0");
    sc_trace(mVcdFile, grp_load_weight_fu_300_weight_buffer_we0, "grp_load_weight_fu_300_weight_buffer_we0");
    sc_trace(mVcdFile, grp_load_weight_fu_300_weight_buffer_d0, "grp_load_weight_fu_300_weight_buffer_d0");
    sc_trace(mVcdFile, cout_reg_226, "cout_reg_226");
    sc_trace(mVcdFile, phi_mul_reg_237, "phi_mul_reg_237");
    sc_trace(mVcdFile, h_reg_248, "h_reg_248");
    sc_trace(mVcdFile, w_reg_260, "w_reg_260");
    sc_trace(mVcdFile, grp_multiply_fu_272_ap_start_reg, "grp_multiply_fu_272_ap_start_reg");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_ARREADY, "ap_sig_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, grp_load_feature_fu_281_ap_start_reg, "grp_load_feature_fu_281_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_load_weight_fu_300_ap_start_reg, "grp_load_weight_fu_300_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, bias8_sum_cast_fu_450_p1, "bias8_sum_cast_fu_450_p1");
    sc_trace(mVcdFile, feature_out6_sum_cas_fu_519_p1, "feature_out6_sum_cas_fu_519_p1");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_ARREADY, "ap_reg_ioackin_gmem_ARREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_AWREADY, "ap_reg_ioackin_gmem_AWREADY");
    sc_trace(mVcdFile, ap_reg_ioackin_gmem_WREADY, "ap_reg_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, ap_sig_ioackin_gmem_WREADY, "ap_sig_ioackin_gmem_WREADY");
    sc_trace(mVcdFile, tmp_s_fu_362_p1, "tmp_s_fu_362_p1");
    sc_trace(mVcdFile, tmp_49_fu_356_p2, "tmp_49_fu_356_p2");
    sc_trace(mVcdFile, tmp_s_fu_362_p2, "tmp_s_fu_362_p2");
    sc_trace(mVcdFile, grp_fu_374_p0, "grp_fu_374_p0");
    sc_trace(mVcdFile, tmp_33_fu_380_p2, "tmp_33_fu_380_p2");
    sc_trace(mVcdFile, grp_fu_392_p0, "grp_fu_392_p0");
    sc_trace(mVcdFile, grp_fu_374_p2, "grp_fu_374_p2");
    sc_trace(mVcdFile, grp_fu_392_p2, "grp_fu_392_p2");
    sc_trace(mVcdFile, cout_cast_fu_425_p1, "cout_cast_fu_425_p1");
    sc_trace(mVcdFile, bias8_sum_fu_445_p2, "bias8_sum_fu_445_p2");
    sc_trace(mVcdFile, tmp_40_fu_460_p0, "tmp_40_fu_460_p0");
    sc_trace(mVcdFile, h_cast_fu_465_p1, "h_cast_fu_465_p1");
    sc_trace(mVcdFile, tmp_43_fu_480_p2, "tmp_43_fu_480_p2");
    sc_trace(mVcdFile, w_cast_fu_490_p1, "w_cast_fu_490_p1");
    sc_trace(mVcdFile, tmp_48_fu_505_p2, "tmp_48_fu_505_p2");
    sc_trace(mVcdFile, tmp_49_cast_fu_510_p1, "tmp_49_cast_fu_510_p1");
    sc_trace(mVcdFile, feature_out6_sum_fu_514_p2, "feature_out6_sum_fu_514_p2");
    sc_trace(mVcdFile, grp_fu_374_ap_start, "grp_fu_374_ap_start");
    sc_trace(mVcdFile, grp_fu_374_ap_done, "grp_fu_374_ap_done");
    sc_trace(mVcdFile, grp_fu_392_ap_start, "grp_fu_392_ap_start");
    sc_trace(mVcdFile, grp_fu_392_ap_done, "grp_fu_392_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("conv.hdltvin.dat");
    mHdltvoutHandle.open("conv.hdltvout.dat");
}

conv::~conv() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete conv_AXILiteS_s_axi_U;
    delete conv_gmem_m_axi_U;
    delete feature_buffer_U;
    delete weight_buffer_U;
    delete grp_multiply_fu_272;
    delete grp_load_feature_fu_281;
    delete grp_load_weight_fu_300;
    delete conv_fadd_32ns_32bkb_U29;
    delete conv_sdiv_32ns_32dEe_U30;
    delete conv_sdiv_32ns_32dEe_U31;
}

void conv::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void conv::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_logic_0;
}

void conv::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv1_0;
}

void conv::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_1;
}

void conv::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void conv::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv2_0;
}

void conv::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv4_0;
}

void conv::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv4_F;
}

void conv::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_ARREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_ARREADY.read())) {
                ap_reg_ioackin_gmem_ARREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_AWREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_AWREADY.read())) {
                ap_reg_ioackin_gmem_AWREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
            if (esl_seteq<1,1,1>(ap_sig_ioackin_gmem_WREADY.read(), ap_const_logic_1)) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, gmem_WREADY.read())) {
                ap_reg_ioackin_gmem_WREADY = ap_const_logic_1;
            }
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         esl_seteq<1,1,1>(tmp_41_fu_469_p2.read(), ap_const_lv1_0))) {
        cout_reg_226 = cout_1_reg_645.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        cout_reg_226 = ap_const_lv31_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_load_feature_fu_281_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read()))) {
            grp_load_feature_fu_281_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_load_feature_fu_281_ap_ready.read())) {
            grp_load_feature_fu_281_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_load_weight_fu_300_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
            grp_load_weight_fu_300_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_load_weight_fu_300_ap_ready.read())) {
            grp_load_weight_fu_300_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_multiply_fu_272_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
             esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
            grp_multiply_fu_272_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_multiply_fu_272_ap_ready.read())) {
            grp_multiply_fu_272_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
         esl_seteq<1,1,1>(tmp_45_fu_494_p2.read(), ap_const_lv1_0))) {
        h_reg_248 = h_1_reg_669.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
                esl_seteq<1,1,1>(tmp_36_fu_429_p2.read(), ap_const_lv1_1))) {
        h_reg_248 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
         esl_seteq<1,1,1>(tmp_41_fu_469_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_237 = next_mul_reg_637.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        phi_mul_reg_237 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        w_reg_260 = w_1_reg_682.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_fu_469_p2.read()))) {
        w_reg_260 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        chin_read_reg_572 = chin.read();
        chout_read_reg_567 = chout.read();
        feature_in1_reg_595 = feature_in.read().range(31, 2);
        hin_read_reg_541 = hin.read();
        kx_read_reg_559 = kx.read();
        ky_read_reg_551 = ky.read();
        padding_read_reg_529 = padding.read();
        stride_read_reg_534 = stride.read();
        tmp_39_reg_585 = feature_out.read().range(31, 2);
        tmp_reg_580 = bias.read().range(31, 2);
        weight3_reg_590 = weight.read().range(31, 2);
        win_read_reg_546 = win.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(grp_multiply_fu_272_ap_done.read(), ap_const_logic_1))) {
        conv_sum_reg_693 = grp_multiply_fu_272_ap_return.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        cout_1_reg_645 = cout_1_fu_434_p2.read();
        next_mul_reg_637 = next_mul_fu_420_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read()))) {
        gmem_addr_1_reg_687 =  (sc_lv<32>) (feature_out6_sum_cas_fu_519_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
        gmem_addr_read_reg_698 = gmem_RDATA.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(tmp_36_fu_429_p2.read(), ap_const_lv1_1))) {
        gmem_addr_reg_655 =  (sc_lv<32>) (bias8_sum_cast_fu_450_p1.read());
        tmp_38_reg_650 = tmp_38_fu_440_p2.read();
        tmp_40_reg_661 = tmp_40_fu_460_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        h_1_reg_669 = h_1_fu_474_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        hout_reg_626 = hout_fu_410_p2.read();
        tmp1_reg_632 = tmp1_fu_416_p2.read();
        tmp_1_cast_reg_610 = tmp_1_cast_fu_398_p1.read();
        tmp_2_cast_reg_615 = tmp_2_cast_fu_401_p1.read();
        wout_reg_620 = wout_fu_404_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_41_fu_469_p2.read()))) {
        tmp_44_reg_674 = tmp_44_fu_485_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_AWREADY.read(), ap_const_logic_1))) {
        tmp_47_reg_703 = tmp_47_fu_312_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        w_1_reg_682 = w_1_fu_499_p2.read();
    }
}

void conv::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void conv::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void conv::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void conv::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void conv::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void conv::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void conv::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void conv::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void conv::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void conv::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void conv::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void conv::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void conv::thread_ap_CS_fsm_state57() {
    ap_CS_fsm_state57 = ap_CS_fsm.read()[56];
}

void conv::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         esl_seteq<1,1,1>(tmp_36_fu_429_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         esl_seteq<1,1,1>(tmp_36_fu_429_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void conv::thread_ap_sig_ioackin_gmem_ARREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read())) {
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY.read();
    } else {
        ap_sig_ioackin_gmem_ARREADY = ap_const_logic_1;
    }
}

void conv::thread_ap_sig_ioackin_gmem_AWREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read())) {
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY.read();
    } else {
        ap_sig_ioackin_gmem_AWREADY = ap_const_logic_1;
    }
}

void conv::thread_ap_sig_ioackin_gmem_WREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read())) {
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY.read();
    } else {
        ap_sig_ioackin_gmem_WREADY = ap_const_logic_1;
    }
}

void conv::thread_bias8_sum_cast_fu_450_p1() {
    bias8_sum_cast_fu_450_p1 = esl_zext<64,32>(bias8_sum_fu_445_p2.read());
}

void conv::thread_bias8_sum_fu_445_p2() {
    bias8_sum_fu_445_p2 = (!cout_cast_fu_425_p1.read().is_01() || !tmp_1_cast_reg_610.read().is_01())? sc_lv<32>(): (sc_biguint<32>(cout_cast_fu_425_p1.read()) + sc_biguint<32>(tmp_1_cast_reg_610.read()));
}

void conv::thread_cout_1_fu_434_p2() {
    cout_1_fu_434_p2 = (!cout_reg_226.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(cout_reg_226.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv::thread_cout_cast_fu_425_p1() {
    cout_cast_fu_425_p1 = esl_zext<32,31>(cout_reg_226.read());
}

void conv::thread_feature_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        feature_buffer_address0 = grp_load_feature_fu_281_feature_buffer_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        feature_buffer_address0 = grp_multiply_fu_272_feature_buffer_address0.read();
    } else {
        feature_buffer_address0 = "XXXXXXXXXXXXXXX";
    }
}

void conv::thread_feature_buffer_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        feature_buffer_ce0 = grp_load_feature_fu_281_feature_buffer_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        feature_buffer_ce0 = grp_multiply_fu_272_feature_buffer_ce0.read();
    } else {
        feature_buffer_ce0 = ap_const_logic_0;
    }
}

void conv::thread_feature_buffer_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        feature_buffer_we0 = grp_load_feature_fu_281_feature_buffer_we0.read();
    } else {
        feature_buffer_we0 = ap_const_logic_0;
    }
}

void conv::thread_feature_out6_sum_cas_fu_519_p1() {
    feature_out6_sum_cas_fu_519_p1 = esl_sext<64,33>(feature_out6_sum_fu_514_p2.read());
}

void conv::thread_feature_out6_sum_fu_514_p2() {
    feature_out6_sum_fu_514_p2 = (!tmp_49_cast_fu_510_p1.read().is_01() || !tmp_2_cast_reg_615.read().is_01())? sc_lv<33>(): (sc_bigint<33>(tmp_49_cast_fu_510_p1.read()) + sc_biguint<33>(tmp_2_cast_reg_615.read()));
}

void conv::thread_gmem_ARADDR() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()))) {
        gmem_ARADDR = gmem_addr_reg_655.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARADDR = grp_load_weight_fu_300_m_axi_weight_ARADDR.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARADDR = grp_load_feature_fu_281_m_axi_feature_in_ARADDR.read();
    } else {
        gmem_ARADDR =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv::thread_gmem_ARBURST() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARBURST = grp_load_weight_fu_300_m_axi_weight_ARBURST.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARBURST = grp_load_feature_fu_281_m_axi_feature_in_ARBURST.read();
    } else {
        gmem_ARBURST = ap_const_lv2_0;
    }
}

void conv::thread_gmem_ARCACHE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARCACHE = grp_load_weight_fu_300_m_axi_weight_ARCACHE.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARCACHE = grp_load_feature_fu_281_m_axi_feature_in_ARCACHE.read();
    } else {
        gmem_ARCACHE = ap_const_lv4_0;
    }
}

void conv::thread_gmem_ARID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARID = grp_load_weight_fu_300_m_axi_weight_ARID.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARID = grp_load_feature_fu_281_m_axi_feature_in_ARID.read();
    } else {
        gmem_ARID = ap_const_lv1_0;
    }
}

void conv::thread_gmem_ARLEN() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()))) {
        gmem_ARLEN = ap_const_lv32_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARLEN = grp_load_weight_fu_300_m_axi_weight_ARLEN.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARLEN = grp_load_feature_fu_281_m_axi_feature_in_ARLEN.read();
    } else {
        gmem_ARLEN =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv::thread_gmem_ARLOCK() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARLOCK = grp_load_weight_fu_300_m_axi_weight_ARLOCK.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARLOCK = grp_load_feature_fu_281_m_axi_feature_in_ARLOCK.read();
    } else {
        gmem_ARLOCK = ap_const_lv2_0;
    }
}

void conv::thread_gmem_ARPROT() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARPROT = grp_load_weight_fu_300_m_axi_weight_ARPROT.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARPROT = grp_load_feature_fu_281_m_axi_feature_in_ARPROT.read();
    } else {
        gmem_ARPROT = ap_const_lv3_0;
    }
}

void conv::thread_gmem_ARQOS() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARQOS = grp_load_weight_fu_300_m_axi_weight_ARQOS.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARQOS = grp_load_feature_fu_281_m_axi_feature_in_ARQOS.read();
    } else {
        gmem_ARQOS = ap_const_lv4_0;
    }
}

void conv::thread_gmem_ARREGION() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARREGION = grp_load_weight_fu_300_m_axi_weight_ARREGION.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARREGION = grp_load_feature_fu_281_m_axi_feature_in_ARREGION.read();
    } else {
        gmem_ARREGION = ap_const_lv4_0;
    }
}

void conv::thread_gmem_ARSIZE() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARSIZE = grp_load_weight_fu_300_m_axi_weight_ARSIZE.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARSIZE = grp_load_feature_fu_281_m_axi_feature_in_ARSIZE.read();
    } else {
        gmem_ARSIZE = ap_const_lv3_0;
    }
}

void conv::thread_gmem_ARUSER() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARUSER = grp_load_weight_fu_300_m_axi_weight_ARUSER.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARUSER = grp_load_feature_fu_281_m_axi_feature_in_ARUSER.read();
    } else {
        gmem_ARUSER = ap_const_lv1_0;
    }
}

void conv::thread_gmem_ARVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_ARREADY.read()))) {
        gmem_ARVALID = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_ARVALID = grp_load_weight_fu_300_m_axi_weight_ARVALID.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_ARVALID = grp_load_feature_fu_281_m_axi_feature_in_ARVALID.read();
    } else {
        gmem_ARVALID = ap_const_logic_0;
    }
}

void conv::thread_gmem_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_AWREADY.read()))) {
        gmem_AWVALID = ap_const_logic_1;
    } else {
        gmem_AWVALID = ap_const_logic_0;
    }
}

void conv::thread_gmem_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && 
         esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
        gmem_BREADY = ap_const_logic_1;
    } else {
        gmem_BREADY = ap_const_logic_0;
    }
}

void conv::thread_gmem_RREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
        gmem_RREADY = ap_const_logic_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        gmem_RREADY = grp_load_weight_fu_300_m_axi_weight_RREADY.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_45_fu_494_p2.read())) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        gmem_RREADY = grp_load_feature_fu_281_m_axi_feature_in_RREADY.read();
    } else {
        gmem_RREADY = ap_const_logic_0;
    }
}

void conv::thread_gmem_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_gmem_WREADY.read()))) {
        gmem_WVALID = ap_const_logic_1;
    } else {
        gmem_WVALID = ap_const_logic_0;
    }
}

void conv::thread_gmem_blk_n_AR() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        gmem_blk_n_AR = m_axi_gmem_ARREADY.read();
    } else {
        gmem_blk_n_AR = ap_const_logic_1;
    }
}

void conv::thread_gmem_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        gmem_blk_n_AW = m_axi_gmem_AWREADY.read();
    } else {
        gmem_blk_n_AW = ap_const_logic_1;
    }
}

void conv::thread_gmem_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read())) {
        gmem_blk_n_B = m_axi_gmem_BVALID.read();
    } else {
        gmem_blk_n_B = ap_const_logic_1;
    }
}

void conv::thread_gmem_blk_n_R() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        gmem_blk_n_R = m_axi_gmem_RVALID.read();
    } else {
        gmem_blk_n_R = ap_const_logic_1;
    }
}

void conv::thread_gmem_blk_n_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        gmem_blk_n_W = m_axi_gmem_WREADY.read();
    } else {
        gmem_blk_n_W = ap_const_logic_1;
    }
}

void conv::thread_grp_fu_374_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_374_ap_start = ap_const_logic_1;
    } else {
        grp_fu_374_ap_start = ap_const_logic_0;
    }
}

void conv::thread_grp_fu_374_p0() {
    grp_fu_374_p0 = (!tmp_49_fu_356_p2.read().is_01() || !tmp_s_fu_362_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_49_fu_356_p2.read()) + sc_biguint<32>(tmp_s_fu_362_p2.read()));
}

void conv::thread_grp_fu_392_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_392_ap_start = ap_const_logic_1;
    } else {
        grp_fu_392_ap_start = ap_const_logic_0;
    }
}

void conv::thread_grp_fu_392_p0() {
    grp_fu_392_p0 = (!tmp_49_fu_356_p2.read().is_01() || !tmp_33_fu_380_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_49_fu_356_p2.read()) + sc_biguint<32>(tmp_33_fu_380_p2.read()));
}

void conv::thread_grp_load_feature_fu_281_ap_start() {
    grp_load_feature_fu_281_ap_start = grp_load_feature_fu_281_ap_start_reg.read();
}

void conv::thread_grp_load_weight_fu_300_ap_start() {
    grp_load_weight_fu_300_ap_start = grp_load_weight_fu_300_ap_start_reg.read();
}

void conv::thread_grp_multiply_fu_272_ap_start() {
    grp_multiply_fu_272_ap_start = grp_multiply_fu_272_ap_start_reg.read();
}

void conv::thread_h_1_fu_474_p2() {
    h_1_fu_474_p2 = (!h_reg_248.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(h_reg_248.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv::thread_h_cast_fu_465_p1() {
    h_cast_fu_465_p1 = esl_zext<32,31>(h_reg_248.read());
}

void conv::thread_hout_fu_410_p2() {
    hout_fu_410_p2 = (!ap_const_lv32_1.is_01() || !grp_fu_392_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(grp_fu_392_p2.read()));
}

void conv::thread_next_mul_fu_420_p2() {
    next_mul_fu_420_p2 = (!phi_mul_reg_237.read().is_01() || !ky_read_reg_551.read().is_01())? sc_lv<32>(): (sc_bigint<32>(phi_mul_reg_237.read()) + sc_biguint<32>(ky_read_reg_551.read()));
}

void conv::thread_tmp1_fu_416_p2() {
    tmp1_fu_416_p2 = (!kx_read_reg_559.read().is_01() || !chin_read_reg_572.read().is_01())? sc_lv<32>(): sc_biguint<32>(kx_read_reg_559.read()) * sc_biguint<32>(chin_read_reg_572.read());
}

void conv::thread_tmp_1_cast_fu_398_p1() {
    tmp_1_cast_fu_398_p1 = esl_zext<32,30>(tmp_reg_580.read());
}

void conv::thread_tmp_2_cast_fu_401_p1() {
    tmp_2_cast_fu_401_p1 = esl_zext<33,30>(tmp_39_reg_585.read());
}

void conv::thread_tmp_33_fu_380_p2() {
    tmp_33_fu_380_p2 = (!hin.read().is_01() || !ky.read().is_01())? sc_lv<32>(): (sc_biguint<32>(hin.read()) - sc_biguint<32>(ky.read()));
}

void conv::thread_tmp_36_fu_429_p2() {
    tmp_36_fu_429_p2 = (!cout_cast_fu_425_p1.read().is_01() || !chout_read_reg_567.read().is_01())? sc_lv<1>(): (sc_bigint<32>(cout_cast_fu_425_p1.read()) < sc_bigint<32>(chout_read_reg_567.read()));
}

void conv::thread_tmp_38_fu_440_p2() {
    tmp_38_fu_440_p2 = (!tmp1_reg_632.read().is_01() || !phi_mul_reg_237.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp1_reg_632.read()) * sc_bigint<32>(phi_mul_reg_237.read());
}

void conv::thread_tmp_40_fu_460_p0() {
    tmp_40_fu_460_p0 =  (sc_lv<31>) (cout_cast_fu_425_p1.read());
}

void conv::thread_tmp_40_fu_460_p2() {
    tmp_40_fu_460_p2 = (!tmp_40_fu_460_p0.read().is_01() || !hout_reg_626.read().is_01())? sc_lv<32>(): sc_biguint<31>(tmp_40_fu_460_p0.read()) * sc_bigint<32>(hout_reg_626.read());
}

void conv::thread_tmp_41_fu_469_p2() {
    tmp_41_fu_469_p2 = (!h_cast_fu_465_p1.read().is_01() || !hout_reg_626.read().is_01())? sc_lv<1>(): (sc_bigint<32>(h_cast_fu_465_p1.read()) < sc_bigint<32>(hout_reg_626.read()));
}

void conv::thread_tmp_43_fu_480_p2() {
    tmp_43_fu_480_p2 = (!h_cast_fu_465_p1.read().is_01() || !tmp_40_reg_661.read().is_01())? sc_lv<32>(): (sc_biguint<32>(h_cast_fu_465_p1.read()) + sc_biguint<32>(tmp_40_reg_661.read()));
}

void conv::thread_tmp_44_fu_485_p2() {
    tmp_44_fu_485_p2 = (!tmp_43_fu_480_p2.read().is_01() || !wout_reg_620.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_43_fu_480_p2.read()) * sc_bigint<32>(wout_reg_620.read());
}

void conv::thread_tmp_45_fu_494_p2() {
    tmp_45_fu_494_p2 = (!w_cast_fu_490_p1.read().is_01() || !wout_reg_620.read().is_01())? sc_lv<1>(): (sc_bigint<32>(w_cast_fu_490_p1.read()) < sc_bigint<32>(wout_reg_620.read()));
}

void conv::thread_tmp_48_fu_505_p2() {
    tmp_48_fu_505_p2 = (!tmp_44_reg_674.read().is_01() || !w_cast_fu_490_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_44_reg_674.read()) + sc_biguint<32>(w_cast_fu_490_p1.read()));
}

void conv::thread_tmp_49_cast_fu_510_p1() {
    tmp_49_cast_fu_510_p1 = esl_sext<33,32>(tmp_48_fu_505_p2.read());
}

void conv::thread_tmp_49_fu_356_p2() {
    tmp_49_fu_356_p2 = (!ap_const_lv32_1.is_01())? sc_lv<32>(): padding.read() << (unsigned short)ap_const_lv32_1.to_uint();
}

void conv::thread_tmp_s_fu_362_p1() {
    tmp_s_fu_362_p1 = kx.read();
}

void conv::thread_tmp_s_fu_362_p2() {
    tmp_s_fu_362_p2 = (!win.read().is_01() || !tmp_s_fu_362_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(win.read()) - sc_bigint<32>(tmp_s_fu_362_p1.read()));
}

void conv::thread_w_1_fu_499_p2() {
    w_1_fu_499_p2 = (!w_reg_260.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(w_reg_260.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void conv::thread_w_cast_fu_490_p1() {
    w_cast_fu_490_p1 = esl_zext<32,31>(w_reg_260.read());
}

void conv::thread_weight_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        weight_buffer_address0 = grp_load_weight_fu_300_weight_buffer_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        weight_buffer_address0 = grp_multiply_fu_272_weight_buffer_address0.read();
    } else {
        weight_buffer_address0 = "XXXXXXXXXXXXXXX";
    }
}

void conv::thread_weight_buffer_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        weight_buffer_ce0 = grp_load_weight_fu_300_weight_buffer_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        weight_buffer_ce0 = grp_multiply_fu_272_weight_buffer_ce0.read();
    } else {
        weight_buffer_ce0 = ap_const_logic_0;
    }
}

void conv::thread_weight_buffer_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        weight_buffer_we0 = grp_load_weight_fu_300_weight_buffer_we0.read();
    } else {
        weight_buffer_we0 = ap_const_logic_0;
    }
}

void conv::thread_wout_fu_404_p2() {
    wout_fu_404_p2 = (!ap_const_lv32_1.is_01() || !grp_fu_374_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(grp_fu_374_p2.read()));
}

void conv::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(tmp_36_fu_429_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 137438953472 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(tmp_41_fu_469_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state37;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) && esl_seteq<1,1,1>(tmp_45_fu_494_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 549755813888 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) && esl_seteq<1,1,1>(grp_load_feature_fu_281_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state41;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(grp_load_weight_fu_300_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 4398046511104 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_ARREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state44;
            } else {
                ap_NS_fsm = ap_ST_fsm_state43;
            }
            break;
        case 8796093022208 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) && esl_seteq<1,1,1>(grp_multiply_fu_272_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state45;
            } else {
                ap_NS_fsm = ap_ST_fsm_state44;
            }
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(gmem_RVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state51;
            } else {
                ap_NS_fsm = ap_ST_fsm_state50;
            }
            break;
        case 1125899906842624 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        case 2251799813685248 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(ap_sig_ioackin_gmem_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state53;
            } else {
                ap_NS_fsm = ap_ST_fsm_state52;
            }
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_fsm_state54;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state55;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_fsm_state57;
            break;
        case 72057594037927936 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state57.read()) && esl_seteq<1,1,1>(gmem_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state39;
            } else {
                ap_NS_fsm = ap_ST_fsm_state57;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<57>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void conv::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"m_axi_gmem_AWVALID\" :  \"" << m_axi_gmem_AWVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_AWREADY\" :  \"" << m_axi_gmem_AWREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWADDR\" :  \"" << m_axi_gmem_AWADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWID\" :  \"" << m_axi_gmem_AWID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLEN\" :  \"" << m_axi_gmem_AWLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWSIZE\" :  \"" << m_axi_gmem_AWSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWBURST\" :  \"" << m_axi_gmem_AWBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWLOCK\" :  \"" << m_axi_gmem_AWLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWCACHE\" :  \"" << m_axi_gmem_AWCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWPROT\" :  \"" << m_axi_gmem_AWPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWQOS\" :  \"" << m_axi_gmem_AWQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWREGION\" :  \"" << m_axi_gmem_AWREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_AWUSER\" :  \"" << m_axi_gmem_AWUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WVALID\" :  \"" << m_axi_gmem_WVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_WREADY\" :  \"" << m_axi_gmem_WREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WDATA\" :  \"" << m_axi_gmem_WDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WSTRB\" :  \"" << m_axi_gmem_WSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WLAST\" :  \"" << m_axi_gmem_WLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WID\" :  \"" << m_axi_gmem_WID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_WUSER\" :  \"" << m_axi_gmem_WUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARVALID\" :  \"" << m_axi_gmem_ARVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_ARREADY\" :  \"" << m_axi_gmem_ARREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARADDR\" :  \"" << m_axi_gmem_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARID\" :  \"" << m_axi_gmem_ARID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLEN\" :  \"" << m_axi_gmem_ARLEN.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARSIZE\" :  \"" << m_axi_gmem_ARSIZE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARBURST\" :  \"" << m_axi_gmem_ARBURST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARLOCK\" :  \"" << m_axi_gmem_ARLOCK.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARCACHE\" :  \"" << m_axi_gmem_ARCACHE.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARPROT\" :  \"" << m_axi_gmem_ARPROT.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARQOS\" :  \"" << m_axi_gmem_ARQOS.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARREGION\" :  \"" << m_axi_gmem_ARREGION.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_ARUSER\" :  \"" << m_axi_gmem_ARUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RVALID\" :  \"" << m_axi_gmem_RVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_RREADY\" :  \"" << m_axi_gmem_RREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RDATA\" :  \"" << m_axi_gmem_RDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RLAST\" :  \"" << m_axi_gmem_RLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RID\" :  \"" << m_axi_gmem_RID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RUSER\" :  \"" << m_axi_gmem_RUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_RRESP\" :  \"" << m_axi_gmem_RRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BVALID\" :  \"" << m_axi_gmem_BVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_axi_gmem_BREADY\" :  \"" << m_axi_gmem_BREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BRESP\" :  \"" << m_axi_gmem_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BID\" :  \"" << m_axi_gmem_BID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"m_axi_gmem_BUSER\" :  \"" << m_axi_gmem_BUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

