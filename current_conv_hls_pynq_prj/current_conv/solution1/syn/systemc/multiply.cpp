// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "multiply.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic multiply::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic multiply::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> multiply::ap_ST_fsm_state1 = "1";
const sc_lv<3> multiply::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> multiply::ap_ST_fsm_state4 = "100";
const bool multiply::ap_const_boolean_1 = true;
const sc_lv<32> multiply::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> multiply::ap_const_lv32_1 = "1";
const bool multiply::ap_const_boolean_0 = false;
const sc_lv<1> multiply::ap_const_lv1_0 = "0";
const sc_lv<1> multiply::ap_const_lv1_1 = "1";
const sc_lv<96> multiply::ap_const_lv96_0 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> multiply::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<64> multiply::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<96> multiply::ap_const_lv96_1 = "1";
const sc_lv<31> multiply::ap_const_lv31_1 = "1";
const sc_lv<64> multiply::ap_const_lv64_1 = "1";
const sc_lv<32> multiply::ap_const_lv32_2 = "10";

multiply::multiply(sc_module_name name) : sc_module(name), mVcdFile(0) {
    conv_fadd_32ns_32bkb_U18 = new conv_fadd_32ns_32bkb<1,1,32,32,32>("conv_fadd_32ns_32bkb_U18");
    conv_fadd_32ns_32bkb_U18->din0(sum_2_reg_154);
    conv_fadd_32ns_32bkb_U18->din1(tmp_9_fu_193_p2);
    conv_fadd_32ns_32bkb_U18->dout(sum_fu_188_p2);
    conv_fmul_32ns_32cud_U19 = new conv_fmul_32ns_32cud<1,1,32,32,32>("conv_fmul_32ns_32cud_U19");
    conv_fmul_32ns_32cud_U19->din0(feature_buffer_q0);
    conv_fmul_32ns_32cud_U19->din1(weight_buffer_q0);
    conv_fmul_32ns_32cud_U19->dout(tmp_9_fu_193_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten1_fu_306_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_return);
    sensitive << ( sum_2_reg_154 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_bound4_fu_272_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound4_fu_272_p00 );

    SC_METHOD(thread_bound4_fu_272_p00);
    sensitive << ( bound_fu_258_p2 );

    SC_METHOD(thread_bound4_fu_272_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound4_fu_272_p10 );

    SC_METHOD(thread_bound4_fu_272_p10);
    sensitive << ( chin );

    SC_METHOD(thread_bound4_fu_272_p2);
    sensitive << ( bound4_fu_272_p0 );
    sensitive << ( bound4_fu_272_p1 );

    SC_METHOD(thread_bound_fu_258_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_258_p00 );

    SC_METHOD(thread_bound_fu_258_p00);
    sensitive << ( cast1_fu_254_p0 );

    SC_METHOD(thread_bound_fu_258_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_258_p10 );

    SC_METHOD(thread_bound_fu_258_p10);
    sensitive << ( cast_fu_250_p0 );

    SC_METHOD(thread_bound_fu_258_p2);
    sensitive << ( bound_fu_258_p0 );
    sensitive << ( bound_fu_258_p1 );

    SC_METHOD(thread_c_mid2_fu_405_p3);
    sensitive << ( c_reg_110 );
    sensitive << ( c_s_fu_317_p2 );
    sensitive << ( exitcond_flatten_fu_332_p2 );

    SC_METHOD(thread_c_s_fu_317_p2);
    sensitive << ( c_reg_110 );

    SC_METHOD(thread_cast1_fu_254_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( kx );

    SC_METHOD(thread_cast_fu_250_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ky );

    SC_METHOD(thread_exitcond_flatten1_fu_306_p2);
    sensitive << ( indvar_flatten1_reg_88 );
    sensitive << ( bound4_reg_573 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_332_p2);
    sensitive << ( indvar_flatten_reg_121 );
    sensitive << ( bound_reg_568 );
    sensitive << ( exitcond_flatten1_fu_306_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_feature_buffer_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_4_fu_483_p1 );

    SC_METHOD(thread_feature_buffer_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_i_1_fu_413_p2);
    sensitive << ( i_mid_fu_345_p3 );

    SC_METHOD(thread_i_cast_fu_424_p1);
    sensitive << ( i_1_fu_413_p2 );

    SC_METHOD(thread_i_cast_mid1_fu_287_p1);
    sensitive << ( i_reg_143 );

    SC_METHOD(thread_i_mid2_fu_475_p3);
    sensitive << ( i_mid_fu_345_p3 );
    sensitive << ( i_1_fu_413_p2 );
    sensitive << ( tmp_mid_fu_390_p3 );

    SC_METHOD(thread_i_mid_fu_345_p3);
    sensitive << ( i_reg_143 );
    sensitive << ( exitcond_flatten_fu_332_p2 );

    SC_METHOD(thread_index_1_mid2_fu_467_p3);
    sensitive << ( index_1_mid_fu_337_p3 );
    sensitive << ( tmp_mid_fu_390_p3 );
    sensitive << ( tmp_7_dup_fu_419_p2 );

    SC_METHOD(thread_index_1_mid_fu_337_p3);
    sensitive << ( index_1_reg_132 );
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( index_s_fu_327_p2 );

    SC_METHOD(thread_index_2_mid2_fu_428_p3);
    sensitive << ( tmp_mid_fu_390_p3 );
    sensitive << ( index_2_mid_fu_353_p3 );
    sensitive << ( tmp_7_dup_fu_419_p2 );

    SC_METHOD(thread_index_2_mid_fu_353_p3);
    sensitive << ( index_2_reg_166 );
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( index_s_fu_327_p2 );

    SC_METHOD(thread_index_mid2_fu_397_p3);
    sensitive << ( index_reg_99 );
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( index_s_fu_327_p2 );

    SC_METHOD(thread_index_s_fu_327_p2);
    sensitive << ( index_reg_99 );
    sensitive << ( tmp_2_reg_563 );

    SC_METHOD(thread_indvar_flatten_next1_fu_311_p2);
    sensitive << ( indvar_flatten1_reg_88 );

    SC_METHOD(thread_indvar_flatten_next_fu_533_p3);
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( indvar_flatten_op_fu_527_p2 );

    SC_METHOD(thread_indvar_flatten_op_fu_527_p2);
    sensitive << ( indvar_flatten_reg_121 );

    SC_METHOD(thread_j_1_fu_519_p3);
    sensitive << ( tmp_mid_fu_390_p3 );
    sensitive << ( j_mid213_op_fu_511_p3 );

    SC_METHOD(thread_j_cast_fu_297_p1);
    sensitive << ( j_reg_177 );

    SC_METHOD(thread_j_cast_mid2_cast_fu_463_p1);
    sensitive << ( j_cast_mid2_fu_455_p3 );

    SC_METHOD(thread_j_cast_mid2_fu_455_p3);
    sensitive << ( tmp_mid_fu_390_p3 );
    sensitive << ( j_cast_mid_fu_382_p3 );

    SC_METHOD(thread_j_cast_mid_fu_382_p3);
    sensitive << ( j_reg_177 );
    sensitive << ( exitcond_flatten_fu_332_p2 );

    SC_METHOD(thread_j_mid213_op_fu_511_p3);
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( j_op_fu_505_p2 );

    SC_METHOD(thread_j_op_fu_505_p2);
    sensitive << ( j_reg_177 );

    SC_METHOD(thread_smax1_fu_232_p3);
    sensitive << ( tmp_1_fu_222_p2 );
    sensitive << ( tmp_12_fu_228_p1 );

    SC_METHOD(thread_smax_cast_fu_218_p1);
    sensitive << ( smax_fu_210_p3 );

    SC_METHOD(thread_smax_fu_210_p3);
    sensitive << ( tmp_fu_200_p2 );
    sensitive << ( tmp_11_fu_206_p1 );

    SC_METHOD(thread_tmp_10_fu_499_p2);
    sensitive << ( index_2_mid2_fu_428_p3 );

    SC_METHOD(thread_tmp_11_fu_206_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( kx );

    SC_METHOD(thread_tmp_11_fu_206_p1);
    sensitive << ( tmp_11_fu_206_p0 );

    SC_METHOD(thread_tmp_12_fu_228_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ky );

    SC_METHOD(thread_tmp_12_fu_228_p1);
    sensitive << ( tmp_12_fu_228_p0 );

    SC_METHOD(thread_tmp_1_fu_222_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ky );

    SC_METHOD(thread_tmp_1_fu_222_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_1_fu_222_p0 );

    SC_METHOD(thread_tmp_2_fu_244_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_2_fu_244_p00 );

    SC_METHOD(thread_tmp_2_fu_244_p00);
    sensitive << ( smax1_fu_232_p3 );

    SC_METHOD(thread_tmp_2_fu_244_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_2_fu_244_p10 );

    SC_METHOD(thread_tmp_2_fu_244_p10);
    sensitive << ( smax_fu_210_p3 );

    SC_METHOD(thread_tmp_2_fu_244_p2);
    sensitive << ( tmp_2_fu_244_p0 );
    sensitive << ( tmp_2_fu_244_p1 );

    SC_METHOD(thread_tmp_4_fu_483_p1);
    sensitive << ( index_2_mid2_fu_428_p3 );

    SC_METHOD(thread_tmp_5_fu_282_p0);
    sensitive << ( ky );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_5_fu_282_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_fu_282_p10 );

    SC_METHOD(thread_tmp_5_fu_282_p10);
    sensitive << ( c_reg_110 );

    SC_METHOD(thread_tmp_5_fu_282_p2);
    sensitive << ( tmp_5_fu_282_p0 );
    sensitive << ( tmp_5_fu_282_p1 );

    SC_METHOD(thread_tmp_5_mid1_fu_361_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_5_mid1_fu_361_p00 );

    SC_METHOD(thread_tmp_5_mid1_fu_361_p00);
    sensitive << ( c_s_fu_317_p2 );

    SC_METHOD(thread_tmp_5_mid1_fu_361_p1);
    sensitive << ( ky );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_5_mid1_fu_361_p2);
    sensitive << ( tmp_5_mid1_fu_361_p0 );
    sensitive << ( tmp_5_mid1_fu_361_p1 );

    SC_METHOD(thread_tmp_5_mid2_fu_366_p3);
    sensitive << ( tmp_5_fu_282_p2 );
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( tmp_5_mid1_fu_361_p2 );

    SC_METHOD(thread_tmp_6_fu_488_p2);
    sensitive << ( j_cast_mid2_cast_fu_463_p1 );
    sensitive << ( tmp_9_mid2_fu_450_p2 );

    SC_METHOD(thread_tmp_7_dup_fu_419_p2);
    sensitive << ( smax_cast_reg_558 );
    sensitive << ( index_1_mid_fu_337_p3 );

    SC_METHOD(thread_tmp_7_fu_494_p1);
    sensitive << ( tmp_6_fu_488_p2 );

    SC_METHOD(thread_tmp_8_fu_291_p2);
    sensitive << ( tmp_5_fu_282_p2 );
    sensitive << ( i_cast_mid1_fu_287_p1 );

    SC_METHOD(thread_tmp_8_mid1_fu_436_p2);
    sensitive << ( i_cast_fu_424_p1 );
    sensitive << ( tmp_5_mid2_fu_366_p3 );

    SC_METHOD(thread_tmp_9_mid223_v_fu_374_p3);
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( tmp_5_mid1_fu_361_p2 );
    sensitive << ( tmp_8_fu_291_p2 );

    SC_METHOD(thread_tmp_9_mid2_fu_450_p1);
    sensitive << ( kx );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_9_mid2_fu_450_p2);
    sensitive << ( tmp_9_mid2_v_fu_442_p3 );
    sensitive << ( tmp_9_mid2_fu_450_p1 );

    SC_METHOD(thread_tmp_9_mid2_v_fu_442_p3);
    sensitive << ( tmp_mid_fu_390_p3 );
    sensitive << ( tmp_9_mid223_v_fu_374_p3 );
    sensitive << ( tmp_8_mid1_fu_436_p2 );

    SC_METHOD(thread_tmp_fu_200_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( kx );

    SC_METHOD(thread_tmp_fu_200_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( tmp_fu_200_p0 );

    SC_METHOD(thread_tmp_mid_fu_390_p3);
    sensitive << ( tmp_reg_553 );
    sensitive << ( exitcond_flatten_fu_332_p2 );
    sensitive << ( tmp_s_fu_301_p2 );

    SC_METHOD(thread_tmp_s_fu_301_p1);
    sensitive << ( kx );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_s_fu_301_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_cast_fu_297_p1 );
    sensitive << ( tmp_s_fu_301_p1 );

    SC_METHOD(thread_weight_buffer_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_fu_494_p1 );

    SC_METHOD(thread_weight_buffer_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten1_fu_306_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "multiply_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, feature_buffer_address0, "(port)feature_buffer_address0");
    sc_trace(mVcdFile, feature_buffer_ce0, "(port)feature_buffer_ce0");
    sc_trace(mVcdFile, feature_buffer_q0, "(port)feature_buffer_q0");
    sc_trace(mVcdFile, weight_buffer_address0, "(port)weight_buffer_address0");
    sc_trace(mVcdFile, weight_buffer_ce0, "(port)weight_buffer_ce0");
    sc_trace(mVcdFile, weight_buffer_q0, "(port)weight_buffer_q0");
    sc_trace(mVcdFile, chin, "(port)chin");
    sc_trace(mVcdFile, kx, "(port)kx");
    sc_trace(mVcdFile, ky, "(port)ky");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten1_reg_88, "indvar_flatten1_reg_88");
    sc_trace(mVcdFile, index_reg_99, "index_reg_99");
    sc_trace(mVcdFile, c_reg_110, "c_reg_110");
    sc_trace(mVcdFile, indvar_flatten_reg_121, "indvar_flatten_reg_121");
    sc_trace(mVcdFile, index_1_reg_132, "index_1_reg_132");
    sc_trace(mVcdFile, i_reg_143, "i_reg_143");
    sc_trace(mVcdFile, sum_2_reg_154, "sum_2_reg_154");
    sc_trace(mVcdFile, index_2_reg_166, "index_2_reg_166");
    sc_trace(mVcdFile, j_reg_177, "j_reg_177");
    sc_trace(mVcdFile, tmp_fu_200_p2, "tmp_fu_200_p2");
    sc_trace(mVcdFile, tmp_reg_553, "tmp_reg_553");
    sc_trace(mVcdFile, smax_cast_fu_218_p1, "smax_cast_fu_218_p1");
    sc_trace(mVcdFile, smax_cast_reg_558, "smax_cast_reg_558");
    sc_trace(mVcdFile, tmp_2_fu_244_p2, "tmp_2_fu_244_p2");
    sc_trace(mVcdFile, tmp_2_reg_563, "tmp_2_reg_563");
    sc_trace(mVcdFile, bound_fu_258_p2, "bound_fu_258_p2");
    sc_trace(mVcdFile, bound_reg_568, "bound_reg_568");
    sc_trace(mVcdFile, bound4_fu_272_p2, "bound4_fu_272_p2");
    sc_trace(mVcdFile, bound4_reg_573, "bound4_reg_573");
    sc_trace(mVcdFile, exitcond_flatten1_fu_306_p2, "exitcond_flatten1_fu_306_p2");
    sc_trace(mVcdFile, exitcond_flatten1_reg_578, "exitcond_flatten1_reg_578");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next1_fu_311_p2, "indvar_flatten_next1_fu_311_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, index_mid2_fu_397_p3, "index_mid2_fu_397_p3");
    sc_trace(mVcdFile, c_mid2_fu_405_p3, "c_mid2_fu_405_p3");
    sc_trace(mVcdFile, index_1_mid2_fu_467_p3, "index_1_mid2_fu_467_p3");
    sc_trace(mVcdFile, i_mid2_fu_475_p3, "i_mid2_fu_475_p3");
    sc_trace(mVcdFile, tmp_10_fu_499_p2, "tmp_10_fu_499_p2");
    sc_trace(mVcdFile, j_1_fu_519_p3, "j_1_fu_519_p3");
    sc_trace(mVcdFile, indvar_flatten_next_fu_533_p3, "indvar_flatten_next_fu_533_p3");
    sc_trace(mVcdFile, sum_fu_188_p2, "sum_fu_188_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_4_fu_483_p1, "tmp_4_fu_483_p1");
    sc_trace(mVcdFile, tmp_7_fu_494_p1, "tmp_7_fu_494_p1");
    sc_trace(mVcdFile, tmp_9_fu_193_p2, "tmp_9_fu_193_p2");
    sc_trace(mVcdFile, tmp_fu_200_p0, "tmp_fu_200_p0");
    sc_trace(mVcdFile, tmp_11_fu_206_p0, "tmp_11_fu_206_p0");
    sc_trace(mVcdFile, tmp_11_fu_206_p1, "tmp_11_fu_206_p1");
    sc_trace(mVcdFile, smax_fu_210_p3, "smax_fu_210_p3");
    sc_trace(mVcdFile, tmp_1_fu_222_p0, "tmp_1_fu_222_p0");
    sc_trace(mVcdFile, tmp_12_fu_228_p0, "tmp_12_fu_228_p0");
    sc_trace(mVcdFile, tmp_1_fu_222_p2, "tmp_1_fu_222_p2");
    sc_trace(mVcdFile, tmp_12_fu_228_p1, "tmp_12_fu_228_p1");
    sc_trace(mVcdFile, smax1_fu_232_p3, "smax1_fu_232_p3");
    sc_trace(mVcdFile, tmp_2_fu_244_p0, "tmp_2_fu_244_p0");
    sc_trace(mVcdFile, tmp_2_fu_244_p1, "tmp_2_fu_244_p1");
    sc_trace(mVcdFile, cast_fu_250_p0, "cast_fu_250_p0");
    sc_trace(mVcdFile, cast1_fu_254_p0, "cast1_fu_254_p0");
    sc_trace(mVcdFile, bound_fu_258_p0, "bound_fu_258_p0");
    sc_trace(mVcdFile, bound_fu_258_p1, "bound_fu_258_p1");
    sc_trace(mVcdFile, bound4_fu_272_p0, "bound4_fu_272_p0");
    sc_trace(mVcdFile, bound4_fu_272_p1, "bound4_fu_272_p1");
    sc_trace(mVcdFile, tmp_5_fu_282_p0, "tmp_5_fu_282_p0");
    sc_trace(mVcdFile, tmp_5_fu_282_p1, "tmp_5_fu_282_p1");
    sc_trace(mVcdFile, tmp_5_fu_282_p2, "tmp_5_fu_282_p2");
    sc_trace(mVcdFile, i_cast_mid1_fu_287_p1, "i_cast_mid1_fu_287_p1");
    sc_trace(mVcdFile, j_cast_fu_297_p1, "j_cast_fu_297_p1");
    sc_trace(mVcdFile, tmp_s_fu_301_p1, "tmp_s_fu_301_p1");
    sc_trace(mVcdFile, c_s_fu_317_p2, "c_s_fu_317_p2");
    sc_trace(mVcdFile, exitcond_flatten_fu_332_p2, "exitcond_flatten_fu_332_p2");
    sc_trace(mVcdFile, index_s_fu_327_p2, "index_s_fu_327_p2");
    sc_trace(mVcdFile, tmp_5_mid1_fu_361_p0, "tmp_5_mid1_fu_361_p0");
    sc_trace(mVcdFile, tmp_5_mid1_fu_361_p1, "tmp_5_mid1_fu_361_p1");
    sc_trace(mVcdFile, tmp_5_mid1_fu_361_p2, "tmp_5_mid1_fu_361_p2");
    sc_trace(mVcdFile, tmp_8_fu_291_p2, "tmp_8_fu_291_p2");
    sc_trace(mVcdFile, tmp_s_fu_301_p2, "tmp_s_fu_301_p2");
    sc_trace(mVcdFile, i_mid_fu_345_p3, "i_mid_fu_345_p3");
    sc_trace(mVcdFile, index_1_mid_fu_337_p3, "index_1_mid_fu_337_p3");
    sc_trace(mVcdFile, i_1_fu_413_p2, "i_1_fu_413_p2");
    sc_trace(mVcdFile, tmp_mid_fu_390_p3, "tmp_mid_fu_390_p3");
    sc_trace(mVcdFile, index_2_mid_fu_353_p3, "index_2_mid_fu_353_p3");
    sc_trace(mVcdFile, tmp_7_dup_fu_419_p2, "tmp_7_dup_fu_419_p2");
    sc_trace(mVcdFile, i_cast_fu_424_p1, "i_cast_fu_424_p1");
    sc_trace(mVcdFile, tmp_5_mid2_fu_366_p3, "tmp_5_mid2_fu_366_p3");
    sc_trace(mVcdFile, tmp_9_mid223_v_fu_374_p3, "tmp_9_mid223_v_fu_374_p3");
    sc_trace(mVcdFile, tmp_8_mid1_fu_436_p2, "tmp_8_mid1_fu_436_p2");
    sc_trace(mVcdFile, tmp_9_mid2_v_fu_442_p3, "tmp_9_mid2_v_fu_442_p3");
    sc_trace(mVcdFile, tmp_9_mid2_fu_450_p1, "tmp_9_mid2_fu_450_p1");
    sc_trace(mVcdFile, j_cast_mid_fu_382_p3, "j_cast_mid_fu_382_p3");
    sc_trace(mVcdFile, j_cast_mid2_fu_455_p3, "j_cast_mid2_fu_455_p3");
    sc_trace(mVcdFile, index_2_mid2_fu_428_p3, "index_2_mid2_fu_428_p3");
    sc_trace(mVcdFile, j_cast_mid2_cast_fu_463_p1, "j_cast_mid2_cast_fu_463_p1");
    sc_trace(mVcdFile, tmp_9_mid2_fu_450_p2, "tmp_9_mid2_fu_450_p2");
    sc_trace(mVcdFile, tmp_6_fu_488_p2, "tmp_6_fu_488_p2");
    sc_trace(mVcdFile, j_op_fu_505_p2, "j_op_fu_505_p2");
    sc_trace(mVcdFile, j_mid213_op_fu_511_p3, "j_mid213_op_fu_511_p3");
    sc_trace(mVcdFile, indvar_flatten_op_fu_527_p2, "indvar_flatten_op_fu_527_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound4_fu_272_p00, "bound4_fu_272_p00");
    sc_trace(mVcdFile, bound4_fu_272_p10, "bound4_fu_272_p10");
    sc_trace(mVcdFile, bound_fu_258_p00, "bound_fu_258_p00");
    sc_trace(mVcdFile, bound_fu_258_p10, "bound_fu_258_p10");
    sc_trace(mVcdFile, tmp_2_fu_244_p00, "tmp_2_fu_244_p00");
    sc_trace(mVcdFile, tmp_2_fu_244_p10, "tmp_2_fu_244_p10");
    sc_trace(mVcdFile, tmp_5_fu_282_p10, "tmp_5_fu_282_p10");
    sc_trace(mVcdFile, tmp_5_mid1_fu_361_p00, "tmp_5_mid1_fu_361_p00");
#endif

    }
}

multiply::~multiply() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete conv_fadd_32ns_32bkb_U18;
    delete conv_fmul_32ns_32cud_U19;
}

void multiply::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        c_reg_110 = c_mid2_fu_405_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_reg_110 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        i_reg_143 = i_mid2_fu_475_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_143 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        index_1_reg_132 = index_1_mid2_fu_467_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        index_1_reg_132 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        index_2_reg_166 = tmp_10_fu_499_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        index_2_reg_166 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        index_reg_99 = index_mid2_fu_397_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        index_reg_99 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        indvar_flatten1_reg_88 = indvar_flatten_next1_fu_311_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten1_reg_88 = ap_const_lv96_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_121 = indvar_flatten_next_fu_533_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_121 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_0))) {
        j_reg_177 = j_1_fu_519_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_reg_177 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten1_reg_578.read(), ap_const_lv1_0))) {
        sum_2_reg_154 = sum_fu_188_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sum_2_reg_154 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound4_reg_573 = bound4_fu_272_p2.read();
        bound_reg_568 = bound_fu_258_p2.read();
        smax_cast_reg_558 = smax_cast_fu_218_p1.read();
        tmp_2_reg_563 = tmp_2_fu_244_p2.read();
        tmp_reg_553 = tmp_fu_200_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten1_reg_578 = exitcond_flatten1_fu_306_p2.read();
    }
}

void multiply::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void multiply::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void multiply::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void multiply::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void multiply::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void multiply::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void multiply::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void multiply::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void multiply::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void multiply::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void multiply::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void multiply::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void multiply::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void multiply::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void multiply::thread_ap_return() {
    ap_return = sum_2_reg_154.read();
}

void multiply::thread_bound4_fu_272_p0() {
    bound4_fu_272_p0 =  (sc_lv<64>) (bound4_fu_272_p00.read());
}

void multiply::thread_bound4_fu_272_p00() {
    bound4_fu_272_p00 = esl_zext<96,64>(bound_fu_258_p2.read());
}

void multiply::thread_bound4_fu_272_p1() {
    bound4_fu_272_p1 =  (sc_lv<32>) (bound4_fu_272_p10.read());
}

void multiply::thread_bound4_fu_272_p10() {
    bound4_fu_272_p10 = esl_zext<96,32>(chin.read());
}

void multiply::thread_bound4_fu_272_p2() {
    bound4_fu_272_p2 = (!bound4_fu_272_p0.read().is_01() || !bound4_fu_272_p1.read().is_01())? sc_lv<96>(): sc_biguint<64>(bound4_fu_272_p0.read()) * sc_biguint<32>(bound4_fu_272_p1.read());
}

void multiply::thread_bound_fu_258_p0() {
    bound_fu_258_p0 =  (sc_lv<32>) (bound_fu_258_p00.read());
}

void multiply::thread_bound_fu_258_p00() {
    bound_fu_258_p00 = esl_zext<64,32>(cast1_fu_254_p0.read());
}

void multiply::thread_bound_fu_258_p1() {
    bound_fu_258_p1 =  (sc_lv<32>) (bound_fu_258_p10.read());
}

void multiply::thread_bound_fu_258_p10() {
    bound_fu_258_p10 = esl_zext<64,32>(cast_fu_250_p0.read());
}

void multiply::thread_bound_fu_258_p2() {
    bound_fu_258_p2 = (!bound_fu_258_p0.read().is_01() || !bound_fu_258_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_258_p0.read()) * sc_biguint<32>(bound_fu_258_p1.read());
}

void multiply::thread_c_mid2_fu_405_p3() {
    c_mid2_fu_405_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<31>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? c_s_fu_317_p2.read(): c_reg_110.read());
}

void multiply::thread_c_s_fu_317_p2() {
    c_s_fu_317_p2 = (!c_reg_110.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(c_reg_110.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void multiply::thread_cast1_fu_254_p0() {
    cast1_fu_254_p0 = kx.read();
}

void multiply::thread_cast_fu_250_p0() {
    cast_fu_250_p0 = ky.read();
}

void multiply::thread_exitcond_flatten1_fu_306_p2() {
    exitcond_flatten1_fu_306_p2 = (!indvar_flatten1_reg_88.read().is_01() || !bound4_reg_573.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten1_reg_88.read() == bound4_reg_573.read());
}

void multiply::thread_exitcond_flatten_fu_332_p2() {
    exitcond_flatten_fu_332_p2 = (!indvar_flatten_reg_121.read().is_01() || !bound_reg_568.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_121.read() == bound_reg_568.read());
}

void multiply::thread_feature_buffer_address0() {
    feature_buffer_address0 =  (sc_lv<15>) (tmp_4_fu_483_p1.read());
}

void multiply::thread_feature_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        feature_buffer_ce0 = ap_const_logic_1;
    } else {
        feature_buffer_ce0 = ap_const_logic_0;
    }
}

void multiply::thread_i_1_fu_413_p2() {
    i_1_fu_413_p2 = (!i_mid_fu_345_p3.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_mid_fu_345_p3.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void multiply::thread_i_cast_fu_424_p1() {
    i_cast_fu_424_p1 = esl_zext<32,31>(i_1_fu_413_p2.read());
}

void multiply::thread_i_cast_mid1_fu_287_p1() {
    i_cast_mid1_fu_287_p1 = esl_zext<32,31>(i_reg_143.read());
}

void multiply::thread_i_mid2_fu_475_p3() {
    i_mid2_fu_475_p3 = (!tmp_mid_fu_390_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_mid_fu_390_p3.read()[0].to_bool())? i_mid_fu_345_p3.read(): i_1_fu_413_p2.read());
}

void multiply::thread_i_mid_fu_345_p3() {
    i_mid_fu_345_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<31>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? ap_const_lv31_0: i_reg_143.read());
}

void multiply::thread_index_1_mid2_fu_467_p3() {
    index_1_mid2_fu_467_p3 = (!tmp_mid_fu_390_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_mid_fu_390_p3.read()[0].to_bool())? index_1_mid_fu_337_p3.read(): tmp_7_dup_fu_419_p2.read());
}

void multiply::thread_index_1_mid_fu_337_p3() {
    index_1_mid_fu_337_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<32>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? index_s_fu_327_p2.read(): index_1_reg_132.read());
}

void multiply::thread_index_2_mid2_fu_428_p3() {
    index_2_mid2_fu_428_p3 = (!tmp_mid_fu_390_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_mid_fu_390_p3.read()[0].to_bool())? index_2_mid_fu_353_p3.read(): tmp_7_dup_fu_419_p2.read());
}

void multiply::thread_index_2_mid_fu_353_p3() {
    index_2_mid_fu_353_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<32>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? index_s_fu_327_p2.read(): index_2_reg_166.read());
}

void multiply::thread_index_mid2_fu_397_p3() {
    index_mid2_fu_397_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<32>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? index_s_fu_327_p2.read(): index_reg_99.read());
}

void multiply::thread_index_s_fu_327_p2() {
    index_s_fu_327_p2 = (!tmp_2_reg_563.read().is_01() || !index_reg_99.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_2_reg_563.read()) + sc_biguint<32>(index_reg_99.read()));
}

void multiply::thread_indvar_flatten_next1_fu_311_p2() {
    indvar_flatten_next1_fu_311_p2 = (!indvar_flatten1_reg_88.read().is_01() || !ap_const_lv96_1.is_01())? sc_lv<96>(): (sc_biguint<96>(indvar_flatten1_reg_88.read()) + sc_biguint<96>(ap_const_lv96_1));
}

void multiply::thread_indvar_flatten_next_fu_533_p3() {
    indvar_flatten_next_fu_533_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<64>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? ap_const_lv64_1: indvar_flatten_op_fu_527_p2.read());
}

void multiply::thread_indvar_flatten_op_fu_527_p2() {
    indvar_flatten_op_fu_527_p2 = (!indvar_flatten_reg_121.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_121.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void multiply::thread_j_1_fu_519_p3() {
    j_1_fu_519_p3 = (!tmp_mid_fu_390_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_mid_fu_390_p3.read()[0].to_bool())? j_mid213_op_fu_511_p3.read(): ap_const_lv31_1);
}

void multiply::thread_j_cast_fu_297_p1() {
    j_cast_fu_297_p1 = esl_zext<32,31>(j_reg_177.read());
}

void multiply::thread_j_cast_mid2_cast_fu_463_p1() {
    j_cast_mid2_cast_fu_463_p1 = esl_zext<32,31>(j_cast_mid2_fu_455_p3.read());
}

void multiply::thread_j_cast_mid2_fu_455_p3() {
    j_cast_mid2_fu_455_p3 = (!tmp_mid_fu_390_p3.read()[0].is_01())? sc_lv<31>(): ((tmp_mid_fu_390_p3.read()[0].to_bool())? j_cast_mid_fu_382_p3.read(): ap_const_lv31_0);
}

void multiply::thread_j_cast_mid_fu_382_p3() {
    j_cast_mid_fu_382_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<31>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? ap_const_lv31_0: j_reg_177.read());
}

void multiply::thread_j_mid213_op_fu_511_p3() {
    j_mid213_op_fu_511_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<31>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? ap_const_lv31_1: j_op_fu_505_p2.read());
}

void multiply::thread_j_op_fu_505_p2() {
    j_op_fu_505_p2 = (!j_reg_177.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(j_reg_177.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void multiply::thread_smax1_fu_232_p3() {
    smax1_fu_232_p3 = (!tmp_1_fu_222_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_1_fu_222_p2.read()[0].to_bool())? tmp_12_fu_228_p1.read(): ap_const_lv31_0);
}

void multiply::thread_smax_cast_fu_218_p1() {
    smax_cast_fu_218_p1 = esl_zext<32,31>(smax_fu_210_p3.read());
}

void multiply::thread_smax_fu_210_p3() {
    smax_fu_210_p3 = (!tmp_fu_200_p2.read()[0].is_01())? sc_lv<31>(): ((tmp_fu_200_p2.read()[0].to_bool())? tmp_11_fu_206_p1.read(): ap_const_lv31_0);
}

void multiply::thread_tmp_10_fu_499_p2() {
    tmp_10_fu_499_p2 = (!index_2_mid2_fu_428_p3.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(index_2_mid2_fu_428_p3.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void multiply::thread_tmp_11_fu_206_p0() {
    tmp_11_fu_206_p0 = kx.read();
}

void multiply::thread_tmp_11_fu_206_p1() {
    tmp_11_fu_206_p1 = tmp_11_fu_206_p0.read().range(31-1, 0);
}

void multiply::thread_tmp_12_fu_228_p0() {
    tmp_12_fu_228_p0 = ky.read();
}

void multiply::thread_tmp_12_fu_228_p1() {
    tmp_12_fu_228_p1 = tmp_12_fu_228_p0.read().range(31-1, 0);
}

void multiply::thread_tmp_1_fu_222_p0() {
    tmp_1_fu_222_p0 = ky.read();
}

void multiply::thread_tmp_1_fu_222_p2() {
    tmp_1_fu_222_p2 = (!tmp_1_fu_222_p0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_1_fu_222_p0.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void multiply::thread_tmp_2_fu_244_p0() {
    tmp_2_fu_244_p0 =  (sc_lv<31>) (tmp_2_fu_244_p00.read());
}

void multiply::thread_tmp_2_fu_244_p00() {
    tmp_2_fu_244_p00 = esl_zext<32,31>(smax1_fu_232_p3.read());
}

void multiply::thread_tmp_2_fu_244_p1() {
    tmp_2_fu_244_p1 =  (sc_lv<31>) (tmp_2_fu_244_p10.read());
}

void multiply::thread_tmp_2_fu_244_p10() {
    tmp_2_fu_244_p10 = esl_zext<32,31>(smax_fu_210_p3.read());
}

void multiply::thread_tmp_2_fu_244_p2() {
    tmp_2_fu_244_p2 = (!tmp_2_fu_244_p0.read().is_01() || !tmp_2_fu_244_p1.read().is_01())? sc_lv<32>(): sc_biguint<31>(tmp_2_fu_244_p0.read()) * sc_biguint<31>(tmp_2_fu_244_p1.read());
}

void multiply::thread_tmp_4_fu_483_p1() {
    tmp_4_fu_483_p1 = esl_sext<64,32>(index_2_mid2_fu_428_p3.read());
}

void multiply::thread_tmp_5_fu_282_p0() {
    tmp_5_fu_282_p0 = ky.read();
}

void multiply::thread_tmp_5_fu_282_p1() {
    tmp_5_fu_282_p1 =  (sc_lv<31>) (tmp_5_fu_282_p10.read());
}

void multiply::thread_tmp_5_fu_282_p10() {
    tmp_5_fu_282_p10 = esl_zext<32,31>(c_reg_110.read());
}

void multiply::thread_tmp_5_fu_282_p2() {
    tmp_5_fu_282_p2 = (!tmp_5_fu_282_p0.read().is_01() || !tmp_5_fu_282_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_5_fu_282_p0.read()) * sc_biguint<31>(tmp_5_fu_282_p1.read());
}

void multiply::thread_tmp_5_mid1_fu_361_p0() {
    tmp_5_mid1_fu_361_p0 =  (sc_lv<31>) (tmp_5_mid1_fu_361_p00.read());
}

void multiply::thread_tmp_5_mid1_fu_361_p00() {
    tmp_5_mid1_fu_361_p00 = esl_zext<32,31>(c_s_fu_317_p2.read());
}

void multiply::thread_tmp_5_mid1_fu_361_p1() {
    tmp_5_mid1_fu_361_p1 = ky.read();
}

void multiply::thread_tmp_5_mid1_fu_361_p2() {
    tmp_5_mid1_fu_361_p2 = (!tmp_5_mid1_fu_361_p0.read().is_01() || !tmp_5_mid1_fu_361_p1.read().is_01())? sc_lv<32>(): sc_biguint<31>(tmp_5_mid1_fu_361_p0.read()) * sc_bigint<32>(tmp_5_mid1_fu_361_p1.read());
}

void multiply::thread_tmp_5_mid2_fu_366_p3() {
    tmp_5_mid2_fu_366_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<32>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? tmp_5_mid1_fu_361_p2.read(): tmp_5_fu_282_p2.read());
}

void multiply::thread_tmp_6_fu_488_p2() {
    tmp_6_fu_488_p2 = (!j_cast_mid2_cast_fu_463_p1.read().is_01() || !tmp_9_mid2_fu_450_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(j_cast_mid2_cast_fu_463_p1.read()) + sc_biguint<32>(tmp_9_mid2_fu_450_p2.read()));
}

void multiply::thread_tmp_7_dup_fu_419_p2() {
    tmp_7_dup_fu_419_p2 = (!smax_cast_reg_558.read().is_01() || !index_1_mid_fu_337_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(smax_cast_reg_558.read()) + sc_biguint<32>(index_1_mid_fu_337_p3.read()));
}

void multiply::thread_tmp_7_fu_494_p1() {
    tmp_7_fu_494_p1 = esl_sext<64,32>(tmp_6_fu_488_p2.read());
}

void multiply::thread_tmp_8_fu_291_p2() {
    tmp_8_fu_291_p2 = (!tmp_5_fu_282_p2.read().is_01() || !i_cast_mid1_fu_287_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_fu_282_p2.read()) + sc_biguint<32>(i_cast_mid1_fu_287_p1.read()));
}

void multiply::thread_tmp_8_mid1_fu_436_p2() {
    tmp_8_mid1_fu_436_p2 = (!i_cast_fu_424_p1.read().is_01() || !tmp_5_mid2_fu_366_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(i_cast_fu_424_p1.read()) + sc_biguint<32>(tmp_5_mid2_fu_366_p3.read()));
}

void multiply::thread_tmp_9_mid223_v_fu_374_p3() {
    tmp_9_mid223_v_fu_374_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<32>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? tmp_5_mid1_fu_361_p2.read(): tmp_8_fu_291_p2.read());
}

void multiply::thread_tmp_9_mid2_fu_450_p1() {
    tmp_9_mid2_fu_450_p1 = kx.read();
}

void multiply::thread_tmp_9_mid2_fu_450_p2() {
    tmp_9_mid2_fu_450_p2 = (!tmp_9_mid2_v_fu_442_p3.read().is_01() || !tmp_9_mid2_fu_450_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_9_mid2_v_fu_442_p3.read()) * sc_bigint<32>(tmp_9_mid2_fu_450_p1.read());
}

void multiply::thread_tmp_9_mid2_v_fu_442_p3() {
    tmp_9_mid2_v_fu_442_p3 = (!tmp_mid_fu_390_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_mid_fu_390_p3.read()[0].to_bool())? tmp_9_mid223_v_fu_374_p3.read(): tmp_8_mid1_fu_436_p2.read());
}

void multiply::thread_tmp_fu_200_p0() {
    tmp_fu_200_p0 = kx.read();
}

void multiply::thread_tmp_fu_200_p2() {
    tmp_fu_200_p2 = (!tmp_fu_200_p0.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_fu_200_p0.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void multiply::thread_tmp_mid_fu_390_p3() {
    tmp_mid_fu_390_p3 = (!exitcond_flatten_fu_332_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_flatten_fu_332_p2.read()[0].to_bool())? tmp_reg_553.read(): tmp_s_fu_301_p2.read());
}

void multiply::thread_tmp_s_fu_301_p1() {
    tmp_s_fu_301_p1 = kx.read();
}

void multiply::thread_tmp_s_fu_301_p2() {
    tmp_s_fu_301_p2 = (!j_cast_fu_297_p1.read().is_01() || !tmp_s_fu_301_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j_cast_fu_297_p1.read()) < sc_bigint<32>(tmp_s_fu_301_p1.read()));
}

void multiply::thread_weight_buffer_address0() {
    weight_buffer_address0 =  (sc_lv<15>) (tmp_7_fu_494_p1.read());
}

void multiply::thread_weight_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        weight_buffer_ce0 = ap_const_logic_1;
    } else {
        weight_buffer_ce0 = ap_const_logic_0;
    }
}

void multiply::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten1_fu_306_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

