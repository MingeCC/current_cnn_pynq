

================================================================
== Vivado HLS Report for 'load_weight'
================================================================
* Date:           Wed Apr 24 21:45:32 2024

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        current_conv
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  50.00|    43.750|        6.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  100|  100|  100|  100|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   91|   91|         3|          1|          1|    90|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      6|       0|    144|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|    113|
|Register         |        -|      -|     205|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      6|     205|    257|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      2|   ~0   |   ~0  |
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------------------+----------+-------+---+----+------------+------------+
    |           Variable Name           | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------------------+----------+-------+---+----+------------+------------+
    |n_fu_130_p2                        |     *    |      3|  0|  20|          32|          32|
    |tmp1_fu_124_p2                     |     *    |      3|  0|  20|          32|          32|
    |c_1_fu_169_p2                      |     +    |      0|  0|  38|          31|           1|
    |sum2_fu_144_p2                     |     +    |      0|  0|  40|          33|          33|
    |ap_block_pp0_stage0_11001          |    and   |      0|  0|   2|           1|           1|
    |ap_block_state10_pp0_stage0_iter1  |    and   |      0|  0|   2|           1|           1|
    |tmp_s_fu_164_p2                    |   icmp   |      0|  0|  18|          32|          32|
    |ap_enable_pp0                      |    xor   |      0|  0|   2|           1|           2|
    |ap_enable_reg_pp0_iter1            |    xor   |      0|  0|   2|           2|           1|
    +-----------------------------------+----------+-------+---+----+------------+------------+
    |Total                              |          |      6|  0| 144|         165|         135|
    +-----------------------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +-------------------------------------+----+-----------+-----+-----------+
    |                 Name                | LUT| Input Size| Bits| Total Bits|
    +-------------------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                            |  50|         11|    1|         11|
    |ap_enable_reg_pp0_iter1              |   9|          2|    1|          2|
    |ap_enable_reg_pp0_iter2              |   9|          2|    1|          2|
    |ap_phi_mux_c_phi_fu_116_p4           |   9|          2|   31|         62|
    |ap_sig_ioackin_m_axi_weight_ARREADY  |   9|          2|    1|          2|
    |c_reg_112                            |   9|          2|   31|         62|
    |weight_blk_n_AR                      |   9|          2|    1|          2|
    |weight_blk_n_R                       |   9|          2|    1|          2|
    +-------------------------------------+----+-----------+-----+-----------+
    |Total                                | 113|         25|   68|        145|
    +-------------------------------------+----+-----------+-----+-----------+

    * Register: 
    +-------------------------------------+----+----+-----+-----------+
    |                 Name                | FF | LUT| Bits| Const Bits|
    +-------------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                            |  10|   0|   10|          0|
    |ap_enable_reg_pp0_iter0              |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1              |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter2              |   1|   0|    1|          0|
    |ap_reg_ioackin_m_axi_weight_ARREADY  |   1|   0|    1|          0|
    |c_1_reg_196                          |  31|   0|   31|          0|
    |c_reg_112                            |  31|   0|   31|          0|
    |c_reg_112_pp0_iter1_reg              |  31|   0|   31|          0|
    |n_reg_180                            |  32|   0|   32|          0|
    |tmp_s_reg_192                        |   1|   0|    1|          0|
    |tmp_s_reg_192_pp0_iter1_reg          |   1|   0|    1|          0|
    |weight_addr_read_reg_201             |  32|   0|   32|          0|
    |weight_addr_reg_186                  |  32|   0|   32|          0|
    +-------------------------------------+----+----+-----+-----------+
    |Total                                | 205|   0|  205|          0|
    +-------------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+------------+----------------+--------------+
|        RTL Ports       | Dir | Bits|  Protocol  |  Source Object |    C Type    |
+------------------------+-----+-----+------------+----------------+--------------+
|ap_clk                  |  in |    1| ap_ctrl_hs |   load_weight  | return value |
|ap_rst                  |  in |    1| ap_ctrl_hs |   load_weight  | return value |
|ap_start                |  in |    1| ap_ctrl_hs |   load_weight  | return value |
|ap_done                 | out |    1| ap_ctrl_hs |   load_weight  | return value |
|ap_idle                 | out |    1| ap_ctrl_hs |   load_weight  | return value |
|ap_ready                | out |    1| ap_ctrl_hs |   load_weight  | return value |
|m_axi_weight_AWVALID    | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWREADY    |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWADDR     | out |   32|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWID       | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWLEN      | out |   32|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWSIZE     | out |    3|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWBURST    | out |    2|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWLOCK     | out |    2|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWCACHE    | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWPROT     | out |    3|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWQOS      | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWREGION   | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_AWUSER     | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WVALID     | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WREADY     |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WDATA      | out |   32|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WSTRB      | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WLAST      | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WID        | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_WUSER      | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARVALID    | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARREADY    |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARADDR     | out |   32|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARID       | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARLEN      | out |   32|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARSIZE     | out |    3|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARBURST    | out |    2|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARLOCK     | out |    2|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARCACHE    | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARPROT     | out |    3|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARQOS      | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARREGION   | out |    4|    m_axi   |     weight     |    pointer   |
|m_axi_weight_ARUSER     | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RVALID     |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RREADY     | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RDATA      |  in |   32|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RLAST      |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RID        |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RUSER      |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_RRESP      |  in |    2|    m_axi   |     weight     |    pointer   |
|m_axi_weight_BVALID     |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_BREADY     | out |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_BRESP      |  in |    2|    m_axi   |     weight     |    pointer   |
|m_axi_weight_BID        |  in |    1|    m_axi   |     weight     |    pointer   |
|m_axi_weight_BUSER      |  in |    1|    m_axi   |     weight     |    pointer   |
|weight_offset           |  in |   30|   ap_none  |  weight_offset |    scalar    |
|weight_offset1          |  in |   32|   ap_none  | weight_offset1 |    scalar    |
|weight_buffer_address0  | out |   15|  ap_memory |  weight_buffer |     array    |
|weight_buffer_ce0       | out |    1|  ap_memory |  weight_buffer |     array    |
|weight_buffer_we0       | out |    1|  ap_memory |  weight_buffer |     array    |
|weight_buffer_d0        | out |   32|  ap_memory |  weight_buffer |     array    |
|chin                    |  in |   32|   ap_none  |      chin      |    scalar    |
|kx                      |  in |   32|   ap_none  |       kx       |    scalar    |
|ky                      |  in |   32|   ap_none  |       ky       |    scalar    |
+------------------------+-----+-----+------------+----------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	12  / (!tmp_s)
	10  / (tmp_s)
10 --> 
	11  / true
11 --> 
	9  / true
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 17.0>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%ky_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ky)"   --->   Operation 13 'read' 'ky_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%kx_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %kx)"   --->   Operation 14 'read' 'kx_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%chin_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %chin)"   --->   Operation 15 'read' 'chin_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%weight_offset1_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %weight_offset1)"   --->   Operation 16 'read' 'weight_offset1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%weight_offset_read = call i30 @_ssdm_op_Read.ap_auto.i30(i30 %weight_offset)"   --->   Operation 17 'read' 'weight_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (8.51ns)   --->   "%tmp1 = mul i32 %chin_read, %ky_read" [current_conv/current_conv.cpp:65]   --->   Operation 18 'mul' 'tmp1' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (8.51ns)   --->   "%n = mul i32 %kx_read, %tmp1" [current_conv/current_conv.cpp:65]   --->   Operation 19 'mul' 'n' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_3_cast = sext i32 %weight_offset1_read to i33" [current_conv/current_conv.cpp:71]   --->   Operation 20 'sext' 'tmp_3_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%sext_cast = zext i30 %weight_offset_read to i33" [current_conv/current_conv.cpp:71]   --->   Operation 21 'zext' 'sext_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (2.55ns)   --->   "%sum2 = add i33 %tmp_3_cast, %sext_cast" [current_conv/current_conv.cpp:71]   --->   Operation 22 'add' 'sum2' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%sum2_cast = sext i33 %sum2 to i64" [current_conv/current_conv.cpp:71]   --->   Operation 23 'sext' 'sum2_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%weight_addr = getelementptr float* %weight, i64 %sum2_cast" [current_conv/current_conv.cpp:71]   --->   Operation 24 'getelementptr' 'weight_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 43.7>
ST_2 : Operation 25 [7/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 25 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 43.7>
ST_3 : Operation 26 [6/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 26 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 43.7>
ST_4 : Operation 27 [5/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 27 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 43.7>
ST_5 : Operation 28 [4/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 28 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 43.7>
ST_6 : Operation 29 [3/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 29 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 43.7>
ST_7 : Operation 30 [2/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 30 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 43.7>
ST_8 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %weight, [6 x i8]* @p_str9, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 99999999, [5 x i8]* @p_str10, [6 x i8]* @p_str11, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 31 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 32 [1/7] (43.7ns)   --->   "%weight_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.floatP(float* %weight_addr, i32 %n)" [current_conv/current_conv.cpp:71]   --->   Operation 32 'readreq' 'weight_addr_rd_req' <Predicate = true> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 33 [1/1] (1.76ns)   --->   "br label %1" [current_conv/current_conv.cpp:66]   --->   Operation 33 'br' <Predicate = true> <Delay = 1.76>

State 9 <SV = 8> <Delay = 2.52>
ST_9 : Operation 34 [1/1] (0.00ns)   --->   "%c = phi i31 [ 0, %0 ], [ %c_1, %2 ]"   --->   Operation 34 'phi' 'c' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 35 [1/1] (0.00ns)   --->   "%c_cast = zext i31 %c to i32" [current_conv/current_conv.cpp:66]   --->   Operation 35 'zext' 'c_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 36 [1/1] (2.47ns)   --->   "%tmp_s = icmp slt i32 %c_cast, %n" [current_conv/current_conv.cpp:66]   --->   Operation 36 'icmp' 'tmp_s' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 37 [1/1] (2.52ns)   --->   "%c_1 = add i31 %c, 1" [current_conv/current_conv.cpp:66]   --->   Operation 37 'add' 'c_1' <Predicate = true> <Delay = 2.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %tmp_s, label %2, label %3" [current_conv/current_conv.cpp:66]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 43.7>
ST_10 : Operation 39 [1/1] (43.7ns)   --->   "%weight_addr_read = call float @_ssdm_op_Read.m_axi.floatP(float* %weight_addr)" [current_conv/current_conv.cpp:71]   --->   Operation 39 'read' 'weight_addr_read' <Predicate = (tmp_s)> <Delay = 43.7> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_11 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [current_conv/current_conv.cpp:67]   --->   Operation 40 'specregionbegin' 'tmp_11' <Predicate = (tmp_s)> <Delay = 0.00>
ST_11 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [current_conv/current_conv.cpp:68]   --->   Operation 41 'specpipeline' <Predicate = (tmp_s)> <Delay = 0.00>
ST_11 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 90, i32 90, i32 90, [1 x i8]* @p_str1) nounwind" [current_conv/current_conv.cpp:69]   --->   Operation 42 'speclooptripcount' <Predicate = (tmp_s)> <Delay = 0.00>
ST_11 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_12 = zext i31 %c to i64" [current_conv/current_conv.cpp:71]   --->   Operation 43 'zext' 'tmp_12' <Predicate = (tmp_s)> <Delay = 0.00>
ST_11 : Operation 44 [1/1] (0.00ns)   --->   "%weight_buffer_addr = getelementptr [25600 x float]* %weight_buffer, i64 0, i64 %tmp_12" [current_conv/current_conv.cpp:71]   --->   Operation 44 'getelementptr' 'weight_buffer_addr' <Predicate = (tmp_s)> <Delay = 0.00>
ST_11 : Operation 45 [1/1] (3.25ns)   --->   "store float %weight_addr_read, float* %weight_buffer_addr, align 4" [current_conv/current_conv.cpp:71]   --->   Operation 45 'store' <Predicate = (tmp_s)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 25600> <RAM>
ST_11 : Operation 46 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_11)" [current_conv/current_conv.cpp:72]   --->   Operation 46 'specregionend' 'empty' <Predicate = (tmp_s)> <Delay = 0.00>
ST_11 : Operation 47 [1/1] (0.00ns)   --->   "br label %1" [current_conv/current_conv.cpp:66]   --->   Operation 47 'br' <Predicate = (tmp_s)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 0.00>
ST_12 : Operation 48 [1/1] (0.00ns)   --->   "ret void" [current_conv/current_conv.cpp:74]   --->   Operation 48 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ weight]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ weight_offset]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ weight_offset1]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ weight_buffer]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=1; pingpong=0; private_global=0; MemPort=[03]; IO mode=ap_memory:ce=0
Port [ chin]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ kx]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ ky]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
ky_read             (read             ) [ 0000000000000]
kx_read             (read             ) [ 0000000000000]
chin_read           (read             ) [ 0000000000000]
weight_offset1_read (read             ) [ 0000000000000]
weight_offset_read  (read             ) [ 0000000000000]
tmp1                (mul              ) [ 0000000000000]
n                   (mul              ) [ 0011111111110]
tmp_3_cast          (sext             ) [ 0000000000000]
sext_cast           (zext             ) [ 0000000000000]
sum2                (add              ) [ 0000000000000]
sum2_cast           (sext             ) [ 0000000000000]
weight_addr         (getelementptr    ) [ 0011111111110]
StgValue_31         (specinterface    ) [ 0000000000000]
weight_addr_rd_req  (readreq          ) [ 0000000000000]
StgValue_33         (br               ) [ 0000000011110]
c                   (phi              ) [ 0000000001110]
c_cast              (zext             ) [ 0000000000000]
tmp_s               (icmp             ) [ 0000000001110]
c_1                 (add              ) [ 0000000011110]
StgValue_38         (br               ) [ 0000000000000]
weight_addr_read    (read             ) [ 0000000001010]
tmp_11              (specregionbegin  ) [ 0000000000000]
StgValue_41         (specpipeline     ) [ 0000000000000]
StgValue_42         (speclooptripcount) [ 0000000000000]
tmp_12              (zext             ) [ 0000000000000]
weight_buffer_addr  (getelementptr    ) [ 0000000000000]
StgValue_45         (store            ) [ 0000000000000]
empty               (specregionend    ) [ 0000000000000]
StgValue_47         (br               ) [ 0000000011110]
StgValue_48         (ret              ) [ 0000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="weight">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="weight"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="weight_offset">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="weight_offset"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="weight_offset1">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="weight_offset1"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="weight_buffer">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="weight_buffer"/><MemPortTyVec>0 3 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="chin">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="chin"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="kx">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="kx"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="ky">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="ky"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i30"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str9"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str10"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str11"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.floatP"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="58" class="1004" name="ky_read_read_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="32" slack="0"/>
<pin id="60" dir="0" index="1" bw="32" slack="0"/>
<pin id="61" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="ky_read/1 "/>
</bind>
</comp>

<comp id="64" class="1004" name="kx_read_read_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="0"/>
<pin id="66" dir="0" index="1" bw="32" slack="0"/>
<pin id="67" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="kx_read/1 "/>
</bind>
</comp>

<comp id="70" class="1004" name="chin_read_read_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="32" slack="0"/>
<pin id="72" dir="0" index="1" bw="32" slack="0"/>
<pin id="73" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="chin_read/1 "/>
</bind>
</comp>

<comp id="76" class="1004" name="weight_offset1_read_read_fu_76">
<pin_list>
<pin id="77" dir="0" index="0" bw="32" slack="0"/>
<pin id="78" dir="0" index="1" bw="32" slack="0"/>
<pin id="79" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="weight_offset1_read/1 "/>
</bind>
</comp>

<comp id="82" class="1004" name="weight_offset_read_read_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="30" slack="0"/>
<pin id="84" dir="0" index="1" bw="30" slack="0"/>
<pin id="85" dir="1" index="2" bw="30" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="weight_offset_read/1 "/>
</bind>
</comp>

<comp id="88" class="1004" name="grp_readreq_fu_88">
<pin_list>
<pin id="89" dir="0" index="0" bw="1" slack="0"/>
<pin id="90" dir="0" index="1" bw="32" slack="1"/>
<pin id="91" dir="0" index="2" bw="32" slack="1"/>
<pin id="92" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="weight_addr_rd_req/2 "/>
</bind>
</comp>

<comp id="94" class="1004" name="weight_addr_read_read_fu_94">
<pin_list>
<pin id="95" dir="0" index="0" bw="32" slack="0"/>
<pin id="96" dir="0" index="1" bw="32" slack="9"/>
<pin id="97" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="weight_addr_read/10 "/>
</bind>
</comp>

<comp id="99" class="1004" name="weight_buffer_addr_gep_fu_99">
<pin_list>
<pin id="100" dir="0" index="0" bw="32" slack="0"/>
<pin id="101" dir="0" index="1" bw="1" slack="0"/>
<pin id="102" dir="0" index="2" bw="31" slack="0"/>
<pin id="103" dir="1" index="3" bw="15" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="weight_buffer_addr/11 "/>
</bind>
</comp>

<comp id="106" class="1004" name="StgValue_45_access_fu_106">
<pin_list>
<pin id="107" dir="0" index="0" bw="15" slack="0"/>
<pin id="108" dir="0" index="1" bw="32" slack="1"/>
<pin id="109" dir="0" index="2" bw="0" slack="2147483647"/>
<pin id="110" dir="1" index="3" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="StgValue_45/11 "/>
</bind>
</comp>

<comp id="112" class="1005" name="c_reg_112">
<pin_list>
<pin id="113" dir="0" index="0" bw="31" slack="1"/>
<pin id="114" dir="1" index="1" bw="31" slack="1"/>
</pin_list>
<bind>
<opset="c (phireg) "/>
</bind>
</comp>

<comp id="116" class="1004" name="c_phi_fu_116">
<pin_list>
<pin id="117" dir="0" index="0" bw="1" slack="1"/>
<pin id="118" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="119" dir="0" index="2" bw="31" slack="0"/>
<pin id="120" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="121" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="c/9 "/>
</bind>
</comp>

<comp id="124" class="1004" name="tmp1_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="32" slack="0"/>
<pin id="126" dir="0" index="1" bw="32" slack="0"/>
<pin id="127" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="tmp1/1 "/>
</bind>
</comp>

<comp id="130" class="1004" name="n_fu_130">
<pin_list>
<pin id="131" dir="0" index="0" bw="32" slack="0"/>
<pin id="132" dir="0" index="1" bw="32" slack="0"/>
<pin id="133" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="n/1 "/>
</bind>
</comp>

<comp id="136" class="1004" name="tmp_3_cast_fu_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="32" slack="0"/>
<pin id="138" dir="1" index="1" bw="33" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="tmp_3_cast/1 "/>
</bind>
</comp>

<comp id="140" class="1004" name="sext_cast_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="30" slack="0"/>
<pin id="142" dir="1" index="1" bw="33" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="sext_cast/1 "/>
</bind>
</comp>

<comp id="144" class="1004" name="sum2_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="32" slack="0"/>
<pin id="146" dir="0" index="1" bw="30" slack="0"/>
<pin id="147" dir="1" index="2" bw="33" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="sum2/1 "/>
</bind>
</comp>

<comp id="150" class="1004" name="sum2_cast_fu_150">
<pin_list>
<pin id="151" dir="0" index="0" bw="33" slack="0"/>
<pin id="152" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sum2_cast/1 "/>
</bind>
</comp>

<comp id="154" class="1004" name="weight_addr_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="32" slack="0"/>
<pin id="156" dir="0" index="1" bw="32" slack="0"/>
<pin id="157" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="weight_addr/1 "/>
</bind>
</comp>

<comp id="160" class="1004" name="c_cast_fu_160">
<pin_list>
<pin id="161" dir="0" index="0" bw="31" slack="0"/>
<pin id="162" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="c_cast/9 "/>
</bind>
</comp>

<comp id="164" class="1004" name="tmp_s_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="32" slack="0"/>
<pin id="166" dir="0" index="1" bw="32" slack="8"/>
<pin id="167" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_s/9 "/>
</bind>
</comp>

<comp id="169" class="1004" name="c_1_fu_169">
<pin_list>
<pin id="170" dir="0" index="0" bw="31" slack="0"/>
<pin id="171" dir="0" index="1" bw="1" slack="0"/>
<pin id="172" dir="1" index="2" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="c_1/9 "/>
</bind>
</comp>

<comp id="175" class="1004" name="tmp_12_fu_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="31" slack="2"/>
<pin id="177" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_12/11 "/>
</bind>
</comp>

<comp id="180" class="1005" name="n_reg_180">
<pin_list>
<pin id="181" dir="0" index="0" bw="32" slack="1"/>
<pin id="182" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="n "/>
</bind>
</comp>

<comp id="186" class="1005" name="weight_addr_reg_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="32" slack="1"/>
<pin id="188" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="weight_addr "/>
</bind>
</comp>

<comp id="192" class="1005" name="tmp_s_reg_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="1" slack="1"/>
<pin id="194" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_s "/>
</bind>
</comp>

<comp id="196" class="1005" name="c_1_reg_196">
<pin_list>
<pin id="197" dir="0" index="0" bw="31" slack="0"/>
<pin id="198" dir="1" index="1" bw="31" slack="0"/>
</pin_list>
<bind>
<opset="c_1 "/>
</bind>
</comp>

<comp id="201" class="1005" name="weight_addr_read_reg_201">
<pin_list>
<pin id="202" dir="0" index="0" bw="32" slack="1"/>
<pin id="203" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="weight_addr_read "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="62"><net_src comp="14" pin="0"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="12" pin="0"/><net_sink comp="58" pin=1"/></net>

<net id="68"><net_src comp="14" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="69"><net_src comp="10" pin="0"/><net_sink comp="64" pin=1"/></net>

<net id="74"><net_src comp="14" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="75"><net_src comp="8" pin="0"/><net_sink comp="70" pin=1"/></net>

<net id="80"><net_src comp="14" pin="0"/><net_sink comp="76" pin=0"/></net>

<net id="81"><net_src comp="4" pin="0"/><net_sink comp="76" pin=1"/></net>

<net id="86"><net_src comp="16" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="87"><net_src comp="2" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="93"><net_src comp="18" pin="0"/><net_sink comp="88" pin=0"/></net>

<net id="98"><net_src comp="40" pin="0"/><net_sink comp="94" pin=0"/></net>

<net id="104"><net_src comp="6" pin="0"/><net_sink comp="99" pin=0"/></net>

<net id="105"><net_src comp="54" pin="0"/><net_sink comp="99" pin=1"/></net>

<net id="111"><net_src comp="99" pin="3"/><net_sink comp="106" pin=0"/></net>

<net id="115"><net_src comp="36" pin="0"/><net_sink comp="112" pin=0"/></net>

<net id="122"><net_src comp="112" pin="1"/><net_sink comp="116" pin=0"/></net>

<net id="123"><net_src comp="116" pin="4"/><net_sink comp="112" pin=0"/></net>

<net id="128"><net_src comp="70" pin="2"/><net_sink comp="124" pin=0"/></net>

<net id="129"><net_src comp="58" pin="2"/><net_sink comp="124" pin=1"/></net>

<net id="134"><net_src comp="64" pin="2"/><net_sink comp="130" pin=0"/></net>

<net id="135"><net_src comp="124" pin="2"/><net_sink comp="130" pin=1"/></net>

<net id="139"><net_src comp="76" pin="2"/><net_sink comp="136" pin=0"/></net>

<net id="143"><net_src comp="82" pin="2"/><net_sink comp="140" pin=0"/></net>

<net id="148"><net_src comp="136" pin="1"/><net_sink comp="144" pin=0"/></net>

<net id="149"><net_src comp="140" pin="1"/><net_sink comp="144" pin=1"/></net>

<net id="153"><net_src comp="144" pin="2"/><net_sink comp="150" pin=0"/></net>

<net id="158"><net_src comp="0" pin="0"/><net_sink comp="154" pin=0"/></net>

<net id="159"><net_src comp="150" pin="1"/><net_sink comp="154" pin=1"/></net>

<net id="163"><net_src comp="116" pin="4"/><net_sink comp="160" pin=0"/></net>

<net id="168"><net_src comp="160" pin="1"/><net_sink comp="164" pin=0"/></net>

<net id="173"><net_src comp="116" pin="4"/><net_sink comp="169" pin=0"/></net>

<net id="174"><net_src comp="38" pin="0"/><net_sink comp="169" pin=1"/></net>

<net id="178"><net_src comp="112" pin="1"/><net_sink comp="175" pin=0"/></net>

<net id="179"><net_src comp="175" pin="1"/><net_sink comp="99" pin=2"/></net>

<net id="183"><net_src comp="130" pin="2"/><net_sink comp="180" pin=0"/></net>

<net id="184"><net_src comp="180" pin="1"/><net_sink comp="88" pin=2"/></net>

<net id="185"><net_src comp="180" pin="1"/><net_sink comp="164" pin=1"/></net>

<net id="189"><net_src comp="154" pin="2"/><net_sink comp="186" pin=0"/></net>

<net id="190"><net_src comp="186" pin="1"/><net_sink comp="88" pin=1"/></net>

<net id="191"><net_src comp="186" pin="1"/><net_sink comp="94" pin=1"/></net>

<net id="195"><net_src comp="164" pin="2"/><net_sink comp="192" pin=0"/></net>

<net id="199"><net_src comp="169" pin="2"/><net_sink comp="196" pin=0"/></net>

<net id="200"><net_src comp="196" pin="1"/><net_sink comp="116" pin=2"/></net>

<net id="204"><net_src comp="94" pin="2"/><net_sink comp="201" pin=0"/></net>

<net id="205"><net_src comp="201" pin="1"/><net_sink comp="106" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: weight | {}
	Port: weight_buffer | {11 }
 - Input state : 
	Port: load_weight : weight | {2 3 4 5 6 7 8 10 }
	Port: load_weight : weight_offset | {1 }
	Port: load_weight : weight_offset1 | {1 }
	Port: load_weight : chin | {1 }
	Port: load_weight : kx | {1 }
	Port: load_weight : ky | {1 }
  - Chain level:
	State 1
		n : 1
		sum2 : 1
		sum2_cast : 2
		weight_addr : 3
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
		c_cast : 1
		tmp_s : 2
		c_1 : 1
		StgValue_38 : 3
	State 10
	State 11
		weight_buffer_addr : 1
		StgValue_45 : 2
		empty : 1
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|--------------------------------|---------|---------|---------|
| Operation|         Functional Unit        |  DSP48E |    FF   |   LUT   |
|----------|--------------------------------|---------|---------|---------|
|    add   |           sum2_fu_144          |    0    |    0    |    39   |
|          |           c_1_fu_169           |    0    |    0    |    38   |
|----------|--------------------------------|---------|---------|---------|
|    mul   |           tmp1_fu_124          |    3    |    0    |    20   |
|          |            n_fu_130            |    3    |    0    |    20   |
|----------|--------------------------------|---------|---------|---------|
|   icmp   |          tmp_s_fu_164          |    0    |    0    |    18   |
|----------|--------------------------------|---------|---------|---------|
|          |       ky_read_read_fu_58       |    0    |    0    |    0    |
|          |       kx_read_read_fu_64       |    0    |    0    |    0    |
|   read   |      chin_read_read_fu_70      |    0    |    0    |    0    |
|          | weight_offset1_read_read_fu_76 |    0    |    0    |    0    |
|          |  weight_offset_read_read_fu_82 |    0    |    0    |    0    |
|          |   weight_addr_read_read_fu_94  |    0    |    0    |    0    |
|----------|--------------------------------|---------|---------|---------|
|  readreq |        grp_readreq_fu_88       |    0    |    0    |    0    |
|----------|--------------------------------|---------|---------|---------|
|   sext   |        tmp_3_cast_fu_136       |    0    |    0    |    0    |
|          |        sum2_cast_fu_150        |    0    |    0    |    0    |
|----------|--------------------------------|---------|---------|---------|
|          |        sext_cast_fu_140        |    0    |    0    |    0    |
|   zext   |          c_cast_fu_160         |    0    |    0    |    0    |
|          |          tmp_12_fu_175         |    0    |    0    |    0    |
|----------|--------------------------------|---------|---------|---------|
|   Total  |                                |    6    |    0    |   135   |
|----------|--------------------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+------------------------+--------+
|                        |   FF   |
+------------------------+--------+
|       c_1_reg_196      |   31   |
|        c_reg_112       |   31   |
|        n_reg_180       |   32   |
|      tmp_s_reg_192     |    1   |
|weight_addr_read_reg_201|   32   |
|   weight_addr_reg_186  |   32   |
+------------------------+--------+
|          Total         |   159  |
+------------------------+--------+

* Multiplexer (MUX) list: 
|-----------|------|------|------|--------||---------||---------|
|    Comp   |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------|------|------|------|--------||---------||---------|
| c_reg_112 |  p0  |   2  |  31  |   62   ||    9    |
|-----------|------|------|------|--------||---------||---------|
|   Total   |      |      |      |   62   ||  1.769  ||    9    |
|-----------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    6   |    -   |    0   |   135  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    1   |    -   |    9   |
|  Register |    -   |    -   |   159  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    6   |    1   |   159  |   144  |
+-----------+--------+--------+--------+--------+
