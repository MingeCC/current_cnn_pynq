// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="max_pool2,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=5645,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=40,HLS_SYN_FF=4134,HLS_SYN_LUT=4483,HLS_VERSION=2018_3}" *)

module max_pool2 (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_pp0_stage0 = 15'd128;
parameter    ap_ST_fsm_pp0_stage1 = 15'd256;
parameter    ap_ST_fsm_pp0_stage2 = 15'd512;
parameter    ap_ST_fsm_pp0_stage3 = 15'd1024;
parameter    ap_ST_fsm_pp0_stage4 = 15'd2048;
parameter    ap_ST_fsm_pp0_stage5 = 15'd4096;
parameter    ap_ST_fsm_pp0_stage6 = 15'd8192;
parameter    ap_ST_fsm_state53 = 15'd16384;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] h;
wire   [31:0] w;
wire   [31:0] ch_in;
wire   [31:0] in_r;
wire   [31:0] out_r;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_pp0_stage5;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage5;
reg   [0:0] exitcond_flatten1_reg_1344;
reg    gmem_blk_n_R;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond_flatten1_reg_1344_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] exitcond_flatten1_reg_1344_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] exitcond_flatten1_reg_1344_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage3;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp0_stage3;
reg   [0:0] exitcond_flatten1_reg_1344_pp0_iter4_reg;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] exitcond_flatten1_reg_1344_pp0_iter5_reg;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_enable_reg_pp0_iter6;
reg   [0:0] exitcond_flatten1_reg_1344_pp0_iter6_reg;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [95:0] indvar_flatten1_reg_238;
reg   [63:0] indvar_flatten_reg_250;
reg   [30:0] n_reg_261;
reg   [30:0] i_reg_272;
reg   [30:0] i_reg_272_pp0_iter1_reg;
wire    ap_block_state10_pp0_stage2_iter0;
wire    ap_block_state17_pp0_stage2_iter1;
wire    ap_block_state24_pp0_stage2_iter2;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_block_state24_io;
reg    ap_block_state31_pp0_stage2_iter3;
wire    ap_block_state38_pp0_stage2_iter4;
wire    ap_block_state45_pp0_stage2_iter5;
reg    ap_block_state52_pp0_stage2_iter6;
reg    ap_block_pp0_stage2_11001;
reg   [30:0] i_reg_272_pp0_iter2_reg;
reg   [30:0] i_reg_272_pp0_iter3_reg;
reg   [30:0] i_reg_272_pp0_iter4_reg;
reg   [30:0] j_reg_284;
reg   [31:0] ch_in_read_reg_1249;
reg  signed [31:0] w_read_reg_1256;
reg  signed [31:0] h_read_reg_1264;
reg   [29:0] tmp_2_reg_1270;
reg   [29:0] tmp_3_reg_1275;
reg   [0:0] tmp_15_reg_1280;
reg   [30:0] p_lshr_f6_reg_1285;
wire  signed [31:0] tmp_1_fu_386_p3;
reg  signed [31:0] tmp_1_reg_1290;
wire  signed [31:0] tmp_fu_422_p3;
reg  signed [31:0] tmp_reg_1296;
wire    ap_CS_fsm_state2;
wire   [63:0] bound_fu_435_p2;
reg   [63:0] bound_reg_1302;
wire    ap_CS_fsm_state3;
wire   [32:0] tmp_2_cast_fu_453_p1;
reg   [32:0] tmp_2_cast_reg_1318;
wire    ap_CS_fsm_state7;
wire   [32:0] tmp_3_cast_fu_456_p1;
reg   [32:0] tmp_3_cast_reg_1323;
wire   [95:0] grp_fu_447_p2;
reg   [95:0] bound4_reg_1334;
wire   [0:0] tmp_mid_fu_459_p2;
reg   [0:0] tmp_mid_reg_1339;
wire   [0:0] exitcond_flatten1_fu_473_p2;
wire    ap_block_state8_pp0_stage0_iter0;
wire    ap_block_state15_pp0_stage0_iter1;
reg    ap_block_state15_io;
reg    ap_block_state22_pp0_stage0_iter2;
wire    ap_block_state29_pp0_stage0_iter3;
wire    ap_block_state36_pp0_stage0_iter4;
wire    ap_block_state43_pp0_stage0_iter5;
wire    ap_block_state50_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond_flatten_fu_478_p2;
reg   [0:0] exitcond_flatten_reg_1348;
reg   [0:0] exitcond_flatten_reg_1348_pp0_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1348_pp0_iter2_reg;
reg   [0:0] exitcond_flatten_reg_1348_pp0_iter3_reg;
reg   [0:0] exitcond_flatten_reg_1348_pp0_iter4_reg;
reg   [0:0] exitcond_flatten_reg_1348_pp0_iter5_reg;
wire   [0:0] tmp_mid1_fu_491_p3;
reg   [0:0] tmp_mid1_reg_1359;
wire   [30:0] n_cast_mid2_fu_498_p3;
reg   [30:0] n_cast_mid2_reg_1367;
wire   [30:0] n_op_fu_506_p2;
reg   [30:0] n_op_reg_1372;
wire   [63:0] indvar_flatten_op_fu_512_p2;
reg   [63:0] indvar_flatten_op_reg_1377;
wire   [31:0] n_cast_mid2_cast_fu_518_p1;
reg   [31:0] n_cast_mid2_cast_reg_1382;
wire    ap_block_state9_pp0_stage1_iter0;
wire    ap_block_state16_pp0_stage1_iter1;
reg    ap_block_state16_io;
reg    ap_block_state23_pp0_stage1_iter2;
wire    ap_block_state30_pp0_stage1_iter3;
wire    ap_block_state37_pp0_stage1_iter4;
wire    ap_block_state44_pp0_stage1_iter5;
wire    ap_block_state51_pp0_stage1_iter6;
reg    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_24_fu_521_p2;
reg   [31:0] tmp_24_reg_1387;
wire   [30:0] i_s_fu_526_p2;
reg   [30:0] i_s_reg_1393;
reg   [30:0] i_s_reg_1393_pp0_iter1_reg;
reg   [30:0] i_s_reg_1393_pp0_iter2_reg;
reg   [30:0] i_s_reg_1393_pp0_iter3_reg;
wire   [30:0] tmp_28_fu_532_p3;
reg   [30:0] tmp_28_reg_1398;
wire  signed [31:0] tmp_25_fu_553_p2;
reg  signed [31:0] tmp_25_reg_1403;
wire  signed [31:0] tmp_18_fu_558_p2;
reg  signed [31:0] tmp_18_reg_1408;
wire   [30:0] j_mid_fu_563_p3;
reg   [30:0] j_mid_reg_1413;
wire    ap_block_state11_pp0_stage3_iter0;
wire    ap_block_state18_pp0_stage3_iter1;
wire    ap_block_state25_pp0_stage3_iter2;
wire    ap_block_state32_pp0_stage3_iter3;
wire    ap_block_state39_pp0_stage3_iter4;
reg    ap_block_state39_io;
reg    ap_block_state46_pp0_stage3_iter5;
reg    ap_sig_ioackin_gmem_AWREADY;
reg    ap_block_state46_io;
reg    ap_block_pp0_stage3_11001;
wire   [31:0] tmp_13_fu_570_p2;
reg   [31:0] tmp_13_reg_1419;
wire   [30:0] p_mid2_fu_607_p3;
reg   [30:0] p_mid2_reg_1425;
wire    ap_block_state12_pp0_stage4_iter0;
wire    ap_block_state19_pp0_stage4_iter1;
wire    ap_block_state26_pp0_stage4_iter2;
reg    ap_block_state26_io;
reg    ap_block_state33_pp0_stage4_iter3;
wire    ap_block_state40_pp0_stage4_iter4;
wire    ap_block_state47_pp0_stage4_iter5;
reg    ap_sig_ioackin_gmem_WREADY;
reg    ap_block_state47_io;
reg    ap_block_pp0_stage4_11001;
reg   [30:0] p_mid2_reg_1425_pp0_iter1_reg;
reg   [30:0] p_mid2_reg_1425_pp0_iter2_reg;
reg   [30:0] p_mid2_reg_1425_pp0_iter3_reg;
reg   [30:0] p_mid2_reg_1425_pp0_iter4_reg;
wire   [31:0] tmp_8_mid2_fu_621_p3;
reg   [31:0] tmp_8_mid2_reg_1431;
wire   [31:0] tmp_9_mid2_fu_634_p3;
reg   [31:0] tmp_9_mid2_reg_1436;
wire  signed [31:0] tmp_14_fu_641_p2;
reg  signed [31:0] tmp_14_reg_1442;
reg  signed [31:0] tmp_14_reg_1442_pp0_iter1_reg;
reg   [31:0] gmem_addr_reg_1447;
wire   [31:0] tmp_19_fu_665_p2;
reg   [31:0] tmp_19_reg_1453;
wire   [30:0] n_1_fu_675_p3;
reg   [30:0] n_1_reg_1459;
wire  signed [31:0] tmp_16_fu_682_p2;
reg  signed [31:0] tmp_16_reg_1464;
wire    ap_block_state13_pp0_stage5_iter0;
reg    ap_block_state13_io;
reg    ap_block_state20_pp0_stage5_iter1;
wire    ap_block_state27_pp0_stage5_iter2;
wire    ap_block_state34_pp0_stage5_iter3;
wire    ap_block_state41_pp0_stage5_iter4;
wire    ap_block_state48_pp0_stage5_iter5;
reg    ap_block_pp0_stage5_11001;
reg  signed [31:0] tmp_16_reg_1464_pp0_iter1_reg;
reg   [31:0] gmem_addr_1_reg_1469;
wire  signed [31:0] tmp_20_fu_705_p2;
reg  signed [31:0] tmp_20_reg_1475;
reg  signed [31:0] tmp_20_reg_1475_pp0_iter1_reg;
wire  signed [31:0] tmp_22_fu_709_p2;
reg  signed [31:0] tmp_22_reg_1481;
reg  signed [31:0] tmp_22_reg_1481_pp0_iter1_reg;
wire  signed [31:0] tmp1_fu_713_p2;
reg  signed [31:0] tmp1_reg_1487;
wire   [95:0] indvar_flatten_next1_fu_717_p2;
reg   [95:0] indvar_flatten_next1_reg_1492;
wire    ap_block_state14_pp0_stage6_iter0;
reg    ap_block_state14_io;
reg    ap_block_state21_pp0_stage6_iter1;
wire    ap_block_state28_pp0_stage6_iter2;
wire    ap_block_state35_pp0_stage6_iter3;
wire    ap_block_state42_pp0_stage6_iter4;
wire    ap_block_state49_pp0_stage6_iter5;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] gmem_addr_2_reg_1497;
wire   [31:0] tmp_29_fu_741_p2;
reg   [31:0] tmp_29_reg_1503;
reg   [31:0] tmp_29_reg_1503_pp0_iter1_reg;
reg   [31:0] tmp_29_reg_1503_pp0_iter2_reg;
reg   [31:0] tmp_29_reg_1503_pp0_iter3_reg;
reg   [31:0] tmp_29_reg_1503_pp0_iter4_reg;
wire   [63:0] indvar_flatten_next_fu_745_p3;
reg   [63:0] indvar_flatten_next_reg_1508;
reg   [31:0] gmem_addr_3_reg_1513;
reg   [31:0] gmem_addr_read_reg_1519;
reg   [31:0] gmem_addr_1_read_reg_1525;
reg   [31:0] gmem_addr_2_read_reg_1531;
wire  signed [31:0] max1_fu_851_p3;
reg  signed [31:0] max1_reg_1537;
reg  signed [31:0] max1_reg_1537_pp0_iter3_reg;
reg   [31:0] gmem_addr_3_read_reg_1543;
reg   [31:0] gmem_addr_4_reg_1549;
wire  signed [31:0] max2_fu_957_p3;
reg  signed [31:0] max2_reg_1555;
reg  signed [31:0] max2_reg_1555_pp0_iter3_reg;
reg   [31:0] gmem_addr_5_reg_1561;
reg   [31:0] gmem_addr_4_read_reg_1567;
reg   [31:0] gmem_addr_5_read_reg_1573;
wire   [0:0] tmp_56_fu_1057_p2;
reg   [0:0] tmp_56_reg_1579;
reg   [31:0] gmem_addr_6_reg_1584;
wire   [31:0] tmp_5_mid1_fu_1090_p2;
reg   [31:0] tmp_5_mid1_reg_1590;
wire   [31:0] tmp_5_fu_1099_p2;
reg   [31:0] tmp_5_reg_1597;
reg   [0:0] tmp_21_reg_1602;
reg   [30:0] p_lshr_f1_reg_1607;
wire   [31:0] tmp_6_mid2_fu_1210_p3;
reg   [31:0] tmp_6_mid2_reg_1612;
reg   [31:0] gmem_addr_7_reg_1617;
reg   [31:0] gmem_addr_6_read_reg_1623;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter5_state44;
reg   [95:0] ap_phi_mux_indvar_flatten1_phi_fu_242_p4;
reg   [63:0] ap_phi_mux_indvar_flatten_phi_fu_254_p4;
reg   [30:0] ap_phi_mux_n_phi_fu_265_p4;
reg   [30:0] ap_phi_mux_i_phi_fu_276_p4;
reg   [30:0] ap_phi_mux_j_phi_fu_288_p4;
wire  signed [63:0] in2_sum_cast_fu_655_p1;
wire  signed [63:0] in2_sum5_cast_fu_695_p1;
wire  signed [63:0] in2_sum6_cast_fu_731_p1;
wire  signed [63:0] in2_sum7_cast_fu_759_p1;
wire  signed [63:0] in2_sum8_cast_fu_865_p1;
wire  signed [63:0] in2_sum9_cast_fu_971_p1;
wire  signed [63:0] in2_sum1_cast_fu_1077_p1;
wire  signed [63:0] out4_sum_cast_fu_1239_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg   [31:0] grp_fu_296_p0;
reg   [31:0] grp_fu_296_p1;
wire  signed [31:0] tmp_15_fu_320_p1;
wire  signed [31:0] p_lshr_f6_fu_328_p1;
wire  signed [31:0] tmp_17_fu_338_p1;
wire  signed [31:0] p_neg_fu_346_p1;
wire   [31:0] p_neg_fu_346_p2;
wire   [30:0] p_lshr_fu_352_p4;
wire   [31:0] tmp_10_fu_362_p1;
wire  signed [31:0] p_lshr_f_fu_372_p1;
wire   [30:0] p_lshr_f_fu_372_p4;
wire   [0:0] tmp_17_fu_338_p3;
wire   [31:0] p_neg_t_fu_366_p2;
wire   [31:0] tmp_11_fu_382_p1;
wire   [31:0] p_neg3_fu_394_p2;
wire   [30:0] p_lshr4_fu_399_p4;
wire   [31:0] tmp_4_fu_409_p1;
wire   [31:0] p_neg_t5_fu_413_p2;
wire   [31:0] tmp_7_fu_419_p1;
wire   [31:0] bound_fu_435_p0;
wire   [31:0] bound_fu_435_p1;
wire   [63:0] grp_fu_447_p0;
wire   [31:0] grp_fu_447_p1;
wire   [31:0] n_cast_fu_464_p1;
wire   [0:0] tmp_s_fu_468_p2;
wire   [30:0] n_cast_mid_fu_483_p3;
wire   [30:0] tmp_24_fu_521_p0;
wire   [31:0] tmp_3_mid2_fu_539_p3;
wire   [31:0] tmp_4_mid2_fu_547_p2;
wire   [31:0] tmp_8_fu_574_p3;
wire   [31:0] tmp_9_fu_582_p2;
wire   [30:0] j_1_fu_602_p2;
wire   [31:0] tmp_8_mid_fu_588_p3;
wire   [31:0] tmp_8_mid1_fu_613_p3;
wire   [31:0] tmp_9_mid_fu_595_p3;
wire   [31:0] tmp_9_mid1_fu_628_p2;
wire  signed [32:0] tmp_15_cast_fu_646_p1;
wire   [32:0] in2_sum_fu_650_p2;
wire   [30:0] n_mid29_op_fu_669_p3;
wire  signed [32:0] tmp_17_cast_fu_686_p1;
wire   [32:0] in2_sum5_fu_690_p2;
wire   [30:0] tmp1_fu_713_p0;
wire  signed [32:0] tmp_21_cast_fu_723_p1;
wire   [32:0] in2_sum6_fu_726_p2;
wire  signed [32:0] tmp_23_cast_fu_751_p1;
wire   [32:0] in2_sum7_fu_754_p2;
wire   [31:0] in_load_to_int_fu_769_p1;
wire   [31:0] in_load_1_to_int_fu_786_p1;
wire   [7:0] tmp_26_fu_772_p4;
wire   [22:0] tmp_42_fu_782_p1;
wire   [0:0] notrhs_fu_809_p2;
wire   [0:0] notlhs_fu_803_p2;
wire   [7:0] tmp_30_fu_789_p4;
wire   [22:0] tmp_49_fu_799_p1;
wire   [0:0] notrhs4_fu_827_p2;
wire   [0:0] notlhs3_fu_821_p2;
wire   [0:0] tmp_34_fu_815_p2;
wire   [0:0] tmp_35_fu_833_p2;
wire   [0:0] tmp_36_fu_839_p2;
wire   [0:0] grp_fu_296_p2;
wire   [0:0] tmp_38_fu_845_p2;
wire  signed [32:0] max1_cast_cast_fu_857_p1;
wire   [32:0] in2_sum8_fu_860_p2;
wire   [31:0] in_load_2_to_int_fu_875_p1;
wire   [31:0] in_load_3_to_int_fu_892_p1;
wire   [7:0] tmp_39_fu_878_p4;
wire   [22:0] tmp_51_fu_888_p1;
wire   [0:0] notrhs6_fu_915_p2;
wire   [0:0] notlhs5_fu_909_p2;
wire   [7:0] tmp_41_fu_895_p4;
wire   [22:0] tmp_57_fu_905_p1;
wire   [0:0] notrhs8_fu_933_p2;
wire   [0:0] notlhs7_fu_927_p2;
wire   [0:0] tmp_43_fu_921_p2;
wire   [0:0] tmp_44_fu_939_p2;
wire   [0:0] tmp_45_fu_945_p2;
wire   [0:0] tmp_47_fu_951_p2;
wire  signed [32:0] max2_cast_cast_fu_963_p1;
wire   [32:0] in2_sum9_fu_966_p2;
wire   [31:0] in_load_4_to_int_fu_981_p1;
wire   [31:0] in_load_5_to_int_fu_998_p1;
wire   [7:0] tmp_48_fu_984_p4;
wire   [22:0] tmp_58_fu_994_p1;
wire   [0:0] notrhs1_fu_1021_p2;
wire   [0:0] notlhs9_fu_1015_p2;
wire   [7:0] tmp_50_fu_1001_p4;
wire   [22:0] tmp_59_fu_1011_p1;
wire   [0:0] notrhs2_fu_1039_p2;
wire   [0:0] notlhs1_fu_1033_p2;
wire   [0:0] tmp_52_fu_1027_p2;
wire   [0:0] tmp_53_fu_1045_p2;
wire   [0:0] tmp_54_fu_1051_p2;
wire   [31:0] tmp_60_fu_1063_p3;
wire  signed [32:0] tmp_27_cast_cast_fu_1068_p1;
wire   [32:0] in2_sum1_fu_1072_p2;
wire   [30:0] tmp_5_mid1_fu_1090_p0;
wire   [30:0] tmp_5_fu_1099_p1;
wire   [31:0] p_neg9_fu_1122_p2;
wire   [30:0] p_lshr1_fu_1127_p4;
wire   [31:0] tmp_23_fu_1137_p1;
wire   [31:0] p_neg_t1_fu_1141_p2;
wire   [31:0] tmp_27_fu_1147_p1;
wire   [31:0] p_neg9_mid1_fu_1164_p2;
wire   [30:0] p_lshr1_mid1_fu_1169_p4;
wire   [31:0] tmp_33_fu_1179_p1;
wire   [30:0] p_lshr_f1_mid1_fu_1189_p4;
wire   [0:0] tmp_32_fu_1157_p3;
wire   [31:0] p_neg_t1_mid1_fu_1183_p2;
wire   [31:0] tmp_40_fu_1198_p1;
wire   [31:0] tmp_6_mid1_fu_1202_p3;
wire   [31:0] tmp_6_fu_1150_p3;
wire   [31:0] p_mid2_cast_fu_1217_p1;
wire   [31:0] tmp2_fu_1220_p2;
wire   [31:0] tmp_31_fu_1224_p2;
wire  signed [32:0] tmp_32_cast_fu_1230_p1;
wire   [32:0] out4_sum_fu_1234_p2;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage5_00001;
wire    ap_CS_fsm_state53;
reg   [14:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [63:0] bound_fu_435_p00;
wire   [63:0] bound_fu_435_p10;
wire   [95:0] grp_fu_447_p00;
wire   [95:0] grp_fu_447_p10;
wire   [31:0] tmp_24_fu_521_p00;
wire   [31:0] tmp_5_fu_1099_p10;
wire   [31:0] tmp_5_mid1_fu_1090_p00;
reg    ap_condition_1646;
reg    ap_condition_1650;
reg    ap_condition_799;
reg    ap_condition_813;
reg    ap_condition_823;
reg    ap_condition_833;
reg    ap_condition_857;
reg    ap_condition_869;
reg    ap_condition_888;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

max_pool2_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
max_pool2_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .h(h),
    .w(w),
    .ch_in(ch_in),
    .in_r(in_r),
    .out_r(out_r)
);

max_pool2_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
max_pool2_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(gmem_addr_7_reg_1617),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(gmem_addr_6_read_reg_1623),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

max_pool2_fcmp_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
max_pool2_fcmp_32bkb_U1(
    .din0(grp_fu_296_p0),
    .din1(grp_fu_296_p1),
    .opcode(5'd2),
    .dout(grp_fu_296_p2)
);

max_pool2_mul_64ncud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 96 ))
max_pool2_mul_64ncud_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_447_p0),
    .din1(grp_fu_447_p1),
    .ce(1'b1),
    .dout(grp_fu_447_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter5_state44) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter5_state44) & (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter4;
        end else if ((((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (gmem_ARREADY == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_01001) & (gmem_ARREADY == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (gmem_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_1646)) begin
            if ((1'b0 == ap_block_pp0_stage3_11001)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if (((1'b0 == ap_block_pp0_stage3_01001) & (gmem_AWREADY == 1'b1))) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_1650)) begin
            if ((1'b0 == ap_block_pp0_stage4_11001)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if (((1'b0 == ap_block_pp0_stage4_01001) & (gmem_WREADY == 1'b1))) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        i_reg_272 <= tmp_28_reg_1398;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_reg_272 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        indvar_flatten1_reg_238 <= indvar_flatten_next1_reg_1492;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten1_reg_238 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        indvar_flatten_reg_250 <= indvar_flatten_next_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        indvar_flatten_reg_250 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        j_reg_284 <= p_mid2_reg_1425;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_284 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        n_reg_261 <= n_1_reg_1459;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        n_reg_261 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        bound4_reg_1334 <= grp_fu_447_p2;
        tmp_2_cast_reg_1318[29 : 0] <= tmp_2_cast_fu_453_p1[29 : 0];
        tmp_3_cast_reg_1323[29 : 0] <= tmp_3_cast_fu_456_p1[29 : 0];
        tmp_mid_reg_1339 <= tmp_mid_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_1302 <= bound_fu_435_p2;
        tmp_reg_1296 <= tmp_fu_422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ch_in_read_reg_1249 <= ch_in;
        h_read_reg_1264 <= h;
        p_lshr_f6_reg_1285 <= {{p_lshr_f6_fu_328_p1[31:1]}};
        tmp_15_reg_1280 <= tmp_15_fu_320_p1[32'd31];
        tmp_1_reg_1290 <= tmp_1_fu_386_p3;
        tmp_2_reg_1270 <= {{out_r[31:2]}};
        tmp_3_reg_1275 <= {{in_r[31:2]}};
        w_read_reg_1256 <= w;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten1_reg_1344 <= exitcond_flatten1_fu_473_p2;
        exitcond_flatten1_reg_1344_pp0_iter1_reg <= exitcond_flatten1_reg_1344;
        exitcond_flatten1_reg_1344_pp0_iter2_reg <= exitcond_flatten1_reg_1344_pp0_iter1_reg;
        exitcond_flatten1_reg_1344_pp0_iter3_reg <= exitcond_flatten1_reg_1344_pp0_iter2_reg;
        exitcond_flatten1_reg_1344_pp0_iter4_reg <= exitcond_flatten1_reg_1344_pp0_iter3_reg;
        exitcond_flatten1_reg_1344_pp0_iter5_reg <= exitcond_flatten1_reg_1344_pp0_iter4_reg;
        exitcond_flatten1_reg_1344_pp0_iter6_reg <= exitcond_flatten1_reg_1344_pp0_iter5_reg;
        exitcond_flatten_reg_1348_pp0_iter1_reg <= exitcond_flatten_reg_1348;
        exitcond_flatten_reg_1348_pp0_iter2_reg <= exitcond_flatten_reg_1348_pp0_iter1_reg;
        exitcond_flatten_reg_1348_pp0_iter3_reg <= exitcond_flatten_reg_1348_pp0_iter2_reg;
        exitcond_flatten_reg_1348_pp0_iter4_reg <= exitcond_flatten_reg_1348_pp0_iter3_reg;
        exitcond_flatten_reg_1348_pp0_iter5_reg <= exitcond_flatten_reg_1348_pp0_iter4_reg;
        max1_reg_1537_pp0_iter3_reg <= max1_reg_1537;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_fu_473_p2 == 1'd0))) begin
        exitcond_flatten_reg_1348 <= exitcond_flatten_fu_478_p2;
        indvar_flatten_op_reg_1377 <= indvar_flatten_op_fu_512_p2;
        n_cast_mid2_reg_1367 <= n_cast_mid2_fu_498_p3;
        n_op_reg_1372 <= n_op_fu_506_p2;
        tmp_mid1_reg_1359 <= tmp_mid1_fu_491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_1_read_reg_1525 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        gmem_addr_1_reg_1469 <= in2_sum5_cast_fu_695_p1;
        tmp1_reg_1487 <= tmp1_fu_713_p2;
        tmp_16_reg_1464 <= tmp_16_fu_682_p2;
        tmp_20_reg_1475 <= tmp_20_fu_705_p2;
        tmp_22_reg_1481 <= tmp_22_fu_709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_2_read_reg_1531 <= gmem_RDATA;
        max1_reg_1537 <= max1_fu_851_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        gmem_addr_2_reg_1497 <= in2_sum6_cast_fu_731_p1;
        tmp_29_reg_1503 <= tmp_29_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0))) begin
        gmem_addr_3_read_reg_1543 <= gmem_RDATA;
        gmem_addr_4_reg_1549 <= in2_sum8_cast_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        gmem_addr_3_reg_1513 <= in2_sum7_cast_fu_759_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0))) begin
        gmem_addr_4_read_reg_1567 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0))) begin
        gmem_addr_5_read_reg_1573 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0))) begin
        gmem_addr_5_reg_1561 <= in2_sum9_cast_fu_971_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        gmem_addr_6_read_reg_1623 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0))) begin
        gmem_addr_6_reg_1584 <= in2_sum1_cast_fu_1077_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        gmem_addr_7_reg_1617 <= out4_sum_cast_fu_1239_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        gmem_addr_read_reg_1519 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        gmem_addr_reg_1447 <= in2_sum_cast_fu_655_p1;
        tmp_14_reg_1442 <= tmp_14_fu_641_p2;
        tmp_19_reg_1453 <= tmp_19_fu_665_p2;
        tmp_8_mid2_reg_1431[31 : 1] <= tmp_8_mid2_fu_621_p3[31 : 1];
        tmp_9_mid2_reg_1436[31 : 1] <= tmp_9_mid2_fu_634_p3[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        i_reg_272_pp0_iter1_reg <= i_reg_272;
        i_reg_272_pp0_iter2_reg <= i_reg_272_pp0_iter1_reg;
        i_reg_272_pp0_iter3_reg <= i_reg_272_pp0_iter2_reg;
        i_reg_272_pp0_iter4_reg <= i_reg_272_pp0_iter3_reg;
        i_s_reg_1393_pp0_iter1_reg <= i_s_reg_1393;
        i_s_reg_1393_pp0_iter2_reg <= i_s_reg_1393_pp0_iter1_reg;
        i_s_reg_1393_pp0_iter3_reg <= i_s_reg_1393_pp0_iter2_reg;
        max2_reg_1555_pp0_iter3_reg <= max2_reg_1555;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        i_s_reg_1393 <= i_s_fu_526_p2;
        tmp_18_reg_1408 <= tmp_18_fu_558_p2;
        tmp_25_reg_1403 <= tmp_25_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        indvar_flatten_next1_reg_1492 <= indvar_flatten_next1_fu_717_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        indvar_flatten_next_reg_1508 <= indvar_flatten_next_fu_745_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        j_mid_reg_1413 <= j_mid_fu_563_p3;
        tmp_13_reg_1419 <= tmp_13_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0))) begin
        max2_reg_1555 <= max2_fu_957_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        n_1_reg_1459 <= n_1_fu_675_p3;
        p_mid2_reg_1425 <= p_mid2_fu_607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        n_cast_mid2_cast_reg_1382[30 : 0] <= n_cast_mid2_cast_fu_518_p1[30 : 0];
        tmp_24_reg_1387 <= tmp_24_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten_reg_1348_pp0_iter4_reg == 1'd0))) begin
        p_lshr_f1_reg_1607 <= {{tmp_5_fu_1099_p2[31:1]}};
        tmp_21_reg_1602 <= tmp_5_fu_1099_p2[32'd31];
        tmp_5_reg_1597 <= tmp_5_fu_1099_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        p_mid2_reg_1425_pp0_iter1_reg <= p_mid2_reg_1425;
        p_mid2_reg_1425_pp0_iter2_reg <= p_mid2_reg_1425_pp0_iter1_reg;
        p_mid2_reg_1425_pp0_iter3_reg <= p_mid2_reg_1425_pp0_iter2_reg;
        p_mid2_reg_1425_pp0_iter4_reg <= p_mid2_reg_1425_pp0_iter3_reg;
        tmp_14_reg_1442_pp0_iter1_reg <= tmp_14_reg_1442;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_16_reg_1464_pp0_iter1_reg <= tmp_16_reg_1464;
        tmp_20_reg_1475_pp0_iter1_reg <= tmp_20_reg_1475;
        tmp_22_reg_1481_pp0_iter1_reg <= tmp_22_reg_1481;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        tmp_28_reg_1398 <= tmp_28_fu_532_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_29_reg_1503_pp0_iter1_reg <= tmp_29_reg_1503;
        tmp_29_reg_1503_pp0_iter2_reg <= tmp_29_reg_1503_pp0_iter1_reg;
        tmp_29_reg_1503_pp0_iter3_reg <= tmp_29_reg_1503_pp0_iter2_reg;
        tmp_29_reg_1503_pp0_iter4_reg <= tmp_29_reg_1503_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0))) begin
        tmp_56_reg_1579 <= tmp_56_fu_1057_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_reg_1348_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0))) begin
        tmp_5_mid1_reg_1590 <= tmp_5_mid1_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        tmp_6_mid2_reg_1612 <= tmp_6_mid2_fu_1210_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_condition_pp0_exit_iter5_state44 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter5_state44 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_i_phi_fu_276_p4 = tmp_28_reg_1398;
    end else begin
        ap_phi_mux_i_phi_fu_276_p4 = i_reg_272;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_242_p4 = indvar_flatten_next1_reg_1492;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_242_p4 = indvar_flatten1_reg_238;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_254_p4 = indvar_flatten_next_reg_1508;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_254_p4 = indvar_flatten_reg_250;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_j_phi_fu_288_p4 = p_mid2_reg_1425;
    end else begin
        ap_phi_mux_j_phi_fu_288_p4 = j_reg_284;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1344 == 1'd0))) begin
        ap_phi_mux_n_phi_fu_265_p4 = n_1_reg_1459;
    end else begin
        ap_phi_mux_n_phi_fu_265_p4 = n_reg_261;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_AWREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_WREADY == 1'b0)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_gmem_ARREADY == 1'b0)) begin
        if ((1'b1 == ap_condition_888)) begin
            gmem_ARADDR = gmem_addr_6_reg_1584;
        end else if ((1'b1 == ap_condition_869)) begin
            gmem_ARADDR = gmem_addr_5_reg_1561;
        end else if ((1'b1 == ap_condition_857)) begin
            gmem_ARADDR = gmem_addr_4_reg_1549;
        end else if ((1'b1 == ap_condition_833)) begin
            gmem_ARADDR = gmem_addr_3_reg_1513;
        end else if ((1'b1 == ap_condition_823)) begin
            gmem_ARADDR = gmem_addr_2_reg_1497;
        end else if ((1'b1 == ap_condition_813)) begin
            gmem_ARADDR = gmem_addr_1_reg_1469;
        end else if ((1'b1 == ap_condition_799)) begin
            gmem_ARADDR = gmem_addr_reg_1447;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_01001) & (ap_reg_ioackin_gmem_ARREADY == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_01001) & (ap_reg_ioackin_gmem_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_01001) & (ap_reg_ioackin_gmem_WREADY == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344 == 1'd0) & (1'b0 == ap_block_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1344 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage6) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_296_p0 = gmem_addr_4_read_reg_1567;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_296_p0 = gmem_addr_2_read_reg_1531;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_296_p0 = gmem_addr_read_reg_1519;
    end else begin
        grp_fu_296_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_296_p1 = gmem_addr_5_read_reg_1573;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_296_p1 = gmem_addr_3_read_reg_1543;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_296_p1 = gmem_addr_1_read_reg_1525;
    end else begin
        grp_fu_296_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter5_state44) & (1'b1 == ap_CS_fsm_pp0_stage2)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_condition_pp0_exit_iter5_state44) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state15_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0)) | ((1'b1 == ap_block_state16_io) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_block_state24_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((1'b1 == ap_block_state46_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0)))) | ((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = (((ap_enable_reg_pp0_iter5 == 1'b1) & ((1'b1 == ap_block_state46_io) | ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0)))) | ((1'b1 == ap_block_state39_io) & (ap_enable_reg_pp0_iter4 == 1'b1)));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((1'b1 == ap_block_state47_io) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((1'b1 == ap_block_state47_io) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_block_state26_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_00001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0)) | ((1'b1 == ap_block_state14_io) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_state10_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344 == 1'd0));
end

assign ap_block_state13_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344 == 1'd0));
end

assign ap_block_state14_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344 == 1'd0));
end

assign ap_block_state15_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

assign ap_block_state16_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage5_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state21_pp0_stage6_iter1 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state22_pp0_stage0_iter2 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_block_state23_pp0_stage1_iter2 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_block_state24_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0));
end

assign ap_block_state24_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state26_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0));
end

assign ap_block_state26_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_pp0_stage2_iter3 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0));
end

assign ap_block_state32_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state33_pp0_stage4_iter3 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter3_reg == 1'd0));
end

assign ap_block_state34_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state39_io = ((ap_sig_ioackin_gmem_ARREADY == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0));
end

assign ap_block_state39_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state46_io = ((ap_sig_ioackin_gmem_AWREADY == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_state46_pp0_stage3_iter5 = ((gmem_RVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_block_state47_io = ((ap_sig_ioackin_gmem_WREADY == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0));
end

assign ap_block_state47_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state52_pp0_stage2_iter6 = ((gmem_BVALID == 1'b0) & (exitcond_flatten1_reg_1344_pp0_iter6_reg == 1'd0));
end

assign ap_block_state8_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1646 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_condition_1650 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (exitcond_flatten1_reg_1344_pp0_iter5_reg == 1'd0));
end

always @ (*) begin
    ap_condition_799 = ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (exitcond_flatten1_reg_1344 == 1'd0));
end

always @ (*) begin
    ap_condition_813 = ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (exitcond_flatten1_reg_1344 == 1'd0));
end

always @ (*) begin
    ap_condition_823 = ((1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344 == 1'd0));
end

always @ (*) begin
    ap_condition_833 = ((1'b0 == ap_block_pp0_stage1_01001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_condition_857 = ((1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_869 = ((1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond_flatten1_reg_1344_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_condition_888 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (exitcond_flatten1_reg_1344_pp0_iter4_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bound_fu_435_p0 = bound_fu_435_p00;

assign bound_fu_435_p00 = ch_in_read_reg_1249;

assign bound_fu_435_p1 = bound_fu_435_p10;

assign bound_fu_435_p10 = $unsigned(tmp_1_reg_1290);

assign bound_fu_435_p2 = (bound_fu_435_p0 * bound_fu_435_p1);

assign exitcond_flatten1_fu_473_p2 = ((ap_phi_mux_indvar_flatten1_phi_fu_242_p4 == bound4_reg_1334) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_478_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_254_p4 == bound_reg_1302) ? 1'b1 : 1'b0);

assign grp_fu_447_p0 = grp_fu_447_p00;

assign grp_fu_447_p00 = bound_reg_1302;

assign grp_fu_447_p1 = grp_fu_447_p10;

assign grp_fu_447_p10 = $unsigned(tmp_reg_1296);

assign i_s_fu_526_p2 = (31'd1 + ap_phi_mux_i_phi_fu_276_p4);

assign in2_sum1_cast_fu_1077_p1 = $signed(in2_sum1_fu_1072_p2);

assign in2_sum1_fu_1072_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(tmp_27_cast_cast_fu_1068_p1));

assign in2_sum5_cast_fu_695_p1 = $signed(in2_sum5_fu_690_p2);

assign in2_sum5_fu_690_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(tmp_17_cast_fu_686_p1));

assign in2_sum6_cast_fu_731_p1 = $signed(in2_sum6_fu_726_p2);

assign in2_sum6_fu_726_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(tmp_21_cast_fu_723_p1));

assign in2_sum7_cast_fu_759_p1 = $signed(in2_sum7_fu_754_p2);

assign in2_sum7_fu_754_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(tmp_23_cast_fu_751_p1));

assign in2_sum8_cast_fu_865_p1 = $signed(in2_sum8_fu_860_p2);

assign in2_sum8_fu_860_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(max1_cast_cast_fu_857_p1));

assign in2_sum9_cast_fu_971_p1 = $signed(in2_sum9_fu_966_p2);

assign in2_sum9_fu_966_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(max2_cast_cast_fu_963_p1));

assign in2_sum_cast_fu_655_p1 = $signed(in2_sum_fu_650_p2);

assign in2_sum_fu_650_p2 = ($signed(tmp_3_cast_reg_1323) + $signed(tmp_15_cast_fu_646_p1));

assign in_load_1_to_int_fu_786_p1 = gmem_addr_1_read_reg_1525;

assign in_load_2_to_int_fu_875_p1 = gmem_addr_2_read_reg_1531;

assign in_load_3_to_int_fu_892_p1 = gmem_addr_3_read_reg_1543;

assign in_load_4_to_int_fu_981_p1 = gmem_addr_4_read_reg_1567;

assign in_load_5_to_int_fu_998_p1 = gmem_addr_5_read_reg_1573;

assign in_load_to_int_fu_769_p1 = gmem_addr_read_reg_1519;

assign indvar_flatten_next1_fu_717_p2 = (indvar_flatten1_reg_238 + 96'd1);

assign indvar_flatten_next_fu_745_p3 = ((exitcond_flatten_reg_1348[0:0] === 1'b1) ? 64'd1 : indvar_flatten_op_reg_1377);

assign indvar_flatten_op_fu_512_p2 = (64'd1 + ap_phi_mux_indvar_flatten_phi_fu_254_p4);

assign j_1_fu_602_p2 = (31'd1 + j_mid_reg_1413);

assign j_mid_fu_563_p3 = ((exitcond_flatten_reg_1348[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_j_phi_fu_288_p4);

assign max1_cast_cast_fu_857_p1 = max1_reg_1537;

assign max1_fu_851_p3 = ((tmp_38_fu_845_p2[0:0] === 1'b1) ? tmp_14_reg_1442_pp0_iter1_reg : tmp_16_reg_1464_pp0_iter1_reg);

assign max2_cast_cast_fu_963_p1 = max2_reg_1555;

assign max2_fu_957_p3 = ((tmp_47_fu_951_p2[0:0] === 1'b1) ? tmp_20_reg_1475_pp0_iter1_reg : tmp_22_reg_1481_pp0_iter1_reg);

assign n_1_fu_675_p3 = ((tmp_mid1_reg_1359[0:0] === 1'b1) ? n_mid29_op_fu_669_p3 : 31'd1);

assign n_cast_fu_464_p1 = ap_phi_mux_n_phi_fu_265_p4;

assign n_cast_mid2_cast_fu_518_p1 = n_cast_mid2_reg_1367;

assign n_cast_mid2_fu_498_p3 = ((tmp_mid1_fu_491_p3[0:0] === 1'b1) ? n_cast_mid_fu_483_p3 : 31'd0);

assign n_cast_mid_fu_483_p3 = ((exitcond_flatten_fu_478_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_n_phi_fu_265_p4);

assign n_mid29_op_fu_669_p3 = ((exitcond_flatten_reg_1348[0:0] === 1'b1) ? 31'd1 : n_op_reg_1372);

assign n_op_fu_506_p2 = (31'd1 + ap_phi_mux_n_phi_fu_265_p4);

assign notlhs1_fu_1033_p2 = ((tmp_50_fu_1001_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs3_fu_821_p2 = ((tmp_30_fu_789_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs5_fu_909_p2 = ((tmp_39_fu_878_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs7_fu_927_p2 = ((tmp_41_fu_895_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs9_fu_1015_p2 = ((tmp_48_fu_984_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notlhs_fu_803_p2 = ((tmp_26_fu_772_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs1_fu_1021_p2 = ((tmp_58_fu_994_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs2_fu_1039_p2 = ((tmp_59_fu_1011_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs4_fu_827_p2 = ((tmp_49_fu_799_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs6_fu_915_p2 = ((tmp_51_fu_888_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs8_fu_933_p2 = ((tmp_57_fu_905_p1 == 23'd0) ? 1'b1 : 1'b0);

assign notrhs_fu_809_p2 = ((tmp_42_fu_782_p1 == 23'd0) ? 1'b1 : 1'b0);

assign out4_sum_cast_fu_1239_p1 = $signed(out4_sum_fu_1234_p2);

assign out4_sum_fu_1234_p2 = ($signed(tmp_2_cast_reg_1318) + $signed(tmp_32_cast_fu_1230_p1));

assign p_lshr1_fu_1127_p4 = {{p_neg9_fu_1122_p2[31:1]}};

assign p_lshr1_mid1_fu_1169_p4 = {{p_neg9_mid1_fu_1164_p2[31:1]}};

assign p_lshr4_fu_399_p4 = {{p_neg3_fu_394_p2[31:1]}};

assign p_lshr_f1_mid1_fu_1189_p4 = {{tmp_5_mid1_reg_1590[31:1]}};

assign p_lshr_f6_fu_328_p1 = h;

assign p_lshr_f_fu_372_p1 = w;

assign p_lshr_f_fu_372_p4 = {{p_lshr_f_fu_372_p1[31:1]}};

assign p_lshr_fu_352_p4 = {{p_neg_fu_346_p2[31:1]}};

assign p_mid2_cast_fu_1217_p1 = p_mid2_reg_1425_pp0_iter4_reg;

assign p_mid2_fu_607_p3 = ((tmp_mid1_reg_1359[0:0] === 1'b1) ? j_mid_reg_1413 : j_1_fu_602_p2);

assign p_neg3_fu_394_p2 = ($signed(32'd0) - $signed(h_read_reg_1264));

assign p_neg9_fu_1122_p2 = (32'd0 - tmp_5_reg_1597);

assign p_neg9_mid1_fu_1164_p2 = (32'd0 - tmp_5_mid1_reg_1590);

assign p_neg_fu_346_p1 = w;

assign p_neg_fu_346_p2 = ($signed(32'd0) - $signed(p_neg_fu_346_p1));

assign p_neg_t1_fu_1141_p2 = (32'd0 - tmp_23_fu_1137_p1);

assign p_neg_t1_mid1_fu_1183_p2 = (32'd0 - tmp_33_fu_1179_p1);

assign p_neg_t5_fu_413_p2 = (32'd0 - tmp_4_fu_409_p1);

assign p_neg_t_fu_366_p2 = (32'd0 - tmp_10_fu_362_p1);

assign tmp1_fu_713_p0 = n_cast_mid2_cast_reg_1382;

assign tmp1_fu_713_p2 = ($signed({{1'b0}, {tmp1_fu_713_p0}}) * $signed(tmp_reg_1296));

assign tmp2_fu_1220_p2 = (tmp_29_reg_1503_pp0_iter4_reg + tmp_6_mid2_reg_1612);

assign tmp_10_fu_362_p1 = p_lshr_fu_352_p4;

assign tmp_11_fu_382_p1 = p_lshr_f_fu_372_p4;

assign tmp_13_fu_570_p2 = ($signed(tmp_25_reg_1403) * $signed(w_read_reg_1256));

assign tmp_14_fu_641_p2 = (tmp_8_mid2_fu_621_p3 + tmp_13_reg_1419);

assign tmp_15_cast_fu_646_p1 = tmp_14_fu_641_p2;

assign tmp_15_fu_320_p1 = h;

assign tmp_16_fu_682_p2 = (tmp_9_mid2_reg_1436 + tmp_13_reg_1419);

assign tmp_17_cast_fu_686_p1 = tmp_16_fu_682_p2;

assign tmp_17_fu_338_p1 = w;

assign tmp_17_fu_338_p3 = tmp_17_fu_338_p1[32'd31];

assign tmp_18_fu_558_p2 = (tmp_4_mid2_fu_547_p2 + tmp_24_reg_1387);

assign tmp_19_fu_665_p2 = ($signed(tmp_18_reg_1408) * $signed(w_read_reg_1256));

assign tmp_1_fu_386_p3 = ((tmp_17_fu_338_p3[0:0] === 1'b1) ? p_neg_t_fu_366_p2 : tmp_11_fu_382_p1);

assign tmp_20_fu_705_p2 = (tmp_8_mid2_reg_1431 + tmp_19_reg_1453);

assign tmp_21_cast_fu_723_p1 = tmp_20_reg_1475;

assign tmp_22_fu_709_p2 = (tmp_9_mid2_reg_1436 + tmp_19_reg_1453);

assign tmp_23_cast_fu_751_p1 = tmp_22_reg_1481;

assign tmp_23_fu_1137_p1 = p_lshr1_fu_1127_p4;

assign tmp_24_fu_521_p0 = tmp_24_fu_521_p00;

assign tmp_24_fu_521_p00 = n_cast_mid2_reg_1367;

assign tmp_24_fu_521_p2 = ($signed({{1'b0}, {tmp_24_fu_521_p0}}) * $signed(h_read_reg_1264));

assign tmp_25_fu_553_p2 = (tmp_3_mid2_fu_539_p3 + tmp_24_reg_1387);

assign tmp_26_fu_772_p4 = {{in_load_to_int_fu_769_p1[30:23]}};

assign tmp_27_cast_cast_fu_1068_p1 = $signed(tmp_60_fu_1063_p3);

assign tmp_27_fu_1147_p1 = p_lshr_f1_reg_1607;

assign tmp_28_fu_532_p3 = ((exitcond_flatten_reg_1348[0:0] === 1'b1) ? i_s_fu_526_p2 : ap_phi_mux_i_phi_fu_276_p4);

assign tmp_29_fu_741_p2 = ($signed(tmp_1_reg_1290) * $signed(tmp1_reg_1487));

assign tmp_2_cast_fu_453_p1 = tmp_2_reg_1270;

assign tmp_30_fu_789_p4 = {{in_load_1_to_int_fu_786_p1[30:23]}};

assign tmp_31_fu_1224_p2 = (p_mid2_cast_fu_1217_p1 + tmp2_fu_1220_p2);

assign tmp_32_cast_fu_1230_p1 = $signed(tmp_31_fu_1224_p2);

assign tmp_32_fu_1157_p3 = tmp_5_mid1_reg_1590[32'd31];

assign tmp_33_fu_1179_p1 = p_lshr1_mid1_fu_1169_p4;

assign tmp_34_fu_815_p2 = (notrhs_fu_809_p2 | notlhs_fu_803_p2);

assign tmp_35_fu_833_p2 = (notrhs4_fu_827_p2 | notlhs3_fu_821_p2);

assign tmp_36_fu_839_p2 = (tmp_35_fu_833_p2 & tmp_34_fu_815_p2);

assign tmp_38_fu_845_p2 = (tmp_36_fu_839_p2 & grp_fu_296_p2);

assign tmp_39_fu_878_p4 = {{in_load_2_to_int_fu_875_p1[30:23]}};

assign tmp_3_cast_fu_456_p1 = tmp_3_reg_1275;

assign tmp_3_mid2_fu_539_p3 = {{tmp_28_fu_532_p3}, {1'd0}};

assign tmp_40_fu_1198_p1 = p_lshr_f1_mid1_fu_1189_p4;

assign tmp_41_fu_895_p4 = {{in_load_3_to_int_fu_892_p1[30:23]}};

assign tmp_42_fu_782_p1 = in_load_to_int_fu_769_p1[22:0];

assign tmp_43_fu_921_p2 = (notrhs6_fu_915_p2 | notlhs5_fu_909_p2);

assign tmp_44_fu_939_p2 = (notrhs8_fu_933_p2 | notlhs7_fu_927_p2);

assign tmp_45_fu_945_p2 = (tmp_44_fu_939_p2 & tmp_43_fu_921_p2);

assign tmp_47_fu_951_p2 = (tmp_45_fu_945_p2 & grp_fu_296_p2);

assign tmp_48_fu_984_p4 = {{in_load_4_to_int_fu_981_p1[30:23]}};

assign tmp_49_fu_799_p1 = in_load_1_to_int_fu_786_p1[22:0];

assign tmp_4_fu_409_p1 = p_lshr4_fu_399_p4;

assign tmp_4_mid2_fu_547_p2 = (tmp_3_mid2_fu_539_p3 | 32'd1);

assign tmp_50_fu_1001_p4 = {{in_load_5_to_int_fu_998_p1[30:23]}};

assign tmp_51_fu_888_p1 = in_load_2_to_int_fu_875_p1[22:0];

assign tmp_52_fu_1027_p2 = (notrhs1_fu_1021_p2 | notlhs9_fu_1015_p2);

assign tmp_53_fu_1045_p2 = (notrhs2_fu_1039_p2 | notlhs1_fu_1033_p2);

assign tmp_54_fu_1051_p2 = (tmp_53_fu_1045_p2 & tmp_52_fu_1027_p2);

assign tmp_56_fu_1057_p2 = (tmp_54_fu_1051_p2 & grp_fu_296_p2);

assign tmp_57_fu_905_p1 = in_load_3_to_int_fu_892_p1[22:0];

assign tmp_58_fu_994_p1 = in_load_4_to_int_fu_981_p1[22:0];

assign tmp_59_fu_1011_p1 = in_load_5_to_int_fu_998_p1[22:0];

assign tmp_5_fu_1099_p1 = tmp_5_fu_1099_p10;

assign tmp_5_fu_1099_p10 = i_reg_272_pp0_iter4_reg;

assign tmp_5_fu_1099_p2 = ($signed(w_read_reg_1256) * $signed({{1'b0}, {tmp_5_fu_1099_p1}}));

assign tmp_5_mid1_fu_1090_p0 = tmp_5_mid1_fu_1090_p00;

assign tmp_5_mid1_fu_1090_p00 = i_s_reg_1393_pp0_iter3_reg;

assign tmp_5_mid1_fu_1090_p2 = ($signed({{1'b0}, {tmp_5_mid1_fu_1090_p0}}) * $signed(w_read_reg_1256));

assign tmp_60_fu_1063_p3 = ((tmp_56_reg_1579[0:0] === 1'b1) ? max1_reg_1537_pp0_iter3_reg : max2_reg_1555_pp0_iter3_reg);

assign tmp_6_fu_1150_p3 = ((tmp_21_reg_1602[0:0] === 1'b1) ? p_neg_t1_fu_1141_p2 : tmp_27_fu_1147_p1);

assign tmp_6_mid1_fu_1202_p3 = ((tmp_32_fu_1157_p3[0:0] === 1'b1) ? p_neg_t1_mid1_fu_1183_p2 : tmp_40_fu_1198_p1);

assign tmp_6_mid2_fu_1210_p3 = ((exitcond_flatten_reg_1348_pp0_iter5_reg[0:0] === 1'b1) ? tmp_6_mid1_fu_1202_p3 : tmp_6_fu_1150_p3);

assign tmp_7_fu_419_p1 = p_lshr_f6_reg_1285;

assign tmp_8_fu_574_p3 = {{j_reg_284}, {1'd0}};

assign tmp_8_mid1_fu_613_p3 = {{j_1_fu_602_p2}, {1'd0}};

assign tmp_8_mid2_fu_621_p3 = ((tmp_mid1_reg_1359[0:0] === 1'b1) ? tmp_8_mid_fu_588_p3 : tmp_8_mid1_fu_613_p3);

assign tmp_8_mid_fu_588_p3 = ((exitcond_flatten_reg_1348[0:0] === 1'b1) ? 32'd0 : tmp_8_fu_574_p3);

assign tmp_9_fu_582_p2 = (tmp_8_fu_574_p3 | 32'd1);

assign tmp_9_mid1_fu_628_p2 = (tmp_8_mid1_fu_613_p3 | 32'd1);

assign tmp_9_mid2_fu_634_p3 = ((tmp_mid1_reg_1359[0:0] === 1'b1) ? tmp_9_mid_fu_595_p3 : tmp_9_mid1_fu_628_p2);

assign tmp_9_mid_fu_595_p3 = ((exitcond_flatten_reg_1348[0:0] === 1'b1) ? 32'd1 : tmp_9_fu_582_p2);

assign tmp_fu_422_p3 = ((tmp_15_reg_1280[0:0] === 1'b1) ? p_neg_t5_fu_413_p2 : tmp_7_fu_419_p1);

assign tmp_mid1_fu_491_p3 = ((exitcond_flatten_fu_478_p2[0:0] === 1'b1) ? tmp_mid_reg_1339 : tmp_s_fu_468_p2);

assign tmp_mid_fu_459_p2 = (($signed(ch_in_read_reg_1249) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_s_fu_468_p2 = (($signed(n_cast_fu_464_p1) < $signed(ch_in_read_reg_1249)) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_2_cast_reg_1318[32:30] <= 3'b000;
    tmp_3_cast_reg_1323[32:30] <= 3'b000;
    n_cast_mid2_cast_reg_1382[31] <= 1'b0;
    tmp_8_mid2_reg_1431[0] <= 1'b0;
    tmp_9_mid2_reg_1436[0] <= 1'b1;
end

endmodule //max_pool2
